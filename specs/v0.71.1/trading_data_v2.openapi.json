{"openapi":"3.0.0","info":{"title":"Vega data node APIs","version":"v0.71.1"},"servers":[{"url":"https://api.n06.testnet.vega.xyz","description":"n06 (data node)"},{"url":"https://api.n07.testnet.vega.xyz","description":"n07 (data node)"},{"url":"https://api.n08.testnet.vega.xyz","description":"n08 (data node)"},{"url":"https://api.n09.testnet.vega.xyz","description":"n09 (data node)"},{"url":"https://api.n10.testnet.vega.xyz","description":"n10 (data node)"},{"url":"https://api.n11.testnet.vega.xyz","description":"n11 (data node)"}],"paths":{"/api/v2/accounts":{"get":{"parameters":[{"description":"Restrict accounts to those holding balances in this asset ID.","in":"query","name":"filter.assetId","required":false,"schema":{"type":"string"}},{"description":"Restrict accounts to those owned by the parties in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict accounts to those connected to the markets in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict accounts to those connected to any of the types in this list. Pass an empty list for no filter.\n\n - ACCOUNT_TYPE_UNSPECIFIED: Default value\n - ACCOUNT_TYPE_INSURANCE: Insurance pool accounts contain insurance pool funds for a market\n - ACCOUNT_TYPE_SETTLEMENT: Settlement accounts exist only during settlement or mark-to-market\n - ACCOUNT_TYPE_MARGIN: Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nRequired initial margin is allocated to each market from user's general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nVega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change\n - ACCOUNT_TYPE_GENERAL: General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements\n - ACCOUNT_TYPE_FEES_INFRASTRUCTURE: Infrastructure accounts contain fees earned by providing infrastructure on Vega\n - ACCOUNT_TYPE_FEES_LIQUIDITY: Liquidity accounts contain fees earned by providing liquidity on Vega markets\n - ACCOUNT_TYPE_FEES_MAKER: This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place\n - ACCOUNT_TYPE_BOND: This account is created to maintain liquidity providers funds commitments\n - ACCOUNT_TYPE_EXTERNAL: External account represents an external source (deposit/withdrawal)\n - ACCOUNT_TYPE_GLOBAL_INSURANCE: Global insurance account for the asset\n - ACCOUNT_TYPE_GLOBAL_REWARD: Global reward account for the asset\n - ACCOUNT_TYPE_PENDING_TRANSFERS: Per asset account used to store pending transfers (if any)\n - ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES: Per asset reward account for fees paid to makers\n - ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES: Per asset reward account for fees received by makers\n - ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES: Per asset reward account for fees received by liquidity providers\n - ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS: Per asset reward account for market proposers when the market goes above some trading threshold","explode":true,"in":"query","name":"filter.accountTypes","required":false,"schema":{"items":{"enum":["ACCOUNT_TYPE_UNSPECIFIED","ACCOUNT_TYPE_INSURANCE","ACCOUNT_TYPE_SETTLEMENT","ACCOUNT_TYPE_MARGIN","ACCOUNT_TYPE_GENERAL","ACCOUNT_TYPE_FEES_INFRASTRUCTURE","ACCOUNT_TYPE_FEES_LIQUIDITY","ACCOUNT_TYPE_FEES_MAKER","ACCOUNT_TYPE_BOND","ACCOUNT_TYPE_EXTERNAL","ACCOUNT_TYPE_GLOBAL_INSURANCE","ACCOUNT_TYPE_GLOBAL_REWARD","ACCOUNT_TYPE_PENDING_TRANSFERS","ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES","ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS"],"type":"string"},"type":"array"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListAccountsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Accounts"],"description":"Get a list of accounts matching the supplied filter, including their current balances.\nIf a given account has never had a balance, it will be absent from the list.","operationId":"TradingDataService_ListAccounts","summary":"List accounts"}},"/api/v2/asset/{assetId}":{"get":{"parameters":[{"description":"Asset ID to get data for.","in":"path","name":"assetId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetAssetResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Assets"],"description":"Get a single asset using its ID. Use the assets list query to get an asset's ID","operationId":"TradingDataService_GetAsset","summary":"Get asset"}},"/api/v2/assets":{"get":{"parameters":[{"description":"Optional asset ID to list data for.","in":"query","name":"assetId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListAssetsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Assets"],"description":"Get a list of assets using cursor based pagination","operationId":"TradingDataService_ListAssets","summary":"List assets"}},"/api/v2/balance/changes":{"get":{"parameters":[{"description":"Restrict accounts to those holding balances in this asset ID.","in":"query","name":"filter.assetId","required":false,"schema":{"type":"string"}},{"description":"Restrict accounts to those owned by the parties in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict accounts to those connected to the markets in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict accounts to those connected to any of the types in this list. Pass an empty list for no filter.\n\n - ACCOUNT_TYPE_UNSPECIFIED: Default value\n - ACCOUNT_TYPE_INSURANCE: Insurance pool accounts contain insurance pool funds for a market\n - ACCOUNT_TYPE_SETTLEMENT: Settlement accounts exist only during settlement or mark-to-market\n - ACCOUNT_TYPE_MARGIN: Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nRequired initial margin is allocated to each market from user's general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nVega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change\n - ACCOUNT_TYPE_GENERAL: General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements\n - ACCOUNT_TYPE_FEES_INFRASTRUCTURE: Infrastructure accounts contain fees earned by providing infrastructure on Vega\n - ACCOUNT_TYPE_FEES_LIQUIDITY: Liquidity accounts contain fees earned by providing liquidity on Vega markets\n - ACCOUNT_TYPE_FEES_MAKER: This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place\n - ACCOUNT_TYPE_BOND: This account is created to maintain liquidity providers funds commitments\n - ACCOUNT_TYPE_EXTERNAL: External account represents an external source (deposit/withdrawal)\n - ACCOUNT_TYPE_GLOBAL_INSURANCE: Global insurance account for the asset\n - ACCOUNT_TYPE_GLOBAL_REWARD: Global reward account for the asset\n - ACCOUNT_TYPE_PENDING_TRANSFERS: Per asset account used to store pending transfers (if any)\n - ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES: Per asset reward account for fees paid to makers\n - ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES: Per asset reward account for fees received by makers\n - ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES: Per asset reward account for fees received by liquidity providers\n - ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS: Per asset reward account for market proposers when the market goes above some trading threshold","explode":true,"in":"query","name":"filter.accountTypes","required":false,"schema":{"items":{"enum":["ACCOUNT_TYPE_UNSPECIFIED","ACCOUNT_TYPE_INSURANCE","ACCOUNT_TYPE_SETTLEMENT","ACCOUNT_TYPE_MARGIN","ACCOUNT_TYPE_GENERAL","ACCOUNT_TYPE_FEES_INFRASTRUCTURE","ACCOUNT_TYPE_FEES_LIQUIDITY","ACCOUNT_TYPE_FEES_MAKER","ACCOUNT_TYPE_BOND","ACCOUNT_TYPE_EXTERNAL","ACCOUNT_TYPE_GLOBAL_INSURANCE","ACCOUNT_TYPE_GLOBAL_REWARD","ACCOUNT_TYPE_PENDING_TRANSFERS","ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES","ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS"],"type":"string"},"type":"array"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}},{"in":"query","name":"dateRange.startTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"in":"query","name":"dateRange.endTimestamp","required":false,"schema":{"format":"int64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListBalanceChangesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Accounts"],"description":"Get a list of the changes in account balances over a period of time.\n\nAn account is defined as a set of asset_id, type, party_id, and market_id.\n- Every account has an associated asset and type.\n- Certain account types such as the global reward pool for example, do not have an associated party.\n  These are denoted by the special party ID 'network'\n- Certain account types do not have an associated market such as the general party accounts, for example.\n  These are denoted by the special market ID '' (the empty string)\n\n`ListBalanceChangesRequest` will return a list of `AggregatedBalance` records,\nwith a row for each block at which a given account's balance changes.","operationId":"TradingDataService_ListBalanceChanges","summary":"List balance changes"}},"/api/v2/candle":{"get":{"parameters":[{"description":"Candle ID to retrieve candle data for, required field.","in":"query","name":"candleId","required":true,"schema":{"type":"string"}},{"description":"Timestamp to retrieve candles since, in nanoseconds since the epoch.","in":"query","name":"fromTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"description":"Timestamp to retrieve candles to, in nanoseconds since the epoch.","in":"query","name":"toTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListCandleDataResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Candles"],"description":"Get a list of candle data for a given candle ID. You can get a candle ID from the list candle intervals query","operationId":"TradingDataService_ListCandleData","summary":"List candle data"}},"/api/v2/candle/intervals":{"get":{"parameters":[{"description":"Unique ID for the market to list candle intervals for.","in":"query","name":"marketId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListCandleIntervalsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Candles"],"description":"Get a list of all available intervals for a given market along with the corresponding candle ID","operationId":"TradingDataService_ListCandleIntervals","summary":"List candle intervals"}},"/api/v2/checkpoints":{"get":{"parameters":[{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListCheckpointsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a list of information about checkpoints generated by the network","operationId":"TradingDataService_ListCheckpoints","summary":"List checkpoints"}},"/api/v2/delegations":{"get":{"parameters":[{"description":"Party ID to list delegations for, if provided.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Node ID to list delegations for, if provided.","in":"query","name":"nodeId","required":false,"schema":{"type":"string"}},{"description":"Epoch ID to list delegations for, if provided.","in":"query","name":"epochId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListDelegationsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a list of the token delegations on the network","operationId":"TradingDataService_ListDelegations","summary":"List delegations"}},"/api/v2/deposit/{id}":{"get":{"parameters":[{"description":"Deposit ID, which can be obtained using the List Deposits query.","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetDepositResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Assets"],"description":"Get a deposit by its ID","operationId":"TradingDataService_GetDeposit","summary":"Get deposit"}},"/api/v2/deposits":{"get":{"parameters":[{"description":"Party ID whose deposits are to be retrieved.\nIf not provided, deposits for all parties will be provided.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}},{"in":"query","name":"dateRange.startTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"in":"query","name":"dateRange.endTimestamp","required":false,"schema":{"format":"int64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListDepositsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Assets"],"description":"Get a list of deposits for a given party.\nIf a date range is provided, filtering will be based on the last time the deposit\nhas been updated in Vega time.","operationId":"TradingDataService_ListDeposits","summary":"List deposits"}},"/api/v2/epoch":{"get":{"parameters":[{"description":"Epoch ID to get, if provided. If omitted, data for the current epoch is returned.","in":"query","name":"id","required":false,"schema":{"format":"uint64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetEpochResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get data for a specific epoch, if ID is omitted, it retrieves the current epoch","operationId":"TradingDataService_GetEpoch","summary":"Get epoch"}},"/api/v2/erc20/asset/limits/bundle":{"get":{"parameters":[{"description":"Proposal ID of the asset update proposal.","in":"query","name":"proposalId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetERC20SetAssetLimitsBundleResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["ERC20 bridge"],"description":"Get the signature bundle to update the token limits. These are `maxLifetimeDeposit` and `withdrawThreshold` for a given ERC20 token that is\nalready allowlisted in the collateral bridge.","operationId":"TradingDataService_GetERC20SetAssetLimitsBundle","summary":"Get ERC20 set asset limits bundle"}},"/api/v2/erc20/asset/list/bundle":{"get":{"parameters":[{"description":"Asset ID of the asset bundle requested.","in":"query","name":"assetId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetERC20ListAssetBundleResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["ERC20 bridge"],"description":"Get the signatures bundle to allowlist an ERC20 token in the collateral bridge","operationId":"TradingDataService_GetERC20ListAssetBundle","summary":"Get ERC20 list asset bundle"}},"/api/v2/erc20/asset/withdrawal/bundle":{"get":{"parameters":[{"description":"Withdrawal ID to retrieve.","in":"query","name":"withdrawalId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetERC20WithdrawalApprovalResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["ERC20 bridge"],"description":"Get the signature bundle to finalize a withdrawal on ethereum","operationId":"TradingDataService_GetERC20WithdrawalApproval","summary":"Get ERC20 withdrawal approval"}},"/api/v2/erc20/multisigcontrol/signer/added/bundles":{"get":{"parameters":[{"description":"Node ID of the validator for which a signature bundle is required.","in":"query","name":"nodeId","required":false,"schema":{"type":"string"}},{"description":"Ethereum address of the validator that will submit the bundle.","in":"query","name":"submitter","required":false,"schema":{"type":"string"}},{"description":"Epoch in which the bundle was generated, i.e. the epoch in which the node was promoted to consensus validator.","in":"query","name":"epochSeq","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListERC20MultiSigSignerAddedBundlesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["ERC20 bridge"],"description":"Get a list of the signature bundles to add a particular validator to the signer list of the multisig contract","operationId":"TradingDataService_ListERC20MultiSigSignerAddedBundles","summary":"List ERC20 multi-sig signer added bundles"}},"/api/v2/erc20/multisigcontrol/signer/removed/bundles":{"get":{"parameters":[{"description":"Node ID of the validator of which a signature bundle is required.","in":"query","name":"nodeId","required":false,"schema":{"type":"string"}},{"description":"Ethereum address of the validator that will submit the bundle.","in":"query","name":"submitter","required":false,"schema":{"type":"string"}},{"description":"Epoch in which the bundle was generated, i.e. the epoch in which the node was demoted from a consensus validator.","in":"query","name":"epochSeq","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListERC20MultiSigSignerRemovedBundlesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["ERC20 bridge"],"description":"Get a list of the signature bundles to remove a particular validator from signer list of the multisig contract","operationId":"TradingDataService_ListERC20MultiSigSignerRemovedBundles","summary":"List ERC20 multi-sig signer removed bundles"}},"/api/v2/estimate/fee":{"get":{"parameters":[{"description":"Market ID, used to specify the fee factors.","in":"query","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Price at which the potential order is expected to trade.","in":"query","name":"price","required":true,"schema":{"type":"string"}},{"description":"Size at which the potential order is expected to trade.","in":"query","name":"size","required":true,"schema":{"format":"uint64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2EstimateFeeResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Orders"],"description":"Estimate the fee that would be incurred for submitting an order\nwith the specified price and size on the market.","operationId":"TradingDataService_EstimateFee","summary":"Estimate fee"}},"/api/v2/estimate/margin":{"get":{"parameters":[{"description":"Market ID for the order.","in":"query","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Party ID of the order.","in":"query","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Order side - indicator for Seller or Buyer side.\n\n - SIDE_UNSPECIFIED: Default value, always invalid\n - SIDE_BUY: Buy order\n - SIDE_SELL: Sell order","in":"query","name":"side","required":false,"schema":{"default":"SIDE_UNSPECIFIED","enum":["SIDE_UNSPECIFIED","SIDE_BUY","SIDE_SELL"],"type":"string"}},{"description":"Type of the order.\n\n - TYPE_UNSPECIFIED: Default value, always invalid\n - TYPE_LIMIT: Used for Limit orders\n - TYPE_MARKET: Used for Market orders\n - TYPE_NETWORK: Used for orders where the initiating party is the network (with distressed parties)","in":"query","name":"type","required":false,"schema":{"default":"TYPE_UNSPECIFIED","enum":["TYPE_UNSPECIFIED","TYPE_LIMIT","TYPE_MARKET","TYPE_NETWORK"],"type":"string"}},{"description":"Size of order.","in":"query","name":"size","required":true,"schema":{"format":"uint64","type":"string"}},{"description":"Price of the asset.","in":"query","name":"price","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2EstimateMarginResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Orders"],"description":"Estimate the margin that would be required for submitting this order","operationId":"TradingDataService_EstimateMargin","summary":"Estimate margin"}},"/api/v2/estimate/position":{"get":{"parameters":[{"description":"Market ID.","in":"query","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Open volume.\nThis field is an signed integer (negative for short position) passed as a string and needs to be scaled using the market's position decimal places.","in":"query","name":"openVolume","required":true,"schema":{"format":"int64","type":"string"}},{"description":"Optional argument specifying collateral available for the position, if provided then response will contain the liquidation price estimate.","in":"query","name":"collateralAvailable","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2EstimatePositionResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Positions"],"description":"Estimate the margin that would be required for maintaining the specified position.\nIf the optional collateral available argument is supplied, the response also contains the estimate of the liquidation price.","operationId":"TradingDataService_EstimatePosition","summary":"Estimate position"}},"/api/v2/governance":{"get":{"parameters":[{"description":"Proposal ID to get governance data for, if provided.","in":"query","name":"proposalId","required":false,"schema":{"type":"string"}},{"description":"Reference to get proposal data for, if provided.","in":"query","name":"reference","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetGovernanceDataResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Governance"],"description":"Get a single proposal's details","operationId":"TradingDataService_GetGovernanceData","summary":"Get governance data"}},"/api/v2/governances":{"get":{"parameters":[{"description":"Proposal state to list governance data for, if provided.\n\n - STATE_UNSPECIFIED: Default value, always invalid\n - STATE_FAILED: Proposal enactment has failed - even though proposal has passed, its execution could not be performed\n - STATE_OPEN: Proposal is open for voting\n - STATE_PASSED: Proposal has gained enough support to be executed\n - STATE_REJECTED: Proposal wasn't accepted i.e. proposal terms failed validation due to wrong configuration or failed to meet network requirements.\n - STATE_DECLINED: Proposal didn't get enough votes, e.g. either failed to gain required participation or majority level.\n - STATE_ENACTED: Proposal enacted\n - STATE_WAITING_FOR_NODE_VOTE: Waiting for node validation of the proposal","in":"query","name":"proposalState","required":false,"schema":{"default":"STATE_UNSPECIFIED","enum":["STATE_UNSPECIFIED","STATE_FAILED","STATE_OPEN","STATE_PASSED","STATE_REJECTED","STATE_DECLINED","STATE_ENACTED","STATE_WAITING_FOR_NODE_VOTE"],"type":"string"}},{"description":"Proposal type to list governance data for, if provided.\n\n - TYPE_ALL: List all proposals\n - TYPE_NEW_MARKET: List new market proposals\n - TYPE_UPDATE_MARKET: List update market proposals\n - TYPE_NETWORK_PARAMETERS: List change Vega network parameter proposals\n - TYPE_NEW_ASSET: New asset proposals\n - TYPE_NEW_FREE_FORM: Proposals for creating a new free form proposal\n - TYPE_UPDATE_ASSET: Update asset proposals","in":"query","name":"proposalType","required":false,"schema":{"default":"TYPE_UNSPECIFIED","enum":["TYPE_UNSPECIFIED","TYPE_ALL","TYPE_NEW_MARKET","TYPE_UPDATE_MARKET","TYPE_NETWORK_PARAMETERS","TYPE_NEW_ASSET","TYPE_NEW_FREE_FORM","TYPE_UPDATE_ASSET"],"type":"string"}},{"description":"Proposer party ID to list governance data for, if provided.","in":"query","name":"proposerPartyId","required":false,"schema":{"type":"string"}},{"description":"Proposal reference to list governance data for, if provided.","in":"query","name":"proposalReference","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListGovernanceDataResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Governance"],"description":"Get a list of proposals","operationId":"TradingDataService_ListGovernanceData","summary":"List governance data"}},"/api/v2/info":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2InfoResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Node information"],"description":"Get information about the data node.\nResponse contains a semver formatted version of the data node and the commit hash, from which the data node was built","operationId":"TradingDataService_Info","summary":"Data node information"}},"/api/v2/ledgerentry/export":{"get":{"parameters":[{"description":"Party ID to export ledger entries for.","in":"query","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Optional: Asset ID.","in":"query","name":"assetId","required":true,"schema":{"type":"string"}},{"in":"query","name":"dateRange.startTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"in":"query","name":"dateRange.endTimestamp","required":false,"schema":{"format":"int64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/apiHttpBody"}},"title":"Stream result of apiHttpBody","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Ledger entries"],"description":"Export ledger entries records ledger entries to a csv file.\nMay or may not contain a date range - if no date range is provided, list all records for all times.\n\nLedger entries can be exported by:\n  - export ledger entries for a single party for a given asset within a given time range\n  - export ledger entries for a single party for a given asset for all times\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME\nbuf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE","operationId":"TradingDataService_ExportLedgerEntries","summary":"Export ledger entries"}},"/api/v2/ledgerentry/history":{"get":{"parameters":[{"description":"Determines whether an entry must have accounts matching both the account_from_filter\nand the account_to_filter. If set to 'true', entries must have matches in both filters.\nIf set to `false`, entries matching only the account_from_filter or the account_to_filter will also be included.","in":"query","name":"filter.closeOnAccountFilters","required":false,"schema":{"type":"boolean"}},{"description":"Restrict accounts to those holding balances in this asset ID.","in":"query","name":"filter.fromAccountFilter.assetId","required":false,"schema":{"type":"string"}},{"description":"Restrict accounts to those owned by the parties in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.fromAccountFilter.partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict accounts to those connected to the markets in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.fromAccountFilter.marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict accounts to those connected to any of the types in this list. Pass an empty list for no filter.\n\n - ACCOUNT_TYPE_UNSPECIFIED: Default value\n - ACCOUNT_TYPE_INSURANCE: Insurance pool accounts contain insurance pool funds for a market\n - ACCOUNT_TYPE_SETTLEMENT: Settlement accounts exist only during settlement or mark-to-market\n - ACCOUNT_TYPE_MARGIN: Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nRequired initial margin is allocated to each market from user's general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nVega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change\n - ACCOUNT_TYPE_GENERAL: General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements\n - ACCOUNT_TYPE_FEES_INFRASTRUCTURE: Infrastructure accounts contain fees earned by providing infrastructure on Vega\n - ACCOUNT_TYPE_FEES_LIQUIDITY: Liquidity accounts contain fees earned by providing liquidity on Vega markets\n - ACCOUNT_TYPE_FEES_MAKER: This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place\n - ACCOUNT_TYPE_BOND: This account is created to maintain liquidity providers funds commitments\n - ACCOUNT_TYPE_EXTERNAL: External account represents an external source (deposit/withdrawal)\n - ACCOUNT_TYPE_GLOBAL_INSURANCE: Global insurance account for the asset\n - ACCOUNT_TYPE_GLOBAL_REWARD: Global reward account for the asset\n - ACCOUNT_TYPE_PENDING_TRANSFERS: Per asset account used to store pending transfers (if any)\n - ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES: Per asset reward account for fees paid to makers\n - ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES: Per asset reward account for fees received by makers\n - ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES: Per asset reward account for fees received by liquidity providers\n - ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS: Per asset reward account for market proposers when the market goes above some trading threshold","explode":true,"in":"query","name":"filter.fromAccountFilter.accountTypes","required":false,"schema":{"items":{"enum":["ACCOUNT_TYPE_UNSPECIFIED","ACCOUNT_TYPE_INSURANCE","ACCOUNT_TYPE_SETTLEMENT","ACCOUNT_TYPE_MARGIN","ACCOUNT_TYPE_GENERAL","ACCOUNT_TYPE_FEES_INFRASTRUCTURE","ACCOUNT_TYPE_FEES_LIQUIDITY","ACCOUNT_TYPE_FEES_MAKER","ACCOUNT_TYPE_BOND","ACCOUNT_TYPE_EXTERNAL","ACCOUNT_TYPE_GLOBAL_INSURANCE","ACCOUNT_TYPE_GLOBAL_REWARD","ACCOUNT_TYPE_PENDING_TRANSFERS","ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES","ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS"],"type":"string"},"type":"array"}},{"description":"Restrict accounts to those holding balances in this asset ID.","in":"query","name":"filter.toAccountFilter.assetId","required":false,"schema":{"type":"string"}},{"description":"Restrict accounts to those owned by the parties in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.toAccountFilter.partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict accounts to those connected to the markets in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.toAccountFilter.marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict accounts to those connected to any of the types in this list. Pass an empty list for no filter.\n\n - ACCOUNT_TYPE_UNSPECIFIED: Default value\n - ACCOUNT_TYPE_INSURANCE: Insurance pool accounts contain insurance pool funds for a market\n - ACCOUNT_TYPE_SETTLEMENT: Settlement accounts exist only during settlement or mark-to-market\n - ACCOUNT_TYPE_MARGIN: Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nRequired initial margin is allocated to each market from user's general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nVega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change\n - ACCOUNT_TYPE_GENERAL: General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements\n - ACCOUNT_TYPE_FEES_INFRASTRUCTURE: Infrastructure accounts contain fees earned by providing infrastructure on Vega\n - ACCOUNT_TYPE_FEES_LIQUIDITY: Liquidity accounts contain fees earned by providing liquidity on Vega markets\n - ACCOUNT_TYPE_FEES_MAKER: This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place\n - ACCOUNT_TYPE_BOND: This account is created to maintain liquidity providers funds commitments\n - ACCOUNT_TYPE_EXTERNAL: External account represents an external source (deposit/withdrawal)\n - ACCOUNT_TYPE_GLOBAL_INSURANCE: Global insurance account for the asset\n - ACCOUNT_TYPE_GLOBAL_REWARD: Global reward account for the asset\n - ACCOUNT_TYPE_PENDING_TRANSFERS: Per asset account used to store pending transfers (if any)\n - ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES: Per asset reward account for fees paid to makers\n - ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES: Per asset reward account for fees received by makers\n - ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES: Per asset reward account for fees received by liquidity providers\n - ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS: Per asset reward account for market proposers when the market goes above some trading threshold","explode":true,"in":"query","name":"filter.toAccountFilter.accountTypes","required":false,"schema":{"items":{"enum":["ACCOUNT_TYPE_UNSPECIFIED","ACCOUNT_TYPE_INSURANCE","ACCOUNT_TYPE_SETTLEMENT","ACCOUNT_TYPE_MARGIN","ACCOUNT_TYPE_GENERAL","ACCOUNT_TYPE_FEES_INFRASTRUCTURE","ACCOUNT_TYPE_FEES_LIQUIDITY","ACCOUNT_TYPE_FEES_MAKER","ACCOUNT_TYPE_BOND","ACCOUNT_TYPE_EXTERNAL","ACCOUNT_TYPE_GLOBAL_INSURANCE","ACCOUNT_TYPE_GLOBAL_REWARD","ACCOUNT_TYPE_PENDING_TRANSFERS","ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES","ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS"],"type":"string"},"type":"array"}},{"description":"List of transfer types that is used for filtering sender and receiver accounts.\n\n - TRANSFER_TYPE_UNSPECIFIED: Default value, always invalid\n - TRANSFER_TYPE_LOSS: Funds deducted after final settlement loss\n - TRANSFER_TYPE_WIN: Funds added to general account after final settlement gain\n - TRANSFER_TYPE_MTM_LOSS: Funds deducted from margin account after mark to market loss\n - TRANSFER_TYPE_MTM_WIN: Funds added to margin account after mark to market gain\n - TRANSFER_TYPE_MARGIN_LOW: Funds transferred from general account to meet margin requirement\n - TRANSFER_TYPE_MARGIN_HIGH: Excess margin amount returned to general account\n - TRANSFER_TYPE_MARGIN_CONFISCATED: Margin confiscated from margin account to fulfil closeout\n - TRANSFER_TYPE_MAKER_FEE_PAY: Maker fee paid from general account\n - TRANSFER_TYPE_MAKER_FEE_RECEIVE: Maker fee received into general account\n - TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY: Infrastructure fee paid from general account\n - TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE: Infrastructure fee received into general account\n - TRANSFER_TYPE_LIQUIDITY_FEE_PAY: Liquidity fee paid from general account\n - TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE: Liquidity fee received into general account\n - TRANSFER_TYPE_BOND_LOW: Bond account funded from general account to meet required bond amount\n - TRANSFER_TYPE_BOND_HIGH: Bond returned to general account after liquidity commitment was reduced\n - TRANSFER_TYPE_WITHDRAW: Funds withdrawn from general account\n - TRANSFER_TYPE_DEPOSIT: Funds deposited to general account\n - TRANSFER_TYPE_BOND_SLASHING: Bond account penalised when liquidity commitment not met\n - TRANSFER_TYPE_REWARD_PAYOUT: Reward payout received\n - TRANSFER_TYPE_TRANSFER_FUNDS_SEND: Internal Vega network instruction for the collateral engine to move funds from a user's general account into the pending transfers pool\n - TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE: Internal Vega network instruction for the collateral engine to move funds from the pending transfers pool account into the destination account\n - TRANSFER_TYPE_CLEAR_ACCOUNT: Market-related accounts emptied because market has closed\n - TRANSFER_TYPE_CHECKPOINT_BALANCE_RESTORE: Balances restored after network restart","explode":true,"in":"query","name":"filter.transferTypes","required":false,"schema":{"items":{"enum":["TRANSFER_TYPE_UNSPECIFIED","TRANSFER_TYPE_LOSS","TRANSFER_TYPE_WIN","TRANSFER_TYPE_MTM_LOSS","TRANSFER_TYPE_MTM_WIN","TRANSFER_TYPE_MARGIN_LOW","TRANSFER_TYPE_MARGIN_HIGH","TRANSFER_TYPE_MARGIN_CONFISCATED","TRANSFER_TYPE_MAKER_FEE_PAY","TRANSFER_TYPE_MAKER_FEE_RECEIVE","TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY","TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE","TRANSFER_TYPE_LIQUIDITY_FEE_PAY","TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE","TRANSFER_TYPE_BOND_LOW","TRANSFER_TYPE_BOND_HIGH","TRANSFER_TYPE_WITHDRAW","TRANSFER_TYPE_DEPOSIT","TRANSFER_TYPE_BOND_SLASHING","TRANSFER_TYPE_REWARD_PAYOUT","TRANSFER_TYPE_TRANSFER_FUNDS_SEND","TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE","TRANSFER_TYPE_CLEAR_ACCOUNT","TRANSFER_TYPE_CHECKPOINT_BALANCE_RESTORE"],"type":"string"},"type":"array"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}},{"in":"query","name":"dateRange.startTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"in":"query","name":"dateRange.endTimestamp","required":false,"schema":{"format":"int64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListLedgerEntriesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Ledger entries"],"description":"Get a list of ledger entries within the given date range.\nThis query requests and sums the number of ledger entries from a given subset of accounts, specified via the 'filter' argument.\nIt returns a time series - implemented as a list of AggregateLedgerEntry structs - with a row for every time\nthe summed ledger entries of the set of specified accounts changes.\nEach account filter must contain no more than one party ID.\n\nEntries can be filtered by:\n  - the sending account (market ID, asset ID, account type)\n  - receiving account (market ID, asset ID, account type)\n  - sending AND receiving account\n  - transfer type either in addition to the above filters or as a standalone option","operationId":"TradingDataService_ListLedgerEntries","summary":"List ledger entries"}},"/api/v2/liquidity/provisions":{"get":{"parameters":[{"description":"Target market for the liquidity provision orders.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}},{"description":"Party which submitted the liquidity provision orders.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Reference of the liquidity provision.","in":"query","name":"reference","required":false,"schema":{"type":"string"}},{"description":"Indicator if the listed liquidity provision orders will include live orders or not.","in":"query","name":"live","required":false,"schema":{"type":"boolean"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListLiquidityProvisionsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Liquidity provisions"],"description":"Get a list of liquidity provisions for a given market using a cursor based pagination","operationId":"TradingDataService_ListLiquidityProvisions","summary":"List liquidity provisions"}},"/api/v2/margin/levels":{"get":{"parameters":[{"description":"Party ID for which to list the margin levels.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Market ID for which to list the margin levels.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListMarginLevelsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Margin levels"],"description":"Get a list margin levels that match the provided criteria. If no filter is provided, all margin levels will be returned.","operationId":"TradingDataService_ListMarginLevels","summary":"List margin levels"}},"/api/v2/market/data/{marketId}":{"get":{"parameters":[{"description":"Market ID to request data history for, required field.","in":"path","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Optional Unix time in nanoseconds.","in":"query","name":"startTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"description":"Optional Unix time in nanoseconds.","in":"query","name":"endTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetMarketDataHistoryByIDResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Get market data history for a market ID between given dates","operationId":"TradingDataService_GetMarketDataHistoryByID","summary":"Get market data history"}},"/api/v2/market/data/{marketId}/latest":{"get":{"parameters":[{"description":"Market ID to retrieve market data for, required field.","in":"path","name":"marketId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetLatestMarketDataResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Get the latest market data for a given market","operationId":"TradingDataService_GetLatestMarketData","summary":"Get latest market data"}},"/api/v2/market/depth/{marketId}/latest":{"get":{"parameters":[{"description":"Market ID to request market depth for, required field.","in":"path","name":"marketId","required":true,"schema":{"type":"string"}},{"description":"Optional field to indicate the maximum market depth.","in":"query","name":"maxDepth","required":false,"schema":{"format":"uint64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetLatestMarketDepthResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Get the latest market depth for a given market","operationId":"TradingDataService_GetLatestMarketDepth","summary":"Get latest market depth"}},"/api/v2/market/{marketId}":{"get":{"parameters":[{"description":"Market ID of the market to retrieve data for.","in":"path","name":"marketId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetMarketResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Get information about a specific market using its ID. Use the market lists query to get a market's ID","operationId":"TradingDataService_GetMarket","summary":"Get market"}},"/api/v2/market/{marketId}/trade/latest":{"get":{"parameters":[{"description":"Market ID to retrieve the last trade for, required field.","in":"path","name":"marketId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetLastTradeResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Trades"],"description":"Get latest trade","operationId":"TradingDataService_GetLastTrade","summary":"Get latest trade"}},"/api/v2/markets":{"get":{"parameters":[{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}},{"description":"Whether or not to include settled markets in the response; default to true if not specified.","in":"query","name":"includeSettled","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListMarketsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Get a list of markets using a cursor based pagination","operationId":"TradingDataService_ListMarkets","summary":"List markets"}},"/api/v2/markets/data":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListLatestMarketDataResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Get a list of the latest market data for every market","operationId":"TradingDataService_ListLatestMarketData","summary":"List latest market data"}},"/api/v2/network/data":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetNetworkDataResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get data regarding the nodes of the network","operationId":"TradingDataService_GetNetworkData","summary":"Get network data"}},"/api/v2/network/limits":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetNetworkLimitsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get the current network limits, for example: is bootstrapping finished, are proposals enabled etc.","operationId":"TradingDataService_GetNetworkLimits","summary":"Get network limits"}},"/api/v2/network/parameters":{"get":{"parameters":[{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListNetworkParametersResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a list of the network parameters","operationId":"TradingDataService_ListNetworkParameters","summary":"List network parameters"}},"/api/v2/network/parameters/{key}":{"get":{"parameters":[{"description":"Key identifying the network parameter.","in":"path","name":"key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetNetworkParameterResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a single network parameter","operationId":"TradingDataService_GetNetworkParameter","summary":"Get network parameter"}},"/api/v2/networkhistory":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetNetworkHistoryStatusResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network history"],"description":"Get information about the current state of network history\nResponse contains the network history status","operationId":"TradingDataService_GetNetworkHistoryStatus","summary":"Network history status"}},"/api/v2/networkhistory/bootstrap":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetNetworkHistoryBootstrapPeersResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network history"],"description":"Get the bootstrap peers for data nodes.\nResponse contains the bootstrap peers","operationId":"TradingDataService_GetNetworkHistoryBootstrapPeers","summary":"Network history bootstrap peers"}},"/api/v2/networkhistory/export":{"get":{"parameters":[{"description":"Block to begin exporting from. Must be the first block of a history segment,\nwhich by default are 1000 blocks each; in that case - 1, 1001, 2001 etc. are valid values.\nThis can be checked by first calling the API to list all network history segments.","in":"query","name":"fromBlock","required":false,"schema":{"format":"int64","type":"string"}},{"description":"Last block to export up to and including. Must be the last block of a history segment\nwhich by default are 1000 blocks each; in that case - 1000, 2000, 3000 etc. are valid values.\nThis can be checked by first calling the API to list all network history segments.","in":"query","name":"toBlock","required":false,"schema":{"format":"int64","type":"string"}},{"description":"Table to export data from.","in":"query","name":"table","required":false,"schema":{"default":"TABLE_UNSPECIFIED","enum":["TABLE_UNSPECIFIED","TABLE_BALANCES","TABLE_CHECKPOINTS","TABLE_DELEGATIONS","TABLE_LEDGER","TABLE_ORDERS","TABLE_TRADES","TABLE_MARKET_DATA","TABLE_MARGIN_LEVELS","TABLE_POSITIONS","TABLE_LIQUIDITY_PROVISIONS","TABLE_MARKETS","TABLE_DEPOSITS","TABLE_WITHDRAWALS","TABLE_BLOCKS","TABLE_REWARDS"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/apiHttpBody"}},"title":"Stream result of apiHttpBody","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network history"],"description":"Export CSV table data from network history between two block heights.\n\nThe requested block heights must fall on network history segment boundaries, which can\nbe discovered by calling the API to list all network history segments. By default\nsegments contain 1000 blocks. In that case ranges such as (1, 1000), (1001, 2000), (1, 3000)\nwould all fall on segment boundaries and be valid.\n\nThe generated CSV file is compressed into a ZIP file and returned, with the file name\nin the following format: [chain id]-[table name]-[start block]-[end block].zip\n\nIn gRPC, results are returned in a chunked stream of base64 encoded data.\n\nThrough the REST gateway, the base64 data chunks are decoded and streamed as a\n`content-type: application/zip` HTTP response.\n\nThe CSV exported data uses a comma as a DELIMITER between fields, and \" for QUOTE-ing fields.\n\nIf a value contains any of: DELIMITER, QUOTE, carriage return, or line feed then the whole\nvalue is prefixed and suffixed by the QUOTE character and any occurrence within\nthe value of a QUOTE character preceded by another QUOTE.\n\nA NULL is output as the NULL parameter string and is not quoted, while a non-NULL value\nmatching the NULL parameter string is quoted.\n\nFor example, with the default settings, a NULL is written as an unquoted empty string,\nwhile an empty string data value is written with double quotes.\n\nNote that CSV files produced may contain quoted values containing embedded carriage returns and line feeds.\nThus the files are not strictly one line per table row like text-format files.\n\nThe first row of the CSV file is a header that describes the contents of each column\nin subsequent rows.\n\nUsually the ZIP file will contain only a single CSV file. However it is possible that\nthe (from_block, to_block) request spans over a range of blocks in which the underlying\nschema of the database changes. For example, a column may have been added, removed, or renamed.\n\nIf this happens, the CSV file will be split at the point of the schema change and the zip\nfile will contain multiple CSV files, with a potentially different set of headers. The\n'version' number of the database schema is part of the in the CSV filename:\n\n [chain id]-[table name]-[schema version]-[start block]-[end block].zip\n\nFor example, a zip file might be called mainnet-sometable-000001-003000.zip\n\nAnd contain two CSV files: mainnet-sometable-1-000001-002000.csv:\n\ntimestamp, value\n1, foo\n2, bar\n\nAnd mainnet-sometable-2-002001-003000.csv:\n\ntimestamp, value, extra_value\n3, baz, apple\n\nIt is worth noting that the schema will not change within a single network history segment.\nbuf:lint:ignore RPC_RESPONSE_STANDARD_NAME\nbuf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE","operationId":"TradingDataService_ExportNetworkHistory","summary":"Export network history as CSV"}},"/api/v2/networkhistory/segments":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListAllNetworkHistorySegmentsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network history"],"description":"Get a list of all history segments stored by the data node currently connected to","operationId":"TradingDataService_ListAllNetworkHistorySegments","summary":"List all network history segments"}},"/api/v2/node/signatures":{"get":{"parameters":[{"description":"Resource ID to list signatures for, required field.","in":"query","name":"id","required":true,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListNodeSignaturesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["ERC20 bridge"],"description":"Get a list of aggregate signatures from all the nodes of the network","operationId":"TradingDataService_ListNodeSignatures","summary":"List node signatures"}},"/api/v2/node/{id}":{"get":{"parameters":[{"description":"Node ID to get data for.","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetNodeResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get information about a given node","operationId":"TradingDataService_GetNode","summary":"Get node"}},"/api/v2/nodes":{"get":{"parameters":[{"description":"Epoch number to list nodes for, if provided.","in":"query","name":"epochSeq","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListNodesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a list of the nodes on the network along with the related information.","operationId":"TradingDataService_ListNodes","summary":"List nodes"}},"/api/v2/oracle/data":{"get":{"parameters":[{"description":"Oracle spec ID to list data for.","in":"query","name":"oracleSpecId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListOracleDataResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Data sources"],"description":"Get a list of all oracle data","operationId":"TradingDataService_ListOracleData","summary":"List oracle data"}},"/api/v2/oracle/spec/{oracleSpecId}":{"get":{"parameters":[{"description":"Oracle spec ID to request data for.","in":"path","name":"oracleSpecId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetOracleSpecResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Data sources"],"description":"Get an oracle spec by ID. Use the oracle spec list to query for oracle spec IDs","operationId":"TradingDataService_GetOracleSpec","summary":"Get oracle spec"}},"/api/v2/oracle/specs":{"get":{"parameters":[{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListOracleSpecsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Data sources"],"description":"Get a list of specs for an oracle","operationId":"TradingDataService_ListOracleSpecs","summary":"List oracle specs"}},"/api/v2/order/versions/{orderId}":{"get":{"parameters":[{"description":"Order ID to list versions for.","in":"path","name":"orderId","required":true,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListOrderVersionsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Orders"],"description":"Get a list of all versions of an order in the order history","operationId":"TradingDataService_ListOrderVersions","summary":"List order versions"}},"/api/v2/order/{orderId}":{"get":{"parameters":[{"description":"Order ID to retrieve order information for.","in":"path","name":"orderId","required":true,"schema":{"type":"string"}},{"description":"Optional version of the order.","in":"query","name":"version","required":false,"schema":{"format":"int32","type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetOrderResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Orders"],"description":"Get the current version of an order, or optionally provide a version ID to retrieve a given version if order was amended.","operationId":"TradingDataService_GetOrder","summary":"Get order"}},"/api/v2/orders":{"get":{"parameters":[{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}},{"description":"List of order statuses the orders can be filtered by.\n\n - STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_ACTIVE: Used for active unfilled or partially filled orders\n - STATUS_EXPIRED: Used for expired GTT orders\n - STATUS_CANCELLED: Used for orders cancelled by the party that created the order\n - STATUS_STOPPED: Used for unfilled FOK or IOC orders, and for orders that were stopped by the network\n - STATUS_FILLED: Used for closed fully filled orders\n - STATUS_REJECTED: Used for orders when not enough collateral was available to fill the margin requirements\n - STATUS_PARTIALLY_FILLED: Used for closed partially filled IOC orders\n - STATUS_PARKED: Order has been removed from the order book and has been parked,\nthis applies to pegged orders and liquidity orders (orders created from a liquidity provision shape)","explode":true,"in":"query","name":"filter.statuses","required":false,"schema":{"items":{"enum":["STATUS_UNSPECIFIED","STATUS_ACTIVE","STATUS_EXPIRED","STATUS_CANCELLED","STATUS_STOPPED","STATUS_FILLED","STATUS_REJECTED","STATUS_PARTIALLY_FILLED","STATUS_PARKED"],"type":"string"},"type":"array"}},{"description":"List of order types the orders can be filtered by.\n\n - TYPE_UNSPECIFIED: Default value, always invalid\n - TYPE_LIMIT: Used for Limit orders\n - TYPE_MARKET: Used for Market orders\n - TYPE_NETWORK: Used for orders where the initiating party is the network (with distressed parties)","explode":true,"in":"query","name":"filter.types","required":false,"schema":{"items":{"enum":["TYPE_UNSPECIFIED","TYPE_LIMIT","TYPE_MARKET","TYPE_NETWORK"],"type":"string"},"type":"array"}},{"description":"List of timings the orders can be filtered by.\n\n - TIME_IN_FORCE_UNSPECIFIED: Default value for TimeInForce, can be valid for an amend\n - TIME_IN_FORCE_GTC: Good until cancelled, the order trades any amount and as much as possible\nand remains on the book until it either trades completely or is cancelled\n - TIME_IN_FORCE_GTT: Good until specified time, this order type trades any amount and as much as possible\nand remains on the book until it either trades completely, is cancelled, or expires at a set time\nNOTE: this may in future be multiple types or have sub types for orders that provide different ways of specifying expiry\n - TIME_IN_FORCE_IOC: Immediate or cancel, the order trades any amount and as much as possible\nbut does not remain on the book (whether it trades or not)\n - TIME_IN_FORCE_FOK: Fill or kill, the order either trades completely i.e. remainingSize == 0 after adding,\nor not at all, and does not remain on the book if it doesn't trade\n - TIME_IN_FORCE_GFA: Good for auction, this order is only accepted during an auction period\n - TIME_IN_FORCE_GFN: Good for normal, this order is only accepted during normal trading (that can be continuous trading or frequent batched auctions)","explode":true,"in":"query","name":"filter.timeInForces","required":false,"schema":{"items":{"enum":["TIME_IN_FORCE_UNSPECIFIED","TIME_IN_FORCE_GTC","TIME_IN_FORCE_GTT","TIME_IN_FORCE_IOC","TIME_IN_FORCE_FOK","TIME_IN_FORCE_GFA","TIME_IN_FORCE_GFN"],"type":"string"},"type":"array"}},{"description":"Indicator if liquidity provision orders should be included or not in the list.","in":"query","name":"filter.excludeLiquidity","required":false,"schema":{"type":"boolean"}},{"description":"List of party IDs to filter on.","explode":true,"in":"query","name":"filter.partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"List of market IDs to filter on.","explode":true,"in":"query","name":"filter.marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Reference.","in":"query","name":"filter.reference","required":false,"schema":{"type":"string"}},{"in":"query","name":"filter.dateRange.startTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"in":"query","name":"filter.dateRange.endTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"description":"Indicator for listing only live orders, if set to true.","in":"query","name":"filter.liveOnly","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListOrdersResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Orders"],"description":"Get a list of orders that match the given filters","operationId":"TradingDataService_ListOrders","summary":"List orders"}},"/api/v2/parties":{"get":{"parameters":[{"description":"Party ID to filter for. If omitted, no filter will be applied.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListPartiesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Parties"],"description":"Get a list of parties. If a party ID is provided, only that party will be returned.","operationId":"TradingDataService_ListParties","summary":"List parties"}},"/api/v2/parties/{partyId}/stake":{"get":{"parameters":[{"description":"Party ID for which the stake information is requested.","in":"path","name":"partyId","required":true,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetStakeResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get staking information for a given party","operationId":"TradingDataService_GetStake","summary":"Get Stake"}},"/api/v2/party/{partyId}":{"get":{"parameters":[{"description":"Party ID to retrieve party information for.","in":"path","name":"partyId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetPartyResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Parties"],"description":"Get a single party","operationId":"TradingDataService_GetParty","summary":"Get party"}},"/api/v2/positions":{"get":{"parameters":[{"description":"List of party IDs to filter on.","explode":true,"in":"query","name":"filter.partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"List of market IDs to filter on.","explode":true,"in":"query","name":"filter.marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListAllPositionsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Positions"],"description":"Get a list of positions by party's public key using cursor based pagination","operationId":"TradingDataService_ListAllPositions","summary":"List positions"}},"/api/v2/rewards":{"get":{"parameters":[{"description":"Party ID for which to get the list of rewards.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Asset ID for which to get the list of rewards, if provided.","in":"query","name":"assetId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}},{"description":"Epoch from which to list the rewards, if provided.","in":"query","name":"fromEpoch","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Epoch up-to-which to list the rewards, if provided.","in":"query","name":"toEpoch","required":false,"schema":{"format":"uint64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListRewardsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Rewards"],"description":"Get a list of rewards that match the provided criteria. If no filter is provided, all rewards will be returned.","operationId":"TradingDataService_ListRewards","summary":"List rewards"}},"/api/v2/rewards/epoch/summaries":{"get":{"parameters":[{"description":"Restrict the results to those connected to the assets in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.assetIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Restrict the results to those connected to the markets in this list. Pass an empty list for no filter.","explode":true,"in":"query","name":"filter.marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Optional range of epochs to filter on.","in":"query","name":"filter.fromEpoch","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Epoch to which to filter rewards summaries.","in":"query","name":"filter.toEpoch","required":false,"schema":{"format":"uint64","type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListEpochRewardSummariesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Rewards"],"description":"Get a list of reward summaries by epoch for a given range of epochs.\nThe result is filtered by list of asset IDs, market IDs and starting and ending epochs, for which to return rewards.\nIf no data is provided, all reward summaries will be returned, grouped by epochs, market IDs, asset IDs and reward type.","operationId":"TradingDataService_ListEpochRewardSummaries","summary":"List epoch reward summaries"}},"/api/v2/rewards/summaries":{"get":{"parameters":[{"description":"Party ID for which to list rewards, if provided.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Asset ID for which to list rewards, if provided.","in":"query","name":"assetId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListRewardSummariesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Rewards"],"description":"Get a list of reward summaries where the reward amount is the total rewards received over all epochs\nper party ID and asset ID.\nRequest parameters are optional party ID and asset ID.\nIf no data is provided, all reward summaries will be returned grouped by party and asset ID.","operationId":"TradingDataService_ListRewardSummaries","summary":"List reward summaries"}},"/api/v2/snapshots":{"get":{"parameters":[{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListCoreSnapshotsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a list of core snapshots taken","operationId":"TradingDataService_ListCoreSnapshots","summary":"List snapshots"}},"/api/v2/stream/accounts":{"get":{"parameters":[{"description":"Market ID to filter accounts by. If empty, no markets will be filtered.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}},{"description":"Party ID to filter accounts by. If empty, no parties will be filtered.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Asset ID to filter accounts by. If empty, no assets will be filtered.","in":"query","name":"asset","required":false,"schema":{"type":"string"}},{"description":"Account type to subscribe to, required field.\n\n - ACCOUNT_TYPE_UNSPECIFIED: Default value\n - ACCOUNT_TYPE_INSURANCE: Insurance pool accounts contain insurance pool funds for a market\n - ACCOUNT_TYPE_SETTLEMENT: Settlement accounts exist only during settlement or mark-to-market\n - ACCOUNT_TYPE_MARGIN: Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nRequired initial margin is allocated to each market from user's general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nVega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change\n - ACCOUNT_TYPE_GENERAL: General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements\n - ACCOUNT_TYPE_FEES_INFRASTRUCTURE: Infrastructure accounts contain fees earned by providing infrastructure on Vega\n - ACCOUNT_TYPE_FEES_LIQUIDITY: Liquidity accounts contain fees earned by providing liquidity on Vega markets\n - ACCOUNT_TYPE_FEES_MAKER: This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place\n - ACCOUNT_TYPE_BOND: This account is created to maintain liquidity providers funds commitments\n - ACCOUNT_TYPE_EXTERNAL: External account represents an external source (deposit/withdrawal)\n - ACCOUNT_TYPE_GLOBAL_INSURANCE: Global insurance account for the asset\n - ACCOUNT_TYPE_GLOBAL_REWARD: Global reward account for the asset\n - ACCOUNT_TYPE_PENDING_TRANSFERS: Per asset account used to store pending transfers (if any)\n - ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES: Per asset reward account for fees paid to makers\n - ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES: Per asset reward account for fees received by makers\n - ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES: Per asset reward account for fees received by liquidity providers\n - ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS: Per asset reward account for market proposers when the market goes above some trading threshold","in":"query","name":"type","required":false,"schema":{"default":"ACCOUNT_TYPE_UNSPECIFIED","enum":["ACCOUNT_TYPE_UNSPECIFIED","ACCOUNT_TYPE_INSURANCE","ACCOUNT_TYPE_SETTLEMENT","ACCOUNT_TYPE_MARGIN","ACCOUNT_TYPE_GENERAL","ACCOUNT_TYPE_FEES_INFRASTRUCTURE","ACCOUNT_TYPE_FEES_LIQUIDITY","ACCOUNT_TYPE_FEES_MAKER","ACCOUNT_TYPE_BOND","ACCOUNT_TYPE_EXTERNAL","ACCOUNT_TYPE_GLOBAL_INSURANCE","ACCOUNT_TYPE_GLOBAL_REWARD","ACCOUNT_TYPE_PENDING_TRANSFERS","ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES","ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveAccountsResponse"}},"title":"Stream result of v2ObserveAccountsResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Accounts"],"description":"Subscribe to a stream of accounts","operationId":"TradingDataService_ObserveAccounts","summary":"Accounts subscription"}},"/api/v2/stream/candle/data":{"get":{"parameters":[{"description":"Unique ID for the candle.","in":"query","name":"candleId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveCandleDataResponse"}},"title":"Stream result of v2ObserveCandleDataResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Candles"],"description":"Subscribe to a stream of candle updates","operationId":"TradingDataService_ObserveCandleData","summary":"Observe candle data"}},"/api/v2/stream/event/bus":{"get":{"parameters":[{"description":"One or more types of event, required field.\n\n - BUS_EVENT_TYPE_UNSPECIFIED: Default value, always invalid\n - BUS_EVENT_TYPE_ALL: Events of ALL event types, used when filtering stream from event bus\n - BUS_EVENT_TYPE_TIME_UPDATE: Event for blockchain time updates\n - BUS_EVENT_TYPE_LEDGER_MOVEMENTS: Event for when a transfer happens internally, contains the transfer information\n - BUS_EVENT_TYPE_POSITION_RESOLUTION: Event indicating position resolution has occurred\n - BUS_EVENT_TYPE_ORDER: Event for order updates, both new and existing orders\n - BUS_EVENT_TYPE_ACCOUNT: Event for account updates\n - BUS_EVENT_TYPE_PARTY: Event for party updates\n - BUS_EVENT_TYPE_TRADE: Event indicating a new trade has occurred\n - BUS_EVENT_TYPE_MARGIN_LEVELS: Event indicating margin levels have changed for a party\n - BUS_EVENT_TYPE_PROPOSAL: Event for proposal updates (for governance)\n - BUS_EVENT_TYPE_VOTE: Event indicating a new vote has occurred (for governance)\n - BUS_EVENT_TYPE_MARKET_DATA: Event for market data updates\n - BUS_EVENT_TYPE_NODE_SIGNATURE: Event for a new signature for a Vega node\n - BUS_EVENT_TYPE_LOSS_SOCIALIZATION: Event indicating loss socialisation occurred for a party\n - BUS_EVENT_TYPE_SETTLE_POSITION: Event for when a position is being settled\n - BUS_EVENT_TYPE_SETTLE_DISTRESSED: Event for when a position is distressed\n - BUS_EVENT_TYPE_MARKET_CREATED: Event indicating a new market was created\n - BUS_EVENT_TYPE_ASSET: Event for when an asset is added to Vega\n - BUS_EVENT_TYPE_MARKET_TICK: Event indicating a market tick event\n - BUS_EVENT_TYPE_WITHDRAWAL: Event for when a withdrawal occurs\n - BUS_EVENT_TYPE_DEPOSIT: Event for when a deposit occurs\n - BUS_EVENT_TYPE_AUCTION: Event indicating a change in auction state, for example starting or ending an auction\n - BUS_EVENT_TYPE_RISK_FACTOR: Event indicating a risk factor has been updated\n - BUS_EVENT_TYPE_NETWORK_PARAMETER: Event indicating a network parameter has been added or updated\n - BUS_EVENT_TYPE_LIQUIDITY_PROVISION: Event indicating a liquidity provision has been created or updated\n - BUS_EVENT_TYPE_MARKET_UPDATED: Event indicating a new market was created\n - BUS_EVENT_TYPE_ORACLE_SPEC: Event indicating an oracle spec has been created or updated\n - BUS_EVENT_TYPE_ORACLE_DATA: Event indicating that an oracle data has been broadcast\n - BUS_EVENT_TYPE_DELEGATION_BALANCE: Event indicating that an delegation balance of a party to a node for current epoch has changed\n - BUS_EVENT_TYPE_VALIDATOR_SCORE: Event indicating the validator score for the given epoch\n - BUS_EVENT_TYPE_EPOCH_UPDATE: Event indicating the start or end of an epoch\n - BUS_EVENT_TYPE_VALIDATOR_UPDATE: Event indicating that validator node has been updated\n - BUS_EVENT_TYPE_STAKE_LINKING: Event indicating a new staking event have been processed by the network\n - BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT: Event indicating the payout of a reward has been initiated\n - BUS_EVENT_TYPE_CHECKPOINT: Event indicating a new checkpoint was created\n - BUS_EVENT_TYPE_STREAM_START: Event indicating stream is starting\n - BUS_EVENT_TYPE_KEY_ROTATION: Event indicating key rotation took place\n - BUS_EVENT_TYPE_STATE_VAR: Event indicating state transitions in state variable consensus\n - BUS_EVENT_TYPE_NETWORK_LIMITS: Event indicating network limits set or updated\n - BUS_EVENT_TYPE_TRANSFER: Event indicating a update for a transfer\n - BUS_EVENT_TYPE_VALIDATOR_RANKING: Event indicating the ranking of validator and their status in Vega\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT: Event indicating a new multi sig signer event have been processed\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD: Event indicating the erc20 multi sig threshold have been updated\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED: Event indicating a new signer has been added to the ERC-20 multisig\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED: Event indicating a signer has been removed from the ERC-20 multisig\n - BUS_EVENT_TYPE_POSITION_STATE: Event indicating that a party's position has changed\n - BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION: Event indicating Ethereum key rotation took place\n - BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL: Event indicating protocol upgrade proposal updates\n - BUS_EVENT_TYPE_BEGIN_BLOCK: Event indicating the core is starting to process a new block\n - BUS_EVENT_TYPE_END_BLOCK: Event indicating the core finished to process a block\n - BUS_EVENT_TYPE_PROTOCOL_UPGRADE_STARTED: Event indicating the core is starting a protocol upgrade\n - BUS_EVENT_TYPE_SETTLE_MARKET: Event indicating the market has stopped and settled\n - BUS_EVENT_TYPE_TRANSACTION_RESULT: Event indicating the result of a transaction processed by the network\n - BUS_EVENT_TYPE_SNAPSHOT_TAKEN: Event indicating a snapshot was taken at this block height\n - BUS_EVENT_TYPE_PROTOCOL_UPGRADE_DATA_NODE_READY: Event data node uses to notify that it is ready to upgrade\n - BUS_EVENT_TYPE_DISTRESSED_ORDERS_CLOSED: Event indicating parties had orders closed because they were distressed, but were not closed out.\n - BUS_EVENT_TYPE_EXPIRED_ORDERS: Event indicating parties had orders closed because they were distressed, but were not closed out.\n - BUS_EVENT_TYPE_DISTRESSED_POSITIONS: Event indicating parties have become, or were, distressed but still have an active position.\n - BUS_EVENT_TYPE_MARKET: Event indicating a market related event, for example when a market opens\n - BUS_EVENT_TYPE_TX_ERROR: Event used to report failed transactions back to a user, this is excluded from the ALL type","explode":true,"in":"query","name":"type","required":false,"schema":{"items":{"enum":["BUS_EVENT_TYPE_UNSPECIFIED","BUS_EVENT_TYPE_ALL","BUS_EVENT_TYPE_TIME_UPDATE","BUS_EVENT_TYPE_LEDGER_MOVEMENTS","BUS_EVENT_TYPE_POSITION_RESOLUTION","BUS_EVENT_TYPE_ORDER","BUS_EVENT_TYPE_ACCOUNT","BUS_EVENT_TYPE_PARTY","BUS_EVENT_TYPE_TRADE","BUS_EVENT_TYPE_MARGIN_LEVELS","BUS_EVENT_TYPE_PROPOSAL","BUS_EVENT_TYPE_VOTE","BUS_EVENT_TYPE_MARKET_DATA","BUS_EVENT_TYPE_NODE_SIGNATURE","BUS_EVENT_TYPE_LOSS_SOCIALIZATION","BUS_EVENT_TYPE_SETTLE_POSITION","BUS_EVENT_TYPE_SETTLE_DISTRESSED","BUS_EVENT_TYPE_MARKET_CREATED","BUS_EVENT_TYPE_ASSET","BUS_EVENT_TYPE_MARKET_TICK","BUS_EVENT_TYPE_WITHDRAWAL","BUS_EVENT_TYPE_DEPOSIT","BUS_EVENT_TYPE_AUCTION","BUS_EVENT_TYPE_RISK_FACTOR","BUS_EVENT_TYPE_NETWORK_PARAMETER","BUS_EVENT_TYPE_LIQUIDITY_PROVISION","BUS_EVENT_TYPE_MARKET_UPDATED","BUS_EVENT_TYPE_ORACLE_SPEC","BUS_EVENT_TYPE_ORACLE_DATA","BUS_EVENT_TYPE_DELEGATION_BALANCE","BUS_EVENT_TYPE_VALIDATOR_SCORE","BUS_EVENT_TYPE_EPOCH_UPDATE","BUS_EVENT_TYPE_VALIDATOR_UPDATE","BUS_EVENT_TYPE_STAKE_LINKING","BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT","BUS_EVENT_TYPE_CHECKPOINT","BUS_EVENT_TYPE_STREAM_START","BUS_EVENT_TYPE_KEY_ROTATION","BUS_EVENT_TYPE_STATE_VAR","BUS_EVENT_TYPE_NETWORK_LIMITS","BUS_EVENT_TYPE_TRANSFER","BUS_EVENT_TYPE_VALIDATOR_RANKING","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED","BUS_EVENT_TYPE_POSITION_STATE","BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION","BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL","BUS_EVENT_TYPE_BEGIN_BLOCK","BUS_EVENT_TYPE_END_BLOCK","BUS_EVENT_TYPE_PROTOCOL_UPGRADE_STARTED","BUS_EVENT_TYPE_SETTLE_MARKET","BUS_EVENT_TYPE_TRANSACTION_RESULT","BUS_EVENT_TYPE_SNAPSHOT_TAKEN","BUS_EVENT_TYPE_PROTOCOL_UPGRADE_DATA_NODE_READY","BUS_EVENT_TYPE_DISTRESSED_ORDERS_CLOSED","BUS_EVENT_TYPE_EXPIRED_ORDERS","BUS_EVENT_TYPE_DISTRESSED_POSITIONS","BUS_EVENT_TYPE_MARKET","BUS_EVENT_TYPE_TX_ERROR"],"type":"string"},"type":"array"}},{"description":"Market ID to filter for, optional field. If empty, no markets will be excluded from the stream.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}},{"description":"Party ID to filter for, optional field. If empty, no parties will be excluded from the stream.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Batch size,\nIf not specified, any events received will be sent immediately. If the client is not ready\nfor the next data-set, data may be dropped a number of times, and eventually the stream is closed.\nif specified, the first batch will be sent when ready. To receive the next set of events, the client\nmust write an `ObserveEventBatch` message on the stream to flush the buffer.\nIf no message is received in 5 seconds, the stream is closed.\nDefault: 0, send any and all events when they are available.","in":"query","name":"batchSize","required":false,"schema":{"format":"int64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveEventBusResponse"}},"title":"Stream result of v2ObserveEventBusResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Events"],"description":"Subscribe to a stream of events from the core","operationId":"TradingDataService_ObserveEventBus","summary":"Observe event bus"}},"/api/v2/stream/governance":{"get":{"parameters":[{"description":"Party ID to get the governance subscription for, if provided.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveGovernanceResponse"}},"title":"Stream result of v2ObserveGovernanceResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Governance"],"description":"Subscribe to a stream of governance proposals","operationId":"TradingDataService_ObserveGovernance","summary":"Observe governance"}},"/api/v2/stream/ledger/movements":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveLedgerMovementsResponse"}},"title":"Stream result of v2ObserveLedgerMovementsResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Ledger movements"],"description":"Subscribe to a stream of transfer responses","operationId":"TradingDataService_ObserveLedgerMovements","summary":"Observe ledger movements"}},"/api/v2/stream/liquidity-provisions":{"get":{"parameters":[{"description":"Target market to observe for liquidity provision orders.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}},{"description":"Target party to observe for submitted liquidity provision orders.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveLiquidityProvisionsResponse"}},"title":"Stream result of v2ObserveLiquidityProvisionsResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Liquidity provisions"],"description":"Subscribe to a stream of liquidity provision events for a given market and party","operationId":"TradingDataService_ObserveLiquidityProvisions","summary":"Observe liquidity provisions"}},"/api/v2/stream/margin/levels":{"get":{"parameters":[{"description":"Party ID to filter for. If empty, no parties will be filtered.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Optional Market ID to filter for. If omitted, no markets will be filtered.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveMarginLevelsResponse"}},"title":"Stream result of v2ObserveMarginLevelsResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Margin levels"],"description":"Subscribe to a stream of margin levels","operationId":"TradingDataService_ObserveMarginLevels","summary":"Observe margin levels"}},"/api/v2/stream/markets/data":{"get":{"parameters":[{"description":"List of market IDs to be obtained in the subscription.","explode":true,"in":"query","name":"marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveMarketsDataResponse"}},"title":"Stream result of v2ObserveMarketsDataResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Subscribe to a stream of data about a given market","operationId":"TradingDataService_ObserveMarketsData","summary":"Observe markets data"}},"/api/v2/stream/markets/depth":{"get":{"parameters":[{"description":"List of market IDs to be obtained in the subscription.","explode":true,"in":"query","name":"marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveMarketsDepthResponse"}},"title":"Stream result of v2ObserveMarketsDepthResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Subscribe to a stream of the latest market depth for a given market","operationId":"TradingDataService_ObserveMarketsDepth","summary":"Observe markets depth"}},"/api/v2/stream/markets/depth/updates":{"get":{"parameters":[{"description":"List of market IDs to be obtained in the subscription.","explode":true,"in":"query","name":"marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveMarketsDepthUpdatesResponse"}},"title":"Stream result of v2ObserveMarketsDepthUpdatesResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Markets"],"description":"Subscribe to a stream of updates on market depth for a given market","operationId":"TradingDataService_ObserveMarketsDepthUpdates","summary":"Observe markets depth updates"}},"/api/v2/stream/orders":{"get":{"parameters":[{"description":"Market ID to filter for. If empty, no markets will be filtered.","explode":true,"in":"query","name":"marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Party ID to filter for. If empty, no parties will be filtered.","explode":true,"in":"query","name":"partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Indicates whether liquidity orders should be excluded from the stream.","in":"query","name":"excludeLiquidity","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveOrdersResponse"}},"title":"Stream result of v2ObserveOrdersResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Orders"],"description":"Subscribe to a stream of orders","operationId":"TradingDataService_ObserveOrders","summary":"Observe orders"}},"/api/v2/stream/positions":{"get":{"parameters":[{"description":"Optional party ID to filter for. If empty, no parties will be filtered from the stream.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Optional market ID to filter for. If empty, no markets will be filtered from the stream.","in":"query","name":"marketId","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObservePositionsResponse"}},"title":"Stream result of v2ObservePositionsResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Positions"],"description":"Subscribe to a stream of positions","operationId":"TradingDataService_ObservePositions","summary":"Observe positions"}},"/api/v2/stream/trades":{"get":{"parameters":[{"description":"List of Market ID to filter by.","explode":true,"in":"query","name":"marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"List of Party IDs to filter by.","explode":true,"in":"query","name":"partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveTradesResponse"}},"title":"Stream result of v2ObserveTradesResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Trades"],"description":"Subscribe to a stream of trades, optionally filtered by party/market","operationId":"TradingDataService_ObserveTrades","summary":"Observe trades"}},"/api/v2/stream/votes":{"get":{"parameters":[{"description":"Party ID for which the votes are requested.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Option proposal ID for which the votes are requested.","in":"query","name":"proposalId","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"error":{"$ref":"#/components/schemas/googlerpcStatus"},"result":{"$ref":"#/components/schemas/v2ObserveVotesResponse"}},"title":"Stream result of v2ObserveVotesResponse","type":"object"}}},"description":"A successful response.(streaming responses)"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Governance"],"description":"Subscribe to a stream of votes","operationId":"TradingDataService_ObserveVotes","summary":"Observe votes"}},"/api/v2/trades":{"get":{"parameters":[{"description":"List of Market IDs for which to list trades for, if provided.","explode":true,"in":"query","name":"marketIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"List of Order IDs for which to list trades for, if provided.","explode":true,"in":"query","name":"orderIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"List of Party ID for which to list trades for, if provided.","explode":true,"in":"query","name":"partyIds","required":false,"schema":{"items":{"type":"string"},"type":"array"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}},{"in":"query","name":"dateRange.startTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"in":"query","name":"dateRange.endTimestamp","required":false,"schema":{"format":"int64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListTradesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Trades"],"description":"Get a list of all trades, optionally filtered by party/market/order","operationId":"TradingDataService_ListTrades","summary":"List trades"}},"/api/v2/transfers":{"get":{"parameters":[{"description":"Public key for which to request transfers, this can be a party ID, \"0000000000000000000000000000000000000000000000000000000000000000\" for the global rewards account, or \"network\".","in":"query","name":"pubkey","required":false,"schema":{"type":"string"}},{"description":"Transfer directions - i.e. sender, receiver - to include in the response data.","in":"query","name":"direction","required":false,"schema":{"default":"TRANSFER_DIRECTION_UNSPECIFIED","enum":["TRANSFER_DIRECTION_UNSPECIFIED","TRANSFER_DIRECTION_TRANSFER_FROM","TRANSFER_DIRECTION_TRANSFER_TO","TRANSFER_DIRECTION_TRANSFER_TO_OR_FROM"],"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListTransfersResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Transfers"],"description":"Get a list of transfers to/from/either a public key","operationId":"TradingDataService_ListTransfers","summary":"List transfers"}},"/api/v2/upgrade/proposals":{"get":{"parameters":[{"description":"Protocol upgrade proposal status to filter results from listing proposals, if provided.\n\n - PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING: The proposal is pending\n - PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED: The proposal is approved\n - PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED: The proposal is rejected","in":"query","name":"status","required":false,"schema":{"default":"PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED","enum":["PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED","PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING","PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED","PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED"],"type":"string"}},{"description":"Option to filter listed proposals on being approved or not, if provided.","in":"query","name":"approvedBy","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListProtocolUpgradeProposalsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a list of protocol upgrade proposals, optionally filtering on status or approver.","operationId":"TradingDataService_ListProtocolUpgradeProposals","summary":"List protocol upgrade proposals"}},"/api/v2/upgrade/status":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetProtocolUpgradeStatusResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get status of a protocol upgrade","operationId":"TradingDataService_GetProtocolUpgradeStatus","summary":"Get protocol upgrade status"}},"/api/v2/vega/keys/ethereum/rotations":{"get":{"parameters":[{"description":"Node ID to get the rotation for, if provided.","in":"query","name":"nodeId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListEthereumKeyRotationsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a list of information about Ethereum key rotations that have been performed by validator nodes","operationId":"TradingDataService_ListEthereumKeyRotations","summary":"List Ethereum key rotations"}},"/api/v2/vega/keys/rotations":{"get":{"parameters":[{"description":"Node ID to get key rotations for, if provided.","in":"query","name":"nodeId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListKeyRotationsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get a list of information about Vega key rotations that have been performed by validator nodes","operationId":"TradingDataService_ListKeyRotations","summary":"List key rotations"}},"/api/v2/vega/time":{"get":{"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetVegaTimeResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Network"],"description":"Get the current time of the network, displayed as a Unix timestamp in nano seconds","operationId":"TradingDataService_GetVegaTime","summary":"Get Vega time"}},"/api/v2/votes":{"get":{"parameters":[{"description":"Party for which the votes are requested.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Proposal ID to list votes for.","in":"query","name":"proposalId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListVotesResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Governance"],"description":"Get a list of votes for a party ID","operationId":"TradingDataService_ListVotes","summary":"List votes"}},"/api/v2/withdrawal/{id}":{"get":{"parameters":[{"description":"Withdrawal ID to retrieve data for.","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2GetWithdrawalResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Assets"],"description":"Get a withdrawal by its ID. Use the withdrawals list query to get withdrawal IDs","operationId":"TradingDataService_GetWithdrawal","summary":"Get withdrawal"}},"/api/v2/withdrawals":{"get":{"parameters":[{"description":"Party ID whose withdrawals are to retrieved.\nIf not provided, withdrawals for all parties will be returned.","in":"query","name":"partyId","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","in":"query","name":"pagination.first","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the last row of the previous page.","in":"query","name":"pagination.after","required":false,"schema":{"type":"string"}},{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","in":"query","name":"pagination.last","required":false,"schema":{"format":"int32","type":"integer"}},{"description":"If paging forwards, the cursor string for the first row of the previous page.","in":"query","name":"pagination.before","required":false,"schema":{"type":"string"}},{"description":"Newest records first, older records last, default is true.","in":"query","name":"pagination.newestFirst","required":false,"schema":{"type":"boolean"}},{"in":"query","name":"dateRange.startTimestamp","required":false,"schema":{"format":"int64","type":"string"}},{"in":"query","name":"dateRange.endTimestamp","required":false,"schema":{"format":"int64","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/v2ListWithdrawalsResponse"}}},"description":"A successful response."},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An internal server error"},"default":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/googlerpcStatus"}}},"description":"An unexpected error response."}},"tags":["Assets"],"description":"Get a list of withdrawals for a given party","operationId":"TradingDataService_ListWithdrawals","summary":"List withdrawals"}}},"components":{"schemas":{"ConditionOperator":{"default":"OPERATOR_UNSPECIFIED","description":"Operator describes the type of comparison.\n\n - OPERATOR_UNSPECIFIED: The default value\n - OPERATOR_EQUALS: Verify if the property values are strictly equal or not.\n - OPERATOR_GREATER_THAN: Verify if the data source data value is greater than the Condition value.\n - OPERATOR_GREATER_THAN_OR_EQUAL: Verify if the data source data value is greater than or equal to the Condition\nvalue.\n - OPERATOR_LESS_THAN: Verify if the data source data value is less than the Condition value.\n - OPERATOR_LESS_THAN_OR_EQUAL: Verify if the data source data value is less or equal to than the Condition\nvalue.","enum":["OPERATOR_UNSPECIFIED","OPERATOR_EQUALS","OPERATOR_GREATER_THAN","OPERATOR_GREATER_THAN_OR_EQUAL","OPERATOR_LESS_THAN","OPERATOR_LESS_THAN_OR_EQUAL"],"type":"string"},"MarketTradingMode":{"default":"TRADING_MODE_UNSPECIFIED","description":"- TRADING_MODE_UNSPECIFIED: Default value, this is invalid\n - TRADING_MODE_CONTINUOUS: Normal trading\n - TRADING_MODE_BATCH_AUCTION: Auction trading (FBA)\n - TRADING_MODE_OPENING_AUCTION: Opening auction\n - TRADING_MODE_MONITORING_AUCTION: Auction triggered by monitoring\n - TRADING_MODE_NO_TRADING: No trading is allowed","enum":["TRADING_MODE_UNSPECIFIED","TRADING_MODE_CONTINUOUS","TRADING_MODE_BATCH_AUCTION","TRADING_MODE_OPENING_AUCTION","TRADING_MODE_MONITORING_AUCTION","TRADING_MODE_NO_TRADING"],"title":"Trading mode the market is currently running, also referred to as 'market state'","type":"string"},"OracleDataSubmissionOracleSource":{"default":"ORACLE_SOURCE_UNSPECIFIED","description":"- ORACLE_SOURCE_UNSPECIFIED: Default value\n - ORACLE_SOURCE_OPEN_ORACLE: Specifies that the payload will be base64 encoded JSON conforming to the Open Oracle standard\n - ORACLE_SOURCE_JSON: Specifies that the payload will be base64 encoded JSON, but does not specify the shape of the data","enum":["ORACLE_SOURCE_UNSPECIFIED","ORACLE_SOURCE_OPEN_ORACLE","ORACLE_SOURCE_JSON"],"title":"Supported oracle sources","type":"string"},"OrderTimeInForce":{"default":"TIME_IN_FORCE_UNSPECIFIED","description":"- TIME_IN_FORCE_UNSPECIFIED: Default value for TimeInForce, can be valid for an amend\n - TIME_IN_FORCE_GTC: Good until cancelled, the order trades any amount and as much as possible\nand remains on the book until it either trades completely or is cancelled\n - TIME_IN_FORCE_GTT: Good until specified time, this order type trades any amount and as much as possible\nand remains on the book until it either trades completely, is cancelled, or expires at a set time\nNOTE: this may in future be multiple types or have sub types for orders that provide different ways of specifying expiry\n - TIME_IN_FORCE_IOC: Immediate or cancel, the order trades any amount and as much as possible\nbut does not remain on the book (whether it trades or not)\n - TIME_IN_FORCE_FOK: Fill or kill, the order either trades completely i.e. remainingSize == 0 after adding,\nor not at all, and does not remain on the book if it doesn't trade\n - TIME_IN_FORCE_GFA: Good for auction, this order is only accepted during an auction period\n - TIME_IN_FORCE_GFN: Good for normal, this order is only accepted during normal trading (that can be continuous trading or frequent batched auctions)","enum":["TIME_IN_FORCE_UNSPECIFIED","TIME_IN_FORCE_GTC","TIME_IN_FORCE_GTT","TIME_IN_FORCE_IOC","TIME_IN_FORCE_FOK","TIME_IN_FORCE_GFA","TIME_IN_FORCE_GFN"],"title":"Time In Force for an order","type":"string"},"TransactionResultFailureDetails":{"properties":{"error":{"title":"Error message explaining the reason for the transaction failing processing","type":"string"}},"type":"object"},"TransactionResultSuccessDetails":{"type":"object"},"UndelegateSubmissionMethod":{"default":"METHOD_UNSPECIFIED","enum":["METHOD_UNSPECIFIED","METHOD_NOW","METHOD_AT_END_OF_EPOCH"],"type":"string"},"apiHttpBody":{"description":"Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest)\n        returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody)\n        returns (google.protobuf.Empty);\n\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged.","properties":{"contentType":{"description":"The HTTP Content-Type header value specifying the content type of the body.","type":"string"},"data":{"description":"The HTTP request/response body as raw binary.","format":"byte","type":"string"},"extensions":{"description":"Application specific response metadata. Must be set in the first response\nfor streaming APIs.","items":{"$ref":"#/components/schemas/protobufAny"},"type":"array"}},"type":"object"},"apiv2Candle":{"properties":{"close":{"description":"Closing trade price.","type":"string"},"high":{"description":"Highest price for trading during the candle interval.","type":"string"},"lastUpdate":{"description":"Timestamp for the point in time when the candle was last updated, in nanoseconds.","format":"int64","type":"string"},"low":{"description":"Lowest price for trading during the candle interval.","type":"string"},"open":{"description":"Open trade price.","type":"string"},"start":{"description":"Timestamp for the point in time when the candle was initially created/opened, in nanoseconds.","format":"int64","type":"string"},"volume":{"description":"Total trading volume during the candle interval.","format":"uint64","type":"string"}},"title":"Represents the high, low, open, and closing prices for an interval of trading,\nreferred to commonly as a candlestick or candle","type":"object"},"googlerpcStatus":{"properties":{"code":{"format":"int32","type":"integer"},"details":{"items":{"$ref":"#/components/schemas/protobufAny"},"type":"array"},"message":{"type":"string"}},"type":"object"},"protobufAny":{"additionalProperties":{},"description":"`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }","properties":{"@type":{"description":"A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.","type":"string"}},"type":"object"},"v1AnnounceNode":{"properties":{"avatarUrl":{"description":"AvatarURL of the validator.","type":"string"},"chainPubKey":{"description":"Public key for the blockchain, required field.","type":"string"},"country":{"description":"Country code (ISO 3166-1 alpha-2) for the location of the node.","type":"string"},"ethereumAddress":{"description":"Ethereum public key, required field.","type":"string"},"ethereumSignature":{"$ref":"#/components/schemas/v1Signature","description":"Signature from the validator made using the ethereum wallet."},"fromEpoch":{"description":"Epoch from which the validator is expected\nto be ready to validate blocks.","format":"uint64","type":"string"},"id":{"description":"Node ID of the validator, i.e. the node's public master key.","type":"string"},"infoUrl":{"description":"URL with more info on the node.","type":"string"},"name":{"description":"Name of the validator.","type":"string"},"submitterAddress":{"description":"Ethereum public key to use as a submitter to allow automatic signature generation.","type":"string"},"vegaPubKey":{"description":"Vega public key, required field.","type":"string"},"vegaPubKeyIndex":{"description":"Vega public key derivation index.","format":"int64","type":"integer"},"vegaSignature":{"$ref":"#/components/schemas/v1Signature","description":"Signature from the validator made using the Vega wallet."}},"title":"Used to announce a node as a new pending validator","type":"object"},"v1AuctionEvent":{"properties":{"end":{"format":"int64","title":"Timestamp containing the end time for an auction","type":"string"},"extensionTrigger":{"$ref":"#/components/schemas/vegaAuctionTrigger","title":"If an auction was ongoing, but was extended for whatever reason, this field will\nbe set to the trigger type indicating which component extended the auction"},"leave":{"title":"True if the event indicates leaving auction mode and False otherwise","type":"boolean"},"marketId":{"title":"Market ID for the event","type":"string"},"openingAuction":{"title":"True if the event indicates an auction opening and False otherwise","type":"boolean"},"start":{"format":"int64","title":"Timestamp containing the start time for an auction","type":"string"},"trigger":{"$ref":"#/components/schemas/vegaAuctionTrigger","title":"Reason this market is/was in auction"}},"title":"Auction event indicating a change in auction state, for example starting or ending an auction","type":"object"},"v1BatchMarketInstructions":{"properties":{"amendments":{"description":"List of order amendments to be processed sequentially.","items":{"$ref":"#/components/schemas/v1OrderAmendment"},"type":"array"},"cancellations":{"description":"List of order cancellations to be processed sequentially.","items":{"$ref":"#/components/schemas/v1OrderCancellation"},"type":"array"},"submissions":{"description":"List of order submissions to be processed sequentially.","items":{"$ref":"#/components/schemas/v1OrderSubmission"},"type":"array"}},"title":"Batch of order instructions.\nThis command accepts only the following batches of commands\nand will be processed in the following order:\n- OrderCancellation\n- OrderAmendment\n- OrderSubmission\nThe total amount of commands in the batch across all three lists of\ninstructions is restricted by the following network parameter:\n\"spam.protection.max.batchSize\"","type":"object"},"v1BeginBlock":{"properties":{"hash":{"type":"string"},"height":{"format":"uint64","type":"string"},"timestamp":{"format":"int64","type":"string"}},"title":"BeginBlock","type":"object"},"v1BusEvent":{"properties":{"account":{"$ref":"#/components/schemas/vegaAccount","title":"Account events"},"asset":{"$ref":"#/components/schemas/vegaAsset","title":"Asset events"},"auction":{"$ref":"#/components/schemas/v1AuctionEvent","title":"Auction events"},"beginBlock":{"$ref":"#/components/schemas/v1BeginBlock","title":"Core is starting to process a new block"},"block":{"title":"The batch or block of transactions that the events relate to","type":"string"},"chainId":{"type":"string"},"checkpoint":{"$ref":"#/components/schemas/v1CheckpointEvent","title":"Checkpoint was created"},"coreSnapshotEvent":{"$ref":"#/components/schemas/v1CoreSnapshotData","title":"Core snapshot has been taken at the end of the block"},"delegationBalance":{"$ref":"#/components/schemas/v1DelegationBalanceEvent","title":"Delegation balance events"},"deposit":{"$ref":"#/components/schemas/vegaDeposit","title":"Deposit events"},"distressedOrders":{"$ref":"#/components/schemas/v1DistressedOrders","title":"Parties that had their orders closed because they were distressed"},"distressedPositions":{"$ref":"#/components/schemas/v1DistressedPositions","title":"Open positions on the market that are/were distressed"},"endBlock":{"$ref":"#/components/schemas/v1EndBlock","title":"Core finished processing a block"},"epochEvent":{"$ref":"#/components/schemas/v1EpochEvent","title":"Epoch update events"},"erc20MultisigSetThresholdEvent":{"$ref":"#/components/schemas/v1ERC20MultiSigThresholdSetEvent","title":"ERC20 multi sig set threshold event"},"erc20MultisigSignerAdded":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerAdded","title":"ERC20 multi sig signer added"},"erc20MultisigSignerEvent":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerEvent","title":"ERC20 multi sig signer event"},"erc20MultisigSignerRemoved":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerRemoved","title":"ERC20 multi sig signer removed"},"ethereumKeyRotation":{"$ref":"#/components/schemas/v1EthereumKeyRotation","title":"Ethereum key rotation took place"},"expiredOrders":{"$ref":"#/components/schemas/v1ExpiredOrders","title":"Orders that expired for a given market"},"id":{"title":"Unique event ID for the message","type":"string"},"keyRotation":{"$ref":"#/components/schemas/v1KeyRotation","title":"Key rotation took place"},"ledgerMovements":{"$ref":"#/components/schemas/v1LedgerMovements","title":"Transfer responses update events"},"liquidityProvision":{"$ref":"#/components/schemas/vegaLiquidityProvision","title":"LiquidityProvision  events"},"lossSocialization":{"$ref":"#/components/schemas/v1LossSocialization","title":"Loss socialization events"},"marginLevels":{"$ref":"#/components/schemas/vegaMarginLevels","title":"Margin level update events"},"market":{"$ref":"#/components/schemas/v1MarketEvent","title":"Market tick events"},"marketCreated":{"$ref":"#/components/schemas/vegaMarket","title":"Market created events"},"marketData":{"$ref":"#/components/schemas/vegaMarketData","title":"Market data events"},"marketTick":{"$ref":"#/components/schemas/v1MarketTick","title":"Market tick events"},"marketUpdated":{"$ref":"#/components/schemas/vegaMarket","title":"Market created events"},"networkLimits":{"$ref":"#/components/schemas/vegaNetworkLimits","title":"Network limits events"},"networkParameter":{"$ref":"#/components/schemas/vegaNetworkParameter","title":"Network parameter events"},"nodeSignature":{"$ref":"#/components/schemas/v1NodeSignature","title":"Node signature events"},"oracleData":{"$ref":"#/components/schemas/vegaOracleData","title":"OracleData events"},"oracleSpec":{"$ref":"#/components/schemas/vegaOracleSpec","title":"OracleSpec events"},"order":{"$ref":"#/components/schemas/vegaOrder","title":"Order events"},"party":{"$ref":"#/components/schemas/vegaParty","title":"Party events"},"positionResolution":{"$ref":"#/components/schemas/v1PositionResolution","title":"Position resolution events"},"positionStateEvent":{"$ref":"#/components/schemas/v1PositionStateEvent","title":"Position status for a party in a market"},"proposal":{"$ref":"#/components/schemas/vegaProposal","title":"Proposal events for governance"},"protocolUpgradeDataNodeReady":{"$ref":"#/components/schemas/v1ProtocolUpgradeDataNodeReady","title":"Core snapshot has been taken at the end of the block"},"protocolUpgradeEvent":{"$ref":"#/components/schemas/v1ProtocolUpgradeEvent","title":"Protocol upgrade proposal updates"},"protocolUpgradeStarted":{"$ref":"#/components/schemas/v1ProtocolUpgradeStarted","title":"Core is starting a protocol upgrade"},"rankingEvent":{"$ref":"#/components/schemas/v1ValidatorRankingEvent","title":"Ranking event"},"rewardPayout":{"$ref":"#/components/schemas/v1RewardPayoutEvent","title":"Reward payout event"},"riskFactor":{"$ref":"#/components/schemas/vegaRiskFactor","title":"Risk factor events"},"settleDistressed":{"$ref":"#/components/schemas/v1SettleDistressed","title":"Position distressed events"},"settleMarket":{"$ref":"#/components/schemas/v1SettleMarket","title":"Settle market event for data-node to update positions for settled markets"},"settlePosition":{"$ref":"#/components/schemas/v1SettlePosition","title":"Position settlement events"},"stakeLinking":{"$ref":"#/components/schemas/v1StakeLinking","title":"Staking event"},"stateVar":{"$ref":"#/components/schemas/v1StateVar","title":"State variable consensus state transition update"},"timeUpdate":{"$ref":"#/components/schemas/v1TimeUpdate","title":"Time update events"},"trade":{"$ref":"#/components/schemas/vegaTrade","title":"Trade events"},"transactionResult":{"$ref":"#/components/schemas/v1TransactionResult","title":"Result of a transaction processed by the network"},"transfer":{"$ref":"#/components/schemas/vegaeventsv1Transfer","title":"Transfer event"},"txErrEvent":{"$ref":"#/components/schemas/v1TxErrorEvent","title":"Transaction error events, not included in the ALL event type"},"txHash":{"type":"string"},"type":{"$ref":"#/components/schemas/v1BusEventType","title":"The type of bus event. Must be one of the list below:"},"validatorScore":{"$ref":"#/components/schemas/v1ValidatorScoreEvent","title":"Validator score calculated"},"validatorUpdate":{"$ref":"#/components/schemas/v1ValidatorUpdate","title":"Validator update events"},"version":{"format":"int64","title":"Version of bus event","type":"integer"},"vote":{"$ref":"#/components/schemas/vegaVote","title":"Vote events for governance"},"withdrawal":{"$ref":"#/components/schemas/vegaWithdrawal","title":"Withdrawal events"}},"title":"Bus event is a container for event bus events emitted by Vega","type":"object"},"v1BusEventType":{"default":"BUS_EVENT_TYPE_UNSPECIFIED","description":"- BUS_EVENT_TYPE_UNSPECIFIED: Default value, always invalid\n - BUS_EVENT_TYPE_ALL: Events of ALL event types, used when filtering stream from event bus\n - BUS_EVENT_TYPE_TIME_UPDATE: Event for blockchain time updates\n - BUS_EVENT_TYPE_LEDGER_MOVEMENTS: Event for when a transfer happens internally, contains the transfer information\n - BUS_EVENT_TYPE_POSITION_RESOLUTION: Event indicating position resolution has occurred\n - BUS_EVENT_TYPE_ORDER: Event for order updates, both new and existing orders\n - BUS_EVENT_TYPE_ACCOUNT: Event for account updates\n - BUS_EVENT_TYPE_PARTY: Event for party updates\n - BUS_EVENT_TYPE_TRADE: Event indicating a new trade has occurred\n - BUS_EVENT_TYPE_MARGIN_LEVELS: Event indicating margin levels have changed for a party\n - BUS_EVENT_TYPE_PROPOSAL: Event for proposal updates (for governance)\n - BUS_EVENT_TYPE_VOTE: Event indicating a new vote has occurred (for governance)\n - BUS_EVENT_TYPE_MARKET_DATA: Event for market data updates\n - BUS_EVENT_TYPE_NODE_SIGNATURE: Event for a new signature for a Vega node\n - BUS_EVENT_TYPE_LOSS_SOCIALIZATION: Event indicating loss socialisation occurred for a party\n - BUS_EVENT_TYPE_SETTLE_POSITION: Event for when a position is being settled\n - BUS_EVENT_TYPE_SETTLE_DISTRESSED: Event for when a position is distressed\n - BUS_EVENT_TYPE_MARKET_CREATED: Event indicating a new market was created\n - BUS_EVENT_TYPE_ASSET: Event for when an asset is added to Vega\n - BUS_EVENT_TYPE_MARKET_TICK: Event indicating a market tick event\n - BUS_EVENT_TYPE_WITHDRAWAL: Event for when a withdrawal occurs\n - BUS_EVENT_TYPE_DEPOSIT: Event for when a deposit occurs\n - BUS_EVENT_TYPE_AUCTION: Event indicating a change in auction state, for example starting or ending an auction\n - BUS_EVENT_TYPE_RISK_FACTOR: Event indicating a risk factor has been updated\n - BUS_EVENT_TYPE_NETWORK_PARAMETER: Event indicating a network parameter has been added or updated\n - BUS_EVENT_TYPE_LIQUIDITY_PROVISION: Event indicating a liquidity provision has been created or updated\n - BUS_EVENT_TYPE_MARKET_UPDATED: Event indicating a new market was created\n - BUS_EVENT_TYPE_ORACLE_SPEC: Event indicating an oracle spec has been created or updated\n - BUS_EVENT_TYPE_ORACLE_DATA: Event indicating that an oracle data has been broadcast\n - BUS_EVENT_TYPE_DELEGATION_BALANCE: Event indicating that an delegation balance of a party to a node for current epoch has changed\n - BUS_EVENT_TYPE_VALIDATOR_SCORE: Event indicating the validator score for the given epoch\n - BUS_EVENT_TYPE_EPOCH_UPDATE: Event indicating the start or end of an epoch\n - BUS_EVENT_TYPE_VALIDATOR_UPDATE: Event indicating that validator node has been updated\n - BUS_EVENT_TYPE_STAKE_LINKING: Event indicating a new staking event have been processed by the network\n - BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT: Event indicating the payout of a reward has been initiated\n - BUS_EVENT_TYPE_CHECKPOINT: Event indicating a new checkpoint was created\n - BUS_EVENT_TYPE_STREAM_START: Event indicating stream is starting\n - BUS_EVENT_TYPE_KEY_ROTATION: Event indicating key rotation took place\n - BUS_EVENT_TYPE_STATE_VAR: Event indicating state transitions in state variable consensus\n - BUS_EVENT_TYPE_NETWORK_LIMITS: Event indicating network limits set or updated\n - BUS_EVENT_TYPE_TRANSFER: Event indicating a update for a transfer\n - BUS_EVENT_TYPE_VALIDATOR_RANKING: Event indicating the ranking of validator and their status in Vega\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT: Event indicating a new multi sig signer event have been processed\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD: Event indicating the erc20 multi sig threshold have been updated\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED: Event indicating a new signer has been added to the ERC-20 multisig\n - BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED: Event indicating a signer has been removed from the ERC-20 multisig\n - BUS_EVENT_TYPE_POSITION_STATE: Event indicating that a party's position has changed\n - BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION: Event indicating Ethereum key rotation took place\n - BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL: Event indicating protocol upgrade proposal updates\n - BUS_EVENT_TYPE_BEGIN_BLOCK: Event indicating the core is starting to process a new block\n - BUS_EVENT_TYPE_END_BLOCK: Event indicating the core finished to process a block\n - BUS_EVENT_TYPE_PROTOCOL_UPGRADE_STARTED: Event indicating the core is starting a protocol upgrade\n - BUS_EVENT_TYPE_SETTLE_MARKET: Event indicating the market has stopped and settled\n - BUS_EVENT_TYPE_TRANSACTION_RESULT: Event indicating the result of a transaction processed by the network\n - BUS_EVENT_TYPE_SNAPSHOT_TAKEN: Event indicating a snapshot was taken at this block height\n - BUS_EVENT_TYPE_PROTOCOL_UPGRADE_DATA_NODE_READY: Event data node uses to notify that it is ready to upgrade\n - BUS_EVENT_TYPE_DISTRESSED_ORDERS_CLOSED: Event indicating parties had orders closed because they were distressed, but were not closed out.\n - BUS_EVENT_TYPE_EXPIRED_ORDERS: Event indicating parties had orders closed because they were distressed, but were not closed out.\n - BUS_EVENT_TYPE_DISTRESSED_POSITIONS: Event indicating parties have become, or were, distressed but still have an active position.\n - BUS_EVENT_TYPE_MARKET: Event indicating a market related event, for example when a market opens\n - BUS_EVENT_TYPE_TX_ERROR: Event used to report failed transactions back to a user, this is excluded from the ALL type","enum":["BUS_EVENT_TYPE_UNSPECIFIED","BUS_EVENT_TYPE_ALL","BUS_EVENT_TYPE_TIME_UPDATE","BUS_EVENT_TYPE_LEDGER_MOVEMENTS","BUS_EVENT_TYPE_POSITION_RESOLUTION","BUS_EVENT_TYPE_ORDER","BUS_EVENT_TYPE_ACCOUNT","BUS_EVENT_TYPE_PARTY","BUS_EVENT_TYPE_TRADE","BUS_EVENT_TYPE_MARGIN_LEVELS","BUS_EVENT_TYPE_PROPOSAL","BUS_EVENT_TYPE_VOTE","BUS_EVENT_TYPE_MARKET_DATA","BUS_EVENT_TYPE_NODE_SIGNATURE","BUS_EVENT_TYPE_LOSS_SOCIALIZATION","BUS_EVENT_TYPE_SETTLE_POSITION","BUS_EVENT_TYPE_SETTLE_DISTRESSED","BUS_EVENT_TYPE_MARKET_CREATED","BUS_EVENT_TYPE_ASSET","BUS_EVENT_TYPE_MARKET_TICK","BUS_EVENT_TYPE_WITHDRAWAL","BUS_EVENT_TYPE_DEPOSIT","BUS_EVENT_TYPE_AUCTION","BUS_EVENT_TYPE_RISK_FACTOR","BUS_EVENT_TYPE_NETWORK_PARAMETER","BUS_EVENT_TYPE_LIQUIDITY_PROVISION","BUS_EVENT_TYPE_MARKET_UPDATED","BUS_EVENT_TYPE_ORACLE_SPEC","BUS_EVENT_TYPE_ORACLE_DATA","BUS_EVENT_TYPE_DELEGATION_BALANCE","BUS_EVENT_TYPE_VALIDATOR_SCORE","BUS_EVENT_TYPE_EPOCH_UPDATE","BUS_EVENT_TYPE_VALIDATOR_UPDATE","BUS_EVENT_TYPE_STAKE_LINKING","BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT","BUS_EVENT_TYPE_CHECKPOINT","BUS_EVENT_TYPE_STREAM_START","BUS_EVENT_TYPE_KEY_ROTATION","BUS_EVENT_TYPE_STATE_VAR","BUS_EVENT_TYPE_NETWORK_LIMITS","BUS_EVENT_TYPE_TRANSFER","BUS_EVENT_TYPE_VALIDATOR_RANKING","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED","BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED","BUS_EVENT_TYPE_POSITION_STATE","BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION","BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL","BUS_EVENT_TYPE_BEGIN_BLOCK","BUS_EVENT_TYPE_END_BLOCK","BUS_EVENT_TYPE_PROTOCOL_UPGRADE_STARTED","BUS_EVENT_TYPE_SETTLE_MARKET","BUS_EVENT_TYPE_TRANSACTION_RESULT","BUS_EVENT_TYPE_SNAPSHOT_TAKEN","BUS_EVENT_TYPE_PROTOCOL_UPGRADE_DATA_NODE_READY","BUS_EVENT_TYPE_DISTRESSED_ORDERS_CLOSED","BUS_EVENT_TYPE_EXPIRED_ORDERS","BUS_EVENT_TYPE_DISTRESSED_POSITIONS","BUS_EVENT_TYPE_MARKET","BUS_EVENT_TYPE_TX_ERROR"],"title":"Bus event type is used to specify a type of event\nIt has 2 styles of event:\nSingle values (e.g. BUS_EVENT_TYPE_ORDER) where they represent one data item\nGroup values (e.g. BUS_EVENT_TYPE_AUCTION) where they represent a group of data items","type":"string"},"v1CancelTransfer":{"properties":{"transferId":{"description":"Transfer ID of the transfer to cancel.","type":"string"}},"title":"Request for cancelling a recurring transfer","type":"object"},"v1CheckpointEvent":{"properties":{"blockHash":{"type":"string"},"blockHeight":{"format":"uint64","type":"string"},"hash":{"type":"string"}},"type":"object"},"v1Condition":{"properties":{"operator":{"$ref":"#/components/schemas/ConditionOperator","description":"Type of comparison to make on the value."},"value":{"description":"Value to be compared with by the operator.","type":"string"}},"title":"Condition describes the condition that must be validated by the network","type":"object"},"v1CoreSnapshotData":{"description":"CoreSnapshotData represents the core snapshot data.","properties":{"blockHash":{"title":"Hash of the snapshot block","type":"string"},"blockHeight":{"format":"uint64","title":"Block height at which snapshot was taken","type":"string"},"coreVersion":{"description":"Semver version number of the core.","type":"string"},"protocolUpgradeBlock":{"title":"Indicates if the snapshot is taken as part of protocol upgrade","type":"boolean"}},"type":"object"},"v1Data":{"description":"Data describes valid source data that has been received by the node.\nIt represents both matched and unmatched data.","properties":{"broadcastAt":{"description":"`broadcast_at` is the time at which the data was broadcast to the markets\nwith a matching spec.\nIt has no value when the date did not match any spec.\nThe value is a Unix timestamp in nanoseconds.","format":"int64","type":"string"},"data":{"items":{"$ref":"#/components/schemas/v1Property"},"title":"Data holds all the properties of the data","type":"array"},"matchedSpecIds":{"description":"`matched_specs_ids` lists all the specs that matched this data.\nWhen the array is empty, it means no spec matched this data.","items":{"type":"string"},"type":"array"},"signers":{"items":{"$ref":"#/components/schemas/v1Signer"},"type":"array"}},"type":"object"},"v1DelegateSubmission":{"properties":{"amount":{"description":"Amount of stake to delegate. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"nodeId":{"description":"Delegate to the specified node ID.","type":"string"}},"title":"Command to submit an instruction to delegate some stake to a node","type":"object"},"v1DelegationBalanceEvent":{"properties":{"amount":{"type":"string"},"epochSeq":{"type":"string"},"nodeId":{"type":"string"},"party":{"type":"string"}},"title":"DelegationBalanceEvent - updates on the delegation balance of a party to a node in the current epoch in effect","type":"object"},"v1DistressedOrders":{"properties":{"marketId":{"title":"Market ID for the event","type":"string"},"parties":{"items":{"type":"string"},"title":"Slice of Party IDs i.e. each party's public key for the event","type":"array"}},"title":"Distressed order contains the party IDs for all parties that were distressed and had their orders closed,\nbut did not need to be closed out after cancelling their orders","type":"object"},"v1DistressedPositions":{"description":"Distressed positions event contains the party IDs for all parties that were distressed, had their orders closed but because of insufficient volume on the book\ncould not be fully closed out. These parties are distressed, but still hold an active position on the book as a result. Once enough volume is on the book to close\nthem out, a SettleDistressed event will be sent. In case they manage to reduce their position, or meet the margin requirements, this status will be updated.\nParties that are no longer distressed but active will be listed in the safe_parties field.","properties":{"distressedParties":{"items":{"type":"string"},"title":"Slice of party IDs i.e. each party's public key, that are distressed but still have open volume","type":"array"},"marketId":{"title":"Market ID for the event","type":"string"},"safeParties":{"items":{"type":"string"},"title":"Slice of party IDs i.e. each party's public key, who were distressed but now can safely maintain their position","type":"array"}},"type":"object"},"v1ERC20MultiSigSignerAdded":{"properties":{"epochSeq":{"title":"Epoch that the node was added for","type":"string"},"newSigner":{"title":"Ethereum address of the new signer","type":"string"},"nonce":{"description":"Nonce used.","type":"string"},"signatureId":{"title":"ID of the signature bundle","type":"string"},"submitter":{"title":"Address of the submitter of the transaction","type":"string"},"timestamp":{"format":"int64","title":"Time at which this happened","type":"string"},"validatorId":{"title":"Node ID of the Vega node to be added","type":"string"}},"type":"object"},"v1ERC20MultiSigSignerEvent":{"properties":{"blockNumber":{"format":"uint64","type":"string"},"blockTime":{"format":"int64","type":"string"},"id":{"type":"string"},"logIndex":{"format":"uint64","type":"string"},"nonce":{"type":"string"},"signer":{"type":"string"},"txHash":{"type":"string"},"type":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerEventType"}},"type":"object"},"v1ERC20MultiSigSignerEventType":{"default":"TYPE_UNSPECIFIED","enum":["TYPE_UNSPECIFIED","TYPE_ADDED","TYPE_REMOVED"],"type":"string"},"v1ERC20MultiSigSignerRemoved":{"properties":{"epochSeq":{"title":"Epoch that the node was removed for","type":"string"},"nonce":{"description":"Nonce used.","type":"string"},"oldSigner":{"title":"Ethereum address of the signer to be removed","type":"string"},"signatureSubmitters":{"items":{"$ref":"#/components/schemas/v1ERC20MultiSigSignerRemovedSubmitter"},"title":"List containing all the IDs of bundle generated\nThere should be one bundle generated for every validators\nin the validator set","type":"array"},"timestamp":{"format":"int64","title":"Time at which this happened","type":"string"},"validatorId":{"title":"Node ID of the Vega node which is to be removed","type":"string"}},"type":"object"},"v1ERC20MultiSigSignerRemovedSubmitter":{"properties":{"signatureId":{"description":"Signature ID of the signer removed.","type":"string"},"submitter":{"title":"Address of the submitter of the transaction","type":"string"}},"type":"object"},"v1ERC20MultiSigThresholdSetEvent":{"properties":{"blockNumber":{"format":"uint64","type":"string"},"blockTime":{"format":"int64","type":"string"},"id":{"type":"string"},"logIndex":{"format":"uint64","type":"string"},"newThreshold":{"format":"int64","type":"integer"},"nonce":{"type":"string"},"txHash":{"type":"string"}},"type":"object"},"v1ETHAddress":{"properties":{"address":{"type":"string"}},"type":"object"},"v1EndBlock":{"properties":{"height":{"format":"uint64","type":"string"}},"title":"EndBlock","type":"object"},"v1EpochEvent":{"properties":{"action":{"$ref":"#/components/schemas/vegaEpochAction","title":"Action tells us what action is taking place"},"endTime":{"format":"int64","title":"Vega time at which this epoch actually ended","type":"string"},"expireTime":{"format":"int64","title":"Vega time at which this epoch should end","type":"string"},"seq":{"format":"uint64","title":"Sequence number that increases by one each epoch","type":"string"},"startTime":{"format":"int64","title":"Vega time at which this epoch started","type":"string"}},"title":"Epoch details","type":"object"},"v1EthereumKeyRotateSubmission":{"properties":{"currentAddress":{"description":"Currently used public address.","type":"string"},"ethereumSignature":{"$ref":"#/components/schemas/v1Signature","description":"Signature that can be verified using the new ethereum address."},"newAddress":{"description":"New address to rotate to.","type":"string"},"submitterAddress":{"description":"Ethereum public key to use as a submitter to allow automatic signature generation.","type":"string"},"targetBlock":{"description":"Target block at which the key rotation will take effect on.","format":"uint64","type":"string"}},"title":"Transaction to allow a validator to rotate their ethereum keys","type":"object"},"v1EthereumKeyRotation":{"properties":{"blockHeight":{"format":"uint64","title":"Block height when the key rotation took effect","type":"string"},"newAddress":{"title":"Ethereum address that is newly associated with the node","type":"string"},"nodeId":{"title":"Node ID of the node that rotated their Ethereum key","type":"string"},"oldAddress":{"title":"Ethereum address that was previously associated with the node","type":"string"}},"title":"Event that contains information about an Ethereum key rotation","type":"object"},"v1ExpiredOrders":{"properties":{"marketId":{"title":"Market ID for the event","type":"string"},"orderIds":{"items":{"type":"string"},"title":"Slice of expired order IDs","type":"array"}},"type":"object"},"v1ExternalData":{"properties":{"data":{"$ref":"#/components/schemas/v1Data"}},"type":"object"},"v1Filter":{"description":"Filter describes the conditions under which a data source data is considered of\ninterest or not.","properties":{"conditions":{"description":"Conditions that should be matched by the data to be\nconsidered of interest.","items":{"$ref":"#/components/schemas/v1Condition"},"type":"array"},"key":{"$ref":"#/components/schemas/v1PropertyKey","description":"Data source's data property key targeted by the filter."}},"type":"object"},"v1IssueSignatures":{"properties":{"kind":{"$ref":"#/components/schemas/v1NodeSignatureKind","description":"What kind of signatures to generate, namely for whether a signer is being added or removed."},"submitter":{"description":"Ethereum address which will submit the signatures to the smart contract.","type":"string"},"validatorNodeId":{"description":"Node ID of the validator node that will be signed in or out of the smart contract.","type":"string"}},"title":"Transaction for a validator to submit signatures to a smart contract","type":"object"},"v1KeyRotateSubmission":{"properties":{"currentPubKeyHash":{"description":"Hash of currently used public key.","type":"string"},"newPubKey":{"description":"New public key to rotate to.","type":"string"},"newPubKeyIndex":{"description":"New Vega public key derivation index.","format":"int64","type":"integer"},"targetBlock":{"description":"Target block at which the key rotation will take effect on.","format":"uint64","type":"string"}},"title":"Transaction to allow a validator to rotate their Vega keys","type":"object"},"v1KeyRotation":{"properties":{"blockHeight":{"format":"uint64","title":"Block height when the key rotation took effect","type":"string"},"newPubKey":{"title":"Vega public key that is newly associated with the node","type":"string"},"nodeId":{"title":"Node ID of the node that rotated their Vega key","type":"string"},"oldPubKey":{"title":"Vega public key that was previously associated with the node","type":"string"}},"title":"Event that contains information about a Vega key rotation","type":"object"},"v1LedgerMovements":{"properties":{"ledgerMovements":{"items":{"$ref":"#/components/schemas/vegaLedgerMovement"},"title":"One or more entries containing internal transfer information","type":"array"}},"title":"Transfer responses event contains a collection of transfer information","type":"object"},"v1LiquidityProvisionAmendment":{"properties":{"buys":{"items":{"$ref":"#/components/schemas/vegaLiquidityOrder"},"type":"array"},"commitmentAmount":{"description":"From here at least one of the following is required to consider the command valid.","type":"string"},"fee":{"type":"string"},"marketId":{"description":"Unique ID for the market with the liquidity provision to be amended.","type":"string"},"reference":{"type":"string"},"sells":{"items":{"$ref":"#/components/schemas/vegaLiquidityOrder"},"type":"array"}},"title":"Amend a liquidity provision request","type":"object"},"v1LiquidityProvisionCancellation":{"properties":{"marketId":{"description":"Unique ID for the market with the liquidity provision to be cancelled.","type":"string"}},"title":"Cancel a liquidity provision request","type":"object"},"v1LiquidityProvisionSubmission":{"properties":{"buys":{"description":"Set of liquidity buy orders to meet the liquidity provision obligation.","items":{"$ref":"#/components/schemas/vegaLiquidityOrder"},"type":"array"},"commitmentAmount":{"description":"Specified as a unitless number that represents the amount of settlement asset of the market.\nThis field is an unsigned integer scaled using the asset's decimal places.","type":"string"},"fee":{"description":"Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per setting fees and rewarding liquidity providers.","type":"string"},"marketId":{"description":"Market ID for the order, required field.","type":"string"},"reference":{"description":"Reference to be added to every order created out of this liquidityProvisionSubmission.","type":"string"},"sells":{"description":"Set of liquidity sell orders to meet the liquidity provision obligation.","items":{"$ref":"#/components/schemas/vegaLiquidityOrder"},"type":"array"}},"title":"A liquidity provision submitted for a given market","type":"object"},"v1LossSocialization":{"properties":{"amount":{"title":"Amount distributed","type":"string"},"marketId":{"title":"Market ID for the event","type":"string"},"partyId":{"title":"Party ID (public key) for the event","type":"string"}},"title":"Loss socialization event contains details on the amount of wins unable to be distributed","type":"object"},"v1MarketEvent":{"properties":{"marketId":{"title":"Market ID for the event","type":"string"},"payload":{"title":"Payload is a unique information string","type":"string"}},"title":"MarketEvent - the common denominator for all market events\ninterface has a method to return a string for logging","type":"object"},"v1MarketTick":{"properties":{"id":{"title":"Market ID for the event","type":"string"},"time":{"format":"int64","title":"Timestamp containing latest update from Vega blockchain aka Vega-time","type":"string"}},"title":"Market tick event contains the time value for when a particular market was last processed on Vega","type":"object"},"v1NodeSignature":{"properties":{"id":{"description":"ID of the resource being signed.","type":"string"},"kind":{"$ref":"#/components/schemas/v1NodeSignatureKind","description":"Kind of resource being signed."},"sig":{"description":"The signature generated by the signer.","format":"byte","type":"string"}},"title":"Represents a signature from a validator, to be used by a foreign chain in order to recognise a decision taken by the Vega network","type":"object"},"v1NodeSignatureKind":{"default":"NODE_SIGNATURE_KIND_UNSPECIFIED","description":"- NODE_SIGNATURE_KIND_UNSPECIFIED: Represents an unspecified or missing value from the input\n - NODE_SIGNATURE_KIND_ASSET_NEW: Represents a signature for a new asset allow-listing\n - NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL: Represents a signature for an asset withdrawal\n - NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_ADDED: Represents a signature for a new signer added to the erc20 multisig contract\n - NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_REMOVED: Represents a signature for a signer removed from the erc20 multisig contract\n - NODE_SIGNATURE_KIND_ASSET_UPDATE: Represents a signature for an asset update allow-listing","enum":["NODE_SIGNATURE_KIND_UNSPECIFIED","NODE_SIGNATURE_KIND_ASSET_NEW","NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL","NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_ADDED","NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_REMOVED","NODE_SIGNATURE_KIND_ASSET_UPDATE"],"title":"Kind of signature created by a node, for example, allow-listing a new asset, withdrawal etc","type":"string"},"v1OracleDataSubmission":{"properties":{"payload":{"description":"Data provided by the data source\nIn the case of Open Oracle - it will be the entire object - it will contain messages, signatures and price data.","format":"byte","type":"string"},"source":{"$ref":"#/components/schemas/OracleDataSubmissionOracleSource","description":"Source from which the data is coming from. Must be base64 encoded.\nOracle data is a type of external data source data."}},"title":"Command to submit new Oracle data from third party providers","type":"object"},"v1OrderAmendment":{"properties":{"expiresAt":{"description":"Amend the expiry time for the order, if the Timestamp value is set, otherwise expiry time will remain unchanged.","format":"int64","type":"string"},"marketId":{"description":"Market ID, this is required to find the order and will not be updated.","type":"string"},"orderId":{"description":"Order ID, this is required to find the order and will not be updated, required field.","type":"string"},"peggedOffset":{"description":"Amend the pegged order offset for the order. This field is an unsigned integer scaled to the market's decimal places.","type":"string"},"peggedReference":{"$ref":"#/components/schemas/vegaPeggedReference","description":"Amend the pegged order reference for the order."},"price":{"description":"Amend the price for the order if the price value is set, otherwise price will remain unchanged.\nThis field is an unsigned integer scaled to the market's decimal places.","type":"string"},"sizeDelta":{"description":"Amend the size for the order by the delta specified:\n- To reduce the size from the current value set a negative integer value\n- To increase the size from the current value, set a positive integer value\n- To leave the size unchanged set a value of zero\nThis field needs to be scaled using the market's position decimal places.","format":"int64","type":"string"},"timeInForce":{"$ref":"#/components/schemas/OrderTimeInForce","description":"Amend the time in force for the order, set to TIME_IN_FORCE_UNSPECIFIED to remain unchanged."}},"title":"An order amendment is a request to amend or update an existing order on Vega","type":"object"},"v1OrderCancellation":{"properties":{"marketId":{"description":"Market ID for the order, required field.","type":"string"},"orderId":{"description":"Unique ID for the order. This is set by the system after consensus. Required field.","type":"string"}},"title":"Order cancellation is a request to cancel an existing order on Vega","type":"object"},"v1OrderSubmission":{"properties":{"expiresAt":{"description":"Timestamp for when the order will expire, in nanoseconds,\nrequired field only for `Order.TimeInForce`.TIME_IN_FORCE_GTT`.","format":"int64","type":"string"},"marketId":{"description":"Market ID for the order, required field.","type":"string"},"peggedOrder":{"$ref":"#/components/schemas/vegaPeggedOrder","description":"Used to specify the details for a pegged order."},"postOnly":{"description":"Only valid for Limit orders. Cannot be True at the same time as Reduce-Only.","type":"boolean"},"price":{"description":"Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places,\nrequired field for limit orders, however it is not required for market orders.\nThis field is an unsigned integer scaled to the market's decimal places.","type":"string"},"reduceOnly":{"description":"Only valid for Non-Persistent orders. Cannot be True at the same time as Post-Only.\nIf set, order will only be executed if the outcome of the trade moves the trader's position closer to 0.","type":"boolean"},"reference":{"description":"Reference given for the order, this is typically used to retrieve an order submitted through consensus, currently\nset internally by the node to return a unique reference ID for the order submission.","type":"string"},"side":{"$ref":"#/components/schemas/vegaSide","description":"Side for the order, e.g. SIDE_BUY or SIDE_SELL, required field."},"size":{"description":"Size for the order, for example, in a futures market the size equals the number of units, cannot be negative.","format":"uint64","type":"string"},"timeInForce":{"$ref":"#/components/schemas/OrderTimeInForce","description":"Time in force indicates how long an order will remain active before it is executed or expires, required field."},"type":{"$ref":"#/components/schemas/vegaOrderType","description":"Type for the order, required field - See `Order.Type`."}},"title":"Order submission is a request to submit or create a new order on Vega","type":"object"},"v1PositionResolution":{"properties":{"closed":{"format":"int64","title":"Number of close outs","type":"string"},"distressed":{"format":"int64","title":"Number of distressed traders","type":"string"},"markPrice":{"title":"Mark price as a string representing a scaled price","type":"string"},"marketId":{"title":"Market ID for the event","type":"string"}},"title":"Position resolution event contains information on distressed trades","type":"object"},"v1PositionStateEvent":{"properties":{"marketId":{"title":"Market ID for this position update","type":"string"},"partyId":{"title":"Party ID for this position update","type":"string"},"potentialBuys":{"format":"int64","title":"Potential orders","type":"string"},"potentialSells":{"format":"int64","type":"string"},"size":{"format":"int64","title":"Current position","type":"string"},"vwBuyPrice":{"title":"Volume weighted prices","type":"string"},"vwSellPrice":{"type":"string"}},"title":"Position state event contains the current position state for a single party in a single market","type":"object"},"v1Property":{"description":"Property describes one property of data spec with a key with its value.","properties":{"name":{"description":"Name of the property.","type":"string"},"numberDecimalPlaces":{"format":"uint64","title":"Optional decimal place to be be applied on the provided value\nvalid only for PropertyType of type DECIMAL and INTEGER","type":"string"},"value":{"description":"Value of the property.","type":"string"}},"type":"object"},"v1PropertyKey":{"description":"PropertyKey describes the property key contained in data source data.","properties":{"name":{"description":"Name of the property.","type":"string"},"numberDecimalPlaces":{"format":"uint64","title":"Optional decimal place to be be applied on the provided value\nvalid only for PropertyType of type DECIMAL and INTEGER","type":"string"},"type":{"$ref":"#/components/schemas/v1PropertyKeyType","description":"Data type of the property."}},"type":"object"},"v1PropertyKeyType":{"default":"TYPE_UNSPECIFIED","description":"Type describes the data type of properties that are supported by the data source\nengine.\n\n - TYPE_UNSPECIFIED: The default value.\n - TYPE_EMPTY: Any type.\n - TYPE_INTEGER: Integer type.\n - TYPE_STRING: String type.\n - TYPE_BOOLEAN: Boolean type.\n - TYPE_DECIMAL: Any floating point decimal type.\n - TYPE_TIMESTAMP: Timestamp date type.","enum":["TYPE_UNSPECIFIED","TYPE_EMPTY","TYPE_INTEGER","TYPE_STRING","TYPE_BOOLEAN","TYPE_DECIMAL","TYPE_TIMESTAMP"],"type":"string"},"v1ProposalSubmission":{"properties":{"rationale":{"$ref":"#/components/schemas/vegaProposalRationale","description":"Rationale behind a proposal."},"reference":{"description":"Reference identifying the proposal.","type":"string"},"terms":{"$ref":"#/components/schemas/vegaProposalTerms","description":"Proposal configuration and the actual change that is meant to be executed when proposal is enacted."}},"title":"Command to submit a new proposal for the\nVega network governance","type":"object"},"v1ProtocolUpgradeDataNodeReady":{"properties":{"lastBlockHeight":{"format":"uint64","type":"string"}},"title":"Event indicating the data node is ready for protocol upgrade","type":"object"},"v1ProtocolUpgradeEvent":{"properties":{"approvers":{"items":{"type":"string"},"title":"Tendermint validators that have agreed to the upgrade","type":"array"},"status":{"$ref":"#/components/schemas/v1ProtocolUpgradeProposalStatus","title":"Status of the proposal"},"upgradeBlockHeight":{"format":"uint64","title":"Block height at which to perform the upgrade","type":"string"},"vegaReleaseTag":{"title":"Release tag for the vega binary","type":"string"}},"type":"object"},"v1ProtocolUpgradeProposal":{"properties":{"upgradeBlockHeight":{"description":"Block height at which to perform the upgrade.","format":"uint64","type":"string"},"vegaReleaseTag":{"description":"Release tag for the Vega binary.","type":"string"}},"title":"Transaction for a validator to suggest a protocol upgrade","type":"object"},"v1ProtocolUpgradeProposalStatus":{"default":"PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED","enum":["PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED","PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING","PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED","PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED"],"title":"- PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING: The proposal is pending\n - PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED: The proposal is approved\n - PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED: The proposal is rejected","type":"string"},"v1ProtocolUpgradeStarted":{"properties":{"lastBlockHeight":{"format":"uint64","type":"string"}},"title":"Event indicating the core is starting a protocol upgrade","type":"object"},"v1PubKey":{"description":"PubKey is the public key that signed this data.\nDifferent public keys coming from different sources will be further separated.","properties":{"key":{"type":"string"}},"type":"object"},"v1RewardPayoutEvent":{"properties":{"amount":{"type":"string"},"asset":{"type":"string"},"epochSeq":{"type":"string"},"market":{"type":"string"},"party":{"type":"string"},"percentOfTotalReward":{"type":"string"},"rewardType":{"type":"string"},"timestamp":{"format":"int64","type":"string"}},"type":"object"},"v1SettleDistressed":{"properties":{"margin":{"title":"Margin value as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"},"marketId":{"title":"Market ID for the event","type":"string"},"partyId":{"title":"Party ID i.e. a party's public key for the event","type":"string"},"price":{"title":"Price as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places","type":"string"}},"title":"Settle distressed event contains information on distressed trading parties who are closed out","type":"object"},"v1SettleMarket":{"properties":{"marketId":{"title":"Market ID for the event","type":"string"},"positionFactor":{"title":"Position factor - 10 ^ number of position decimal places","type":"string"},"price":{"title":"Price of settlement as a string","type":"string"}},"title":"Settle market event to notify data node that a market has been settled\nso positions and PL can be updated accordingly","type":"object"},"v1SettlePosition":{"properties":{"marketId":{"title":"Market ID for the event","type":"string"},"partyId":{"title":"Party ID (public key) for the event","type":"string"},"positionFactor":{"title":"Position factor - 10 ^ number of position decimal places","type":"string"},"price":{"title":"Price of settlement as a string","type":"string"},"tradeSettlements":{"items":{"$ref":"#/components/schemas/v1TradeSettlement"},"title":"A collection of 1 or more trade settlements","type":"array"}},"title":"Settle position event contains position settlement information for a party","type":"object"},"v1Signature":{"description":"Signature to authenticate a transaction and to be verified by the Vega\nnetwork.","properties":{"algo":{"description":"Algorithm used to create the signature.","type":"string"},"value":{"description":"Hex encoded bytes of the signature.","type":"string"},"version":{"description":"Version of the signature used to create the signature.","format":"int64","type":"integer"}},"type":"object"},"v1Signer":{"properties":{"ethAddress":{"$ref":"#/components/schemas/v1ETHAddress","title":"In case of an open oracle - Ethereum address will be submitted"},"pubKey":{"$ref":"#/components/schemas/v1PubKey","description":"List of authorized public keys that signed the data for this\nsource. All the public keys in the data should be contained in these\npublic keys."}},"type":"object"},"v1StakeLinking":{"properties":{"amount":{"title":"Amount of stake deposited or removed","type":"string"},"blockHeight":{"format":"uint64","title":"Block when the event happened","type":"string"},"blockTime":{"format":"int64","title":"Block time","type":"string"},"ethereumAddress":{"title":"Ethereum address from which the stake link was initiated","type":"string"},"finalizedAt":{"format":"int64","title":"Time at which the vega network finalized the state of the event","type":"string"},"id":{"title":"Internal ID for this staking event","type":"string"},"logIndex":{"format":"uint64","title":"Log index","type":"string"},"party":{"description":"Party to whom the event is directed at.","type":"string"},"status":{"$ref":"#/components/schemas/v1StakeLinkingStatus","title":"Status of the event"},"ts":{"format":"int64","title":"Timestamps at which the event was emitted by ethereum","type":"string"},"txHash":{"title":"Hash of the transaction from which the events happen","type":"string"},"type":{"$ref":"#/components/schemas/v1StakeLinkingType","description":"Stake linking event type."}},"title":"StakeLinking - an event notifying of stake being deposited or removed for a given party\nThese events are emitted for every Staking deposit or removed accepted by the network","type":"object"},"v1StakeLinkingStatus":{"default":"STATUS_UNSPECIFIED","enum":["STATUS_UNSPECIFIED","STATUS_PENDING","STATUS_ACCEPTED","STATUS_REJECTED"],"title":"- STATUS_UNSPECIFIED: Default value\n - STATUS_PENDING: Indicates an event waiting for confirmation from the Vega network\n - STATUS_ACCEPTED: Indicates an event accepted by the Vega network\n - STATUS_REJECTED: Indicates an event rejected by the Vega network","type":"string"},"v1StakeLinkingType":{"default":"TYPE_UNSPECIFIED","enum":["TYPE_UNSPECIFIED","TYPE_LINK","TYPE_UNLINK"],"title":"- TYPE_UNSPECIFIED: Default value\n - TYPE_LINK: Indicate of a stake deposit instruction\n - TYPE_UNLINK: Indicate of a stake remove instruction","type":"string"},"v1StateVar":{"properties":{"eventId":{"type":"string"},"id":{"type":"string"},"state":{"type":"string"}},"title":"StateVar event updates on state changes in state variable consensus","type":"object"},"v1TimeUpdate":{"properties":{"timestamp":{"format":"int64","title":"Timestamp containing latest update from Vega blockchain aka Vega-time","type":"string"}},"title":"Time update event contains the latest time update from Vega blockchain and indicates the start of a new block","type":"object"},"v1TradeSettlement":{"properties":{"marketPrice":{"title":"Price of settlement as a string (in market decimals)","type":"string"},"price":{"title":"Price of settlement as string (in asset decimals)","type":"string"},"size":{"format":"int64","title":"Size of trade settlement","type":"string"}},"title":"Trade settlement is part of the settle position event","type":"object"},"v1TransactionResult":{"properties":{"announceNode":{"$ref":"#/components/schemas/v1AnnounceNode"},"batchMarketInstructions":{"$ref":"#/components/schemas/v1BatchMarketInstructions"},"cancelTransfer":{"$ref":"#/components/schemas/v1CancelTransfer"},"delegateSubmission":{"$ref":"#/components/schemas/v1DelegateSubmission"},"ethereumKeyRotateSubmission":{"$ref":"#/components/schemas/v1EthereumKeyRotateSubmission"},"failure":{"$ref":"#/components/schemas/TransactionResultFailureDetails"},"hash":{"title":"Hash of the transaction","type":"string"},"issueSignatures":{"$ref":"#/components/schemas/v1IssueSignatures"},"keyRotateSubmission":{"$ref":"#/components/schemas/v1KeyRotateSubmission"},"liquidityProvisionAmendment":{"$ref":"#/components/schemas/v1LiquidityProvisionAmendment"},"liquidityProvisionCancellation":{"$ref":"#/components/schemas/v1LiquidityProvisionCancellation"},"liquidityProvisionSubmission":{"$ref":"#/components/schemas/v1LiquidityProvisionSubmission"},"oracleDataSubmission":{"$ref":"#/components/schemas/v1OracleDataSubmission"},"orderAmendment":{"$ref":"#/components/schemas/v1OrderAmendment"},"orderCancellation":{"$ref":"#/components/schemas/v1OrderCancellation"},"orderSubmission":{"$ref":"#/components/schemas/v1OrderSubmission"},"partyId":{"title":"Unique party ID for the related party","type":"string"},"proposal":{"$ref":"#/components/schemas/v1ProposalSubmission"},"protocolUpgradeProposal":{"$ref":"#/components/schemas/v1ProtocolUpgradeProposal"},"status":{"description":"Status of the transaction, did it succeed or an error was raised.","type":"boolean"},"success":{"$ref":"#/components/schemas/TransactionResultSuccessDetails"},"transfer":{"$ref":"#/components/schemas/vegacommandsv1Transfer"},"undelegateSubmission":{"$ref":"#/components/schemas/v1UndelegateSubmission"},"voteSubmission":{"$ref":"#/components/schemas/v1VoteSubmission"},"withdrawSubmission":{"$ref":"#/components/schemas/v1WithdrawSubmission"}},"type":"object"},"v1TransferStatus":{"default":"STATUS_UNSPECIFIED","enum":["STATUS_UNSPECIFIED","STATUS_PENDING","STATUS_DONE","STATUS_REJECTED","STATUS_STOPPED","STATUS_CANCELLED"],"title":"- STATUS_UNSPECIFIED: Default value\n - STATUS_PENDING: Indicates a transfer still being processed\n - STATUS_DONE: Indicates a transfer accepted by the Vega network\n - STATUS_REJECTED: Indicates a transfer rejected by the Vega network\n - STATUS_STOPPED: Indicates a transfer stopped by the Vega network\ne.g: no funds left to cover the transfer\n - STATUS_CANCELLED: Indicates a transfer cancelled by the user","type":"string"},"v1TxErrorEvent":{"properties":{"announceNode":{"$ref":"#/components/schemas/v1AnnounceNode"},"batchMarketInstructions":{"$ref":"#/components/schemas/v1BatchMarketInstructions"},"cancelTransfer":{"$ref":"#/components/schemas/v1CancelTransfer"},"delegateSubmission":{"$ref":"#/components/schemas/v1DelegateSubmission"},"errMsg":{"title":"Error message describing what went wrong","type":"string"},"issueSignatures":{"$ref":"#/components/schemas/v1IssueSignatures"},"liquidityProvisionAmendment":{"$ref":"#/components/schemas/v1LiquidityProvisionAmendment"},"liquidityProvisionCancellation":{"$ref":"#/components/schemas/v1LiquidityProvisionCancellation"},"liquidityProvisionSubmission":{"$ref":"#/components/schemas/v1LiquidityProvisionSubmission"},"oracleDataSubmission":{"$ref":"#/components/schemas/v1OracleDataSubmission"},"orderAmendment":{"$ref":"#/components/schemas/v1OrderAmendment"},"orderCancellation":{"$ref":"#/components/schemas/v1OrderCancellation"},"orderSubmission":{"$ref":"#/components/schemas/v1OrderSubmission"},"partyId":{"title":"Unique party ID for the related party","type":"string"},"proposal":{"$ref":"#/components/schemas/v1ProposalSubmission"},"protocolUpgradeProposal":{"$ref":"#/components/schemas/v1ProtocolUpgradeProposal"},"transfer":{"$ref":"#/components/schemas/vegacommandsv1Transfer"},"undelegateSubmission":{"$ref":"#/components/schemas/v1UndelegateSubmission"},"voteSubmission":{"$ref":"#/components/schemas/v1VoteSubmission"},"withdrawSubmission":{"$ref":"#/components/schemas/v1WithdrawSubmission"}},"type":"object"},"v1UndelegateSubmission":{"properties":{"amount":{"description":"Optional, if not specified = ALL.\nIf provided, this field must be an unsigned integer passed as a string\nand needs to be scaled using the asset decimal places for the token.","type":"string"},"method":{"$ref":"#/components/schemas/UndelegateSubmissionMethod","description":"Method of delegation."},"nodeId":{"description":"Node ID to delegate to.","type":"string"}},"type":"object"},"v1ValidatorRankingEvent":{"properties":{"epochSeq":{"title":"Epoch seq for which the status is valid","type":"string"},"nextStatus":{"title":"Status of the validator in the next epoch","type":"string"},"nodeId":{"type":"string"},"performanceScore":{"title":"Performance base score","type":"string"},"previousStatus":{"title":"Status of the validator in the previous epoch","type":"string"},"rankingScore":{"title":"Final score","type":"string"},"stakeScore":{"title":"Stake based score - no anti-whaling","type":"string"},"tmVotingPower":{"format":"int64","title":"Tendermint voting power of the validator","type":"integer"}},"title":"Event that explains the status of the validator for the coming epoch","type":"object"},"v1ValidatorScoreEvent":{"properties":{"epochSeq":{"type":"string"},"multisigScore":{"type":"string"},"nodeId":{"type":"string"},"normalisedScore":{"type":"string"},"rawValidatorScore":{"type":"string"},"validatorPerformance":{"type":"string"},"validatorScore":{"type":"string"},"validatorStatus":{"type":"string"}},"title":"ValidatorScoreEvent is the score a validator gets for a given epoch","type":"object"},"v1ValidatorUpdate":{"properties":{"added":{"title":"Flag indicating if the validator has been added to or removed from vega","type":"boolean"},"avatarUrl":{"title":"AvatarURL of the validator","type":"string"},"country":{"title":"Country code (ISO 3166-1 alpha-2) for the location of the node","type":"string"},"epochSeq":{"format":"uint64","title":"Epoch in which the node was announced or removed from the network","type":"string"},"ethereumAddress":{"title":"Ethereum public key of validator node","type":"string"},"fromEpoch":{"format":"uint64","title":"Epoch in which the announced pending node will start participating in the network","type":"string"},"infoUrl":{"title":"URL with more info on the node","type":"string"},"name":{"title":"Name of the validator","type":"string"},"nodeId":{"title":"Node ID of the validator node","type":"string"},"submitterAddress":{"title":"Ethereum public key being used as the submitter to allow automatic signature generation","type":"string"},"tmPubKey":{"title":"Public key of Tendermint","type":"string"},"vegaPubKey":{"title":"Vega public key of validator node","type":"string"},"vegaPubKeyIndex":{"format":"int64","title":"Vega public key derivation index","type":"integer"}},"title":"Validator update event contains information about validator node","type":"object"},"v1VoteSubmission":{"description":"Command to submit a new vote for a governance proposal.","properties":{"proposalId":{"description":"Submit vote for the specified proposal ID.","type":"string"},"value":{"$ref":"#/components/schemas/vegaVoteValue","description":"Actual value of the vote."}},"type":"object"},"v1WithdrawSubmission":{"properties":{"amount":{"description":"Amount to be withdrawn. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"asset":{"description":"Asset to be withdrawn.","type":"string"},"ext":{"$ref":"#/components/schemas/vegaWithdrawExt","description":"Foreign chain specifics."}},"title":"Represents the submission request to withdraw funds for a party on Vega","type":"object"},"v2AccountBalance":{"properties":{"asset":{"description":"Asset ID for the account.","type":"string"},"balance":{"description":"Asset balance represented as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.\nBalances cannot be negative.","type":"string"},"marketId":{"description":"Market ID for the account, this field will be empty if the asset is in a general account.","type":"string"},"owner":{"description":"Unique account ID used internally by Vega\nstring id = 1;\nParty that owns the account.\nSpecial values include `network` - represents the Vega network and is\nmost commonly seen during liquidation of a distressed trading position.","type":"string"},"type":{"$ref":"#/components/schemas/vegaAccountType","description":"Account type of this account."}},"title":"Represents the current balance of an account for an asset on Vega, for a particular owner or party","type":"object"},"v2AccountEdge":{"description":"Account data item with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages with reference to this account.","type":"string"},"node":{"$ref":"#/components/schemas/v2AccountBalance","description":"Account balance data."}},"type":"object"},"v2AccountFilter":{"properties":{"accountTypes":{"description":"Restrict accounts to those connected to any of the types in this list. Pass an empty list for no filter.","items":{"$ref":"#/components/schemas/vegaAccountType"},"type":"array"},"assetId":{"description":"Restrict accounts to those holding balances in this asset ID.","type":"string"},"marketIds":{"description":"Restrict accounts to those connected to the markets in this list. Pass an empty list for no filter.","items":{"type":"string"},"type":"array"},"partyIds":{"description":"Restrict accounts to those owned by the parties in this list. Pass an empty list for no filter.","items":{"type":"string"},"type":"array"}},"title":"Filter that is used to filter account data by asset ID, party ID, market ID and account type","type":"object"},"v2AccountSnapshotPage":{"properties":{"accounts":{"description":"List of account balances.","items":{"$ref":"#/components/schemas/v2AccountBalance"},"type":"array"},"lastPage":{"description":"Indicator if the current page is the last one or not.","type":"boolean"}},"title":"'Initial image' snapshot containing current account balances - may be sent over several response messages","type":"object"},"v2AccountUpdates":{"properties":{"accounts":{"description":"List of account balances.","items":{"$ref":"#/components/schemas/v2AccountBalance"},"type":"array"}},"title":"List of account updates in the last block","type":"object"},"v2AccountsConnection":{"description":"Page of accounts data and corresponding page information.","properties":{"edges":{"description":"Page of accounts data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2AccountEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2AggregatedBalance":{"properties":{"accountType":{"$ref":"#/components/schemas/vegaAccountType","description":"If grouping by account type, the account type."},"assetId":{"description":"If grouping by asset, the asset ID.","type":"string"},"balance":{"description":"Balance of the set of requested accounts at the time above.","type":"string"},"marketId":{"title":"If grouping by market, the market ID","type":"string"},"partyId":{"description":"If grouping by party, the party ID.","type":"string"},"timestamp":{"description":"Timestamp to of block the balance is referring to, in nanoseconds.","format":"int64","type":"string"}},"title":"AggregatedBalance data contains the balance of the set of requested accounts combined with corresponding\nparty ID, market ID and account type details","type":"object"},"v2AggregatedBalanceConnection":{"properties":{"edges":{"description":"Page of aggregated balance data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2AggregatedBalanceEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of aggregated balance objects and corresponding page information","type":"object"},"v2AggregatedBalanceEdge":{"description":"Aggregated balance data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v2AggregatedBalance","description":"Balance of the set of requested accounts."}},"type":"object"},"v2AggregatedLedgerEntriesConnection":{"properties":{"edges":{"description":"Page of 'AggregatedLedgerEntry' data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2AggregatedLedgerEntriesEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of aggregated ledger entries data and corresponding page information","type":"object"},"v2AggregatedLedgerEntriesEdge":{"properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v2AggregatedLedgerEntry","description":"'AggregatedLedgerEntry' data."}},"title":"Represents the aggregated ledger entry data with corresponding cursor for it","type":"object"},"v2AggregatedLedgerEntry":{"properties":{"assetId":{"description":"Asset ID for the asset associated with the entry.","type":"string"},"fromAccountBalance":{"description":"Sender account balance after the transfer.","type":"string"},"fromAccountMarketId":{"description":"Sender market ID.","type":"string"},"fromAccountPartyId":{"description":"Sender's party ID.","type":"string"},"fromAccountType":{"$ref":"#/components/schemas/vegaAccountType","description":"Type of account sent from."},"quantity":{"description":"Amount of ledger entries for the set of requested accounts at the time above.","type":"string"},"timestamp":{"description":"Timestamp to of block the result is referring to, in nanoseconds.","format":"int64","type":"string"},"toAccountBalance":{"description":"Receiver account balance after the transfer.","type":"string"},"toAccountMarketId":{"description":"Receiver market ID.","type":"string"},"toAccountPartyId":{"description":"Receiver's party ID.","type":"string"},"toAccountType":{"$ref":"#/components/schemas/vegaAccountType","description":"Type of account received to."},"transferType":{"$ref":"#/components/schemas/vegaTransferType","description":"Transfer type."}},"title":"Represents an aggregated view of ledger entry data, sender and receiver accounts,\ndetails and balances for both sides after the transfer has been made","type":"object"},"v2AssetEdge":{"description":"Assets data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaAsset","description":"Asset data returned."}},"type":"object"},"v2AssetsConnection":{"properties":{"edges":{"description":"Page of assets data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2AssetEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of asset data and corresponding page information","type":"object"},"v2CandleDataConnection":{"properties":{"edges":{"description":"Page of candle data items and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2CandleEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of candles data and corresponding page information","type":"object"},"v2CandleEdge":{"description":"Candle data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/apiv2Candle","description":"Candlestick data, i.e. high, low, open, and closing prices for an interval of trading."}},"type":"object"},"v2Checkpoint":{"properties":{"atBlock":{"description":"Block number at which the checkpoint is made.","format":"uint64","type":"string"},"blockHash":{"description":"Block hash at which the checkpoint is made.","type":"string"},"hash":{"description":"Hash of the checkpoint.","type":"string"}},"title":"Actual data regarding a checkpoint","type":"object"},"v2CheckpointEdge":{"description":"Checkpoint data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v2Checkpoint","description":"Data relating to a single checkpoint generated by the Vega network."}},"type":"object"},"v2CheckpointsConnection":{"properties":{"edges":{"description":"Page of checkpoints data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2CheckpointEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of checkpoints data and corresponding page information","type":"object"},"v2CoreSnapshotConnection":{"description":"Page of core snapshot data and corresponding page information.","properties":{"edges":{"description":"Page of core snapshot data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2CoreSnapshotEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2CoreSnapshotEdge":{"description":"Core snapshot data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v1CoreSnapshotData","description":"Core snapshot data."}},"type":"object"},"v2DateRange":{"description":"Date range for queries that can return historical data\nTimestamps should be provided as unix time in nanoseconds and are inclusive.","properties":{"endTimestamp":{"format":"int64","type":"string"},"startTimestamp":{"format":"int64","type":"string"}},"type":"object"},"v2DelegationEdge":{"description":"Delegation data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaDelegation","description":"How much a party is delegating to a node and when."}},"type":"object"},"v2DelegationsConnection":{"properties":{"edges":{"description":"Page of delegations data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2DelegationEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of delegations data and corresponding page information","type":"object"},"v2DepositEdge":{"description":"Deposits data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaDeposit","description":"Data associated with a single deposit made on the Vega network."}},"type":"object"},"v2DepositsConnection":{"properties":{"edges":{"description":"Page of deposits data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2DepositEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of deposits data received and corresponding page information","type":"object"},"v2ERC20MultiSigSignerAddedBundle":{"properties":{"epochSeq":{"description":"Epoch in which the validator was added.","type":"string"},"newSigner":{"description":"Ethereum address of the signer to be removed.","type":"string"},"nonce":{"description":"Nonce used in the signing operation.","type":"string"},"signatures":{"description":"Bundle of signatures from current validators to sign in the new signer.","type":"string"},"submitter":{"description":"Ethereum address of the submitter.","type":"string"},"timestamp":{"description":"Unixnano timestamp for when the validator was added.","format":"int64","type":"string"}},"title":"Signature bundle data to be added","type":"object"},"v2ERC20MultiSigSignerAddedBundleEdge":{"description":"Signature bundle data that is to be added with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v2ERC20MultiSigSignerAddedBundle","description":"Signature bundle data to be added."}},"type":"object"},"v2ERC20MultiSigSignerAddedConnection":{"properties":{"edges":{"description":"Page of signature bundle data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2ERC20MultiSigSignerAddedBundleEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of signature data items to be added and corresponding page information","type":"object"},"v2ERC20MultiSigSignerRemovedBundle":{"properties":{"epochSeq":{"description":"Epoch in which the validator was removed.","type":"string"},"nonce":{"description":"Nonce used in the signing operation.","type":"string"},"oldSigner":{"description":"Ethereum address of the signer to be removed.","type":"string"},"signatures":{"description":"Bundle of signatures from current validators to sign in the new signer.","type":"string"},"submitter":{"description":"Ethereum address of the submitter.","type":"string"},"timestamp":{"description":"Unixnano timestamp for when the validator was added.","format":"int64","type":"string"}},"title":"Signature bundle data to be removed","type":"object"},"v2ERC20MultiSigSignerRemovedBundleEdge":{"description":"Signature bundle data to be removed, with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v2ERC20MultiSigSignerRemovedBundle","description":"Signature bundle data to be added."}},"type":"object"},"v2ERC20MultiSigSignerRemovedConnection":{"description":"Page of signature data items to be removed and corresponding page information.","properties":{"edges":{"description":"Page of signature bundle data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2ERC20MultiSigSignerRemovedBundleEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2EpochRewardSummaryConnection":{"properties":{"edges":{"description":"Page of rewards summary data for epochs and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2EpochRewardSummaryEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of rewards summary data for epoch and corresponding page information","type":"object"},"v2EpochRewardSummaryEdge":{"description":"Rewards summary data for epoch with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaEpochRewardSummary","description":"Rewards summary data for epoch."}},"type":"object"},"v2EstimateFeeResponse":{"properties":{"fee":{"$ref":"#/components/schemas/vegaFee","description":"Summary of the estimated fees for this order if it were to trade now."}},"title":"Response that is received from EstimateFeeRequest, contains the estimated fees for a given order","type":"object"},"v2EstimateMarginResponse":{"properties":{"marginLevels":{"$ref":"#/components/schemas/vegaMarginLevels","description":"Summary of the estimated margins for this order if it were to trade now."}},"title":"Response to an estimate margin request, containing the estimated margin levels for a given order","type":"object"},"v2EstimatePositionResponse":{"description":"Response for the estimate of the margin level and, if available collateral was provided in the request, liqudation price for the specified position.","properties":{"liquidation":{"$ref":"#/components/schemas/v2LiquidationEstimate","description":"Liquidation price range estimate for the specified position. Only populated if available collateral was specified in the request."},"margin":{"$ref":"#/components/schemas/v2MarginEstimate","description":"Margin level range estimate for the specified position."}},"type":"object"},"v2EthereumKeyRotationEdge":{"description":"Ethereum key rotation data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v1EthereumKeyRotation","description":"Data relating to an Ethereum key rotation performed by a node on the Vega network."}},"type":"object"},"v2EthereumKeyRotationsConnection":{"properties":{"edges":{"description":"Page of Ethereum key rotations data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2EthereumKeyRotationEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of Ethereum key rotations data and corresponding page information","type":"object"},"v2GetActiveNetworkHistoryPeerAddressesResponse":{"properties":{"ipAddresses":{"description":"List of IP addresses for the active peers.","items":{"type":"string"},"type":"array"}},"title":"Response containing the addresses of active network history peers","type":"object"},"v2GetAssetResponse":{"properties":{"asset":{"$ref":"#/components/schemas/vegaAsset","description":"Asset information that is returned."}},"title":"Response from getting an asset","type":"object"},"v2GetDepositResponse":{"properties":{"deposit":{"$ref":"#/components/schemas/vegaDeposit","description":"Deposit matching the ID from the request."}},"title":"Response that is received from getting deposit data","type":"object"},"v2GetERC20ListAssetBundleResponse":{"properties":{"assetSource":{"description":"Address of the asset on ethereum.","type":"string"},"nonce":{"description":"Nonce, which is actually the internal reference for the proposal.","type":"string"},"signatures":{"description":"Signatures bundle as hex encoded data, forward by 0x\ne.g: 0x + sig1 + sig2 + ... + sixN.","type":"string"},"vegaAssetId":{"description":"Asset ID for the underlying Vega asset.","type":"string"}},"title":"Response from listing the signature bundle to an ERC-20 token in the collateral bridge","type":"object"},"v2GetERC20SetAssetLimitsBundleResponse":{"properties":{"assetSource":{"description":"Address of the asset on ethereum.","type":"string"},"lifetimeLimit":{"description":"Lifetime limit deposit for this asset.","type":"string"},"nonce":{"description":"Nonce, which is actually the internal reference for the proposal.","type":"string"},"signatures":{"description":"Signatures bundle as hex encoded data, forward by 0x\ne.g: 0x + sig1 + sig2 + ... + sixN.","type":"string"},"threshold":{"description":"Threshold withdraw for this asset.","type":"string"},"vegaAssetId":{"description":"Asset ID for the underlying Vega asset.","type":"string"}},"title":"Response for the signature bundle to update the token limits i.e. maxLifetimeDeposit and withdrawThreshold for a given ERC20 token that is already allowlisted in the collateral bridge","type":"object"},"v2GetERC20WithdrawalApprovalResponse":{"properties":{"amount":{"description":"Amount to be withdrawn.","type":"string"},"assetSource":{"description":"Address of asset on ethereum.","type":"string"},"creation":{"description":"Creation timestamps.","format":"int64","type":"string"},"nonce":{"description":"Nonce, which is actually the internal reference for the withdrawal.","type":"string"},"signatures":{"description":"Signatures bundle as hex encoded data, forward by 0x\ne.g: 0x + sig1 + sig2 + ... + sixN.","type":"string"},"targetAddress":{"description":"Ethereum address to withdraw the funds to, 0x prefixed.","type":"string"}},"title":"Response with all information required to bundle the call to finalise the withdrawal on the erc20 bridge\nfunction withdraw_asset(address asset_source, uint256 asset_id, uint256 amount, uint256 expiry, uint256 nonce, bytes memory signatures)","type":"object"},"v2GetEpochResponse":{"properties":{"epoch":{"$ref":"#/components/schemas/vegaEpoch","description":"Data specific to a single epoch on the Vega network. This includes the epoch number,\nstart and end times, and the nodes that participated in the epoch."}},"title":"Response from getting epoch","type":"object"},"v2GetGovernanceDataResponse":{"properties":{"data":{"$ref":"#/components/schemas/vegaGovernanceData","description":"Governance data content, i.e. proposal and votes for and against."}},"title":"Response from getting governance data","type":"object"},"v2GetLastTradeResponse":{"properties":{"trade":{"$ref":"#/components/schemas/vegaTrade","description":"Information about the trade, if one is found."}},"title":"Response for the latest trade that occurred on Vega for a given market","type":"object"},"v2GetLatestMarketDataResponse":{"properties":{"marketData":{"$ref":"#/components/schemas/vegaMarketData","description":"Market data that was requested."}},"title":"Response that is received when listing the latest market data for a given market","type":"object"},"v2GetLatestMarketDepthResponse":{"properties":{"buy":{"description":"Zero or more price levels for the buy side of the market depth data.","items":{"$ref":"#/components/schemas/vegaPriceLevel"},"type":"array"},"lastTrade":{"$ref":"#/components/schemas/vegaTrade","description":"Last trade recorded on Vega at the time of retrieving the `MarketDepthResponse`."},"marketId":{"description":"Market ID of the depth levels returned.","type":"string"},"sell":{"description":"Zero or more price levels for the sell side of the market depth data.","items":{"$ref":"#/components/schemas/vegaPriceLevel"},"type":"array"},"sequenceNumber":{"description":"Sequence number incremented after each update.","format":"uint64","type":"string"}},"title":"Response that is received when latest market depth data is queried","type":"object"},"v2GetMarketDataHistoryByIDResponse":{"properties":{"marketData":{"$ref":"#/components/schemas/v2MarketDataConnection","description":"Page of market data history with the corresponding page information."}},"title":"Response that is received when querying Market Data History","type":"object"},"v2GetMarketResponse":{"properties":{"market":{"$ref":"#/components/schemas/vegaMarket","description":"Information about the market requested."}},"title":"Response from getting a market by ID","type":"object"},"v2GetMostRecentNetworkHistorySegmentResponse":{"properties":{"segment":{"$ref":"#/components/schemas/v2HistorySegment","description":"Data relating to a history segment created by a Vega data node."},"swarmKeySeed":{"description":"Key seed for the swarm section.","type":"string"}},"title":"Response from getting most recent history segment","type":"object"},"v2GetNetworkDataResponse":{"properties":{"nodeData":{"$ref":"#/components/schemas/vegaNodeData","description":"Summary of information with respect to nodes on the Vega network."}},"title":"Response from getting network data","type":"object"},"v2GetNetworkHistoryBootstrapPeersResponse":{"properties":{"bootstrapPeers":{"description":"List of peers that can be used to bootstrap a Vega data node.","items":{"type":"string"},"type":"array"}},"title":"Response containing the nodes network history bootstrap peers","type":"object"},"v2GetNetworkHistoryStatusResponse":{"properties":{"connectedPeers":{"description":"List of peers connected to the IPFS swarm.","items":{"type":"string"},"type":"array"},"ipfsAddress":{"description":"IPFS address of the data node currently connected to.","type":"string"},"swarmKey":{"description":"Swarm key used by the IPFS swarm.","type":"string"},"swarmKeySeed":{"description":"Swarm key seed used by the IPFS swarm.","type":"string"}},"title":"Response containing the status of network history","type":"object"},"v2GetNetworkLimitsResponse":{"properties":{"limits":{"$ref":"#/components/schemas/vegaNetworkLimits","description":"List of received network limits."}},"title":"Response received when querying the current network limits","type":"object"},"v2GetNetworkParameterResponse":{"properties":{"networkParameter":{"$ref":"#/components/schemas/vegaNetworkParameter","description":"Network parameter key and value."}},"title":"Response that is received when getting a network parameter","type":"object"},"v2GetNodeResponse":{"properties":{"node":{"$ref":"#/components/schemas/vegaNode","description":"Data specific to a single node on the Vega network."}},"title":"Response from getting node","type":"object"},"v2GetOracleSpecResponse":{"properties":{"oracleSpec":{"$ref":"#/components/schemas/vegaOracleSpec","description":"External data spec matching the ID."}},"title":"Response for a oracle spec","type":"object"},"v2GetOrderResponse":{"properties":{"order":{"$ref":"#/components/schemas/vegaOrder","description":"Order details, if one was found."}},"title":"Response received from the query for getting a single order","type":"object"},"v2GetPartyResponse":{"properties":{"party":{"$ref":"#/components/schemas/vegaParty","description":"Data for the party requested."}},"title":"Response from getting party by ID","type":"object"},"v2GetProtocolUpgradeStatusResponse":{"properties":{"ready":{"description":"Indicator if the upgrade is ready or not.","type":"boolean"}},"title":"Response from getting protocol upgrade status","type":"object"},"v2GetRiskFactorsResponse":{"properties":{"riskFactor":{"$ref":"#/components/schemas/vegaRiskFactor","description":"Risk factor emitted by the risk model for a given market."}},"title":"Response that is received from getting a risk factor","type":"object"},"v2GetStakeResponse":{"properties":{"currentStakeAvailable":{"description":"Current stake available information.","type":"string"},"stakeLinkings":{"$ref":"#/components/schemas/v2StakesConnection","description":"Paged list of stake data with corresponding page information."}},"title":"Response that is received from requesting stake information","type":"object"},"v2GetVegaTimeResponse":{"properties":{"timestamp":{"description":"Timestamp representation of current VegaTime as represented in\nNanoseconds since the epoch, for example `1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`.","format":"int64","type":"string"}},"title":"Response for the current consensus coordinated time on the Vega network, referred to as \"VegaTime\"","type":"object"},"v2GetWithdrawalResponse":{"properties":{"withdrawal":{"$ref":"#/components/schemas/vegaWithdrawal","description":"Withdrawal matching the ID from the request."}},"title":"Response for a withdrawal request","type":"object"},"v2GovernanceDataConnection":{"properties":{"edges":{"description":"Page of governance data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2GovernanceDataEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of governance data and corresponding page information","type":"object"},"v2GovernanceDataEdge":{"description":"Governance data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaGovernanceData","description":"Governance data content, i.e. proposal and votes for and against."}},"type":"object"},"v2HistorySegment":{"properties":{"chainId":{"description":"Chain ID of the history segment.","type":"string"},"databaseVersion":{"description":"Database schema version of the history segment.","format":"int64","type":"string"},"fromHeight":{"description":"Starting height of the history segment.","format":"int64","type":"string"},"historySegmentId":{"description":"History segment ID.","type":"string"},"previousHistorySegmentId":{"description":"Previous history segment ID.","type":"string"},"toHeight":{"description":"Ending height of the history segment.","format":"int64","type":"string"}},"title":"Describes a network history segment","type":"object"},"v2InfoResponse":{"properties":{"commitHash":{"description":"Commit hash from which the data node was built.","type":"string"},"version":{"description":"Semver formatted version of the data node.","type":"string"}},"title":"Response that is received from the node information query","type":"object"},"v2IntervalToCandleId":{"properties":{"candleId":{"description":"Unique id of the candle.","type":"string"},"interval":{"description":"Interval for the candle.","type":"string"}},"title":"Maps an interval for a given market to its corresponding candle ID","type":"object"},"v2KeyRotationConnection":{"properties":{"edges":{"description":"Page of key rotation data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2KeyRotationEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of key rotations data and corresponding page information","type":"object"},"v2KeyRotationEdge":{"description":"Key rotation data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v1KeyRotation","description":"Data relating to a key rotation that was performed by a node on the Vega network."}},"type":"object"},"v2LedgerEntryFilter":{"description":"Ledger entry filter sets filters on returned set of ledger entries.","properties":{"closeOnAccountFilters":{"description":"Determines whether an entry must have accounts matching both the account_from_filter\nand the account_to_filter. If set to 'true', entries must have matches in both filters.\nIf set to `false`, entries matching only the account_from_filter or the account_to_filter will also be included.","type":"boolean"},"fromAccountFilter":{"$ref":"#/components/schemas/v2AccountFilter","description":"Used to set values for filtering sender accounts."},"toAccountFilter":{"$ref":"#/components/schemas/v2AccountFilter","description":"Used to set values for filtering receiver accounts."},"transferTypes":{"description":"List of transfer types that is used for filtering sender and receiver accounts.","items":{"$ref":"#/components/schemas/vegaTransferType"},"type":"array"}},"type":"object"},"v2LiquidationEstimate":{"description":"Liquidation estimate for both worst and best case possible.","properties":{"bestCase":{"$ref":"#/components/schemas/v2LiquidationPrice","description":"Liquidation price estimate assuming no slippage."},"worstCase":{"$ref":"#/components/schemas/v2LiquidationPrice","description":"Liquidation price estimate assuming slippage cap is applied."}},"type":"object"},"v2LiquidationPrice":{"description":"Liquidation price estimate for either only the current open volume and position given some or all buy orders get filled, or position given some or all sell orders get filled.","properties":{"includingBuyOrders":{"description":"Liquidation price assuming buy orders start getting filled.","type":"string"},"includingSellOrders":{"description":"Liquidation price assuming sell orders start getting filled.","type":"string"},"openVolumeOnly":{"description":"Liquidation price for current open volume ignoring any active orders.","type":"string"}},"type":"object"},"v2LiquidityProvisionsConnection":{"properties":{"edges":{"description":"Page of liquidity provisions data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2LiquidityProvisionsEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of liquidity provisions data and corresponding page information","type":"object"},"v2LiquidityProvisionsEdge":{"description":"Liquidity provision data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaLiquidityProvision","description":"Data corresponding to a liquidity provider's commitment."}},"type":"object"},"v2ListAccountsResponse":{"properties":{"accounts":{"$ref":"#/components/schemas/v2AccountsConnection","description":"Page of accounts data and corresponding page information."}},"title":"Response that is received from listing accounts query","type":"object"},"v2ListAllNetworkHistorySegmentsResponse":{"properties":{"segments":{"description":"Page of history segments data and corresponding page information.","items":{"$ref":"#/components/schemas/v2HistorySegment"},"type":"array"}},"title":"Response with a list of all the nodes history segments","type":"object"},"v2ListAllPositionsResponse":{"properties":{"positions":{"$ref":"#/components/schemas/v2PositionConnection","description":"Page of positions data and corresponding page information."}},"title":"Response to query for listing of positions, given the filter is supplied","type":"object"},"v2ListAssetsResponse":{"properties":{"assets":{"$ref":"#/components/schemas/v2AssetsConnection","description":"Page of assets data and corresponding page information."}},"title":"Response from listing assets","type":"object"},"v2ListBalanceChangesResponse":{"properties":{"balances":{"$ref":"#/components/schemas/v2AggregatedBalanceConnection","description":"Page of aggregated balances data and corresponding page information."}},"title":"Response that is received when querying balances changes","type":"object"},"v2ListCandleDataResponse":{"properties":{"candles":{"$ref":"#/components/schemas/v2CandleDataConnection","description":"Page of candle data and corresponding page information."}},"title":"Response for list of candles for a market at an interval","type":"object"},"v2ListCandleIntervalsResponse":{"properties":{"intervalToCandleId":{"description":"List of the mappings.","items":{"$ref":"#/components/schemas/v2IntervalToCandleId"},"type":"array"}},"title":"List of mapped pairs `interval` -> `candle ID` for a given market","type":"object"},"v2ListCheckpointsResponse":{"properties":{"checkpoints":{"$ref":"#/components/schemas/v2CheckpointsConnection","description":"Page of checkpoints data and corresponding page information."}},"title":"Response message containing all checkpoints requested","type":"object"},"v2ListCoreSnapshotsResponse":{"description":"Response from a ListCoreSnapshots RPC call; a paginated list of the core snapshots.","properties":{"coreSnapshots":{"$ref":"#/components/schemas/v2CoreSnapshotConnection","description":"Page of core snapshot data and corresponding page information."}},"type":"object"},"v2ListDelegationsResponse":{"properties":{"delegations":{"$ref":"#/components/schemas/v2DelegationsConnection","description":"Page of delegations data and corresponding page information."}},"title":"Response from listing delegations","type":"object"},"v2ListDepositsResponse":{"properties":{"deposits":{"$ref":"#/components/schemas/v2DepositsConnection","description":"Page of deposits data and corresponding page information."}},"title":"Response from listing deposits","type":"object"},"v2ListERC20MultiSigSignerAddedBundlesResponse":{"properties":{"bundles":{"$ref":"#/components/schemas/v2ERC20MultiSigSignerAddedConnection","description":"Page of bundles for that validator - it may have been added multiple times if removed in between - and corresponding page information."}},"title":"Response from adding a signature bundle to the signer list of a multisig contract for a particular validator","type":"object"},"v2ListERC20MultiSigSignerRemovedBundlesResponse":{"properties":{"bundles":{"$ref":"#/components/schemas/v2ERC20MultiSigSignerRemovedConnection","description":"Page of signer bundle data items for that validator and corresponding page information."}},"title":"Response when removing a signature bundle from the signer list of the multisig contract for a particular validator","type":"object"},"v2ListEntitiesResponse":{"properties":{"accounts":{"items":{"$ref":"#/components/schemas/vegaAccount"},"type":"array"},"assets":{"items":{"$ref":"#/components/schemas/vegaAsset"},"type":"array"},"balanceChanges":{"items":{"$ref":"#/components/schemas/v2AccountBalance"},"type":"array"},"delegations":{"items":{"$ref":"#/components/schemas/vegaDelegation"},"type":"array"},"deposits":{"items":{"$ref":"#/components/schemas/vegaDeposit"},"type":"array"},"erc20MultiSigSignerAddedBundles":{"items":{"$ref":"#/components/schemas/v2ERC20MultiSigSignerAddedBundle"},"type":"array"},"erc20MultiSigSignerRemovedBundles":{"items":{"$ref":"#/components/schemas/v2ERC20MultiSigSignerRemovedBundle"},"type":"array"},"ethereumKeyRotations":{"items":{"$ref":"#/components/schemas/v1EthereumKeyRotation"},"type":"array"},"keyRotations":{"items":{"$ref":"#/components/schemas/v1KeyRotation"},"type":"array"},"ledgerEntries":{"items":{"$ref":"#/components/schemas/vegaLedgerEntry"},"type":"array"},"liquidityProvisions":{"items":{"$ref":"#/components/schemas/vegaLiquidityProvision"},"type":"array"},"marginLevels":{"items":{"$ref":"#/components/schemas/vegaMarginLevels"},"type":"array"},"markets":{"items":{"$ref":"#/components/schemas/vegaMarket"},"type":"array"},"networkParameters":{"items":{"$ref":"#/components/schemas/vegaNetworkParameter"},"type":"array"},"nodeSignatures":{"items":{"$ref":"#/components/schemas/v1NodeSignature"},"type":"array"},"nodes":{"items":{"$ref":"#/components/schemas/v2NodeBasic"},"type":"array"},"oracleData":{"items":{"$ref":"#/components/schemas/vegaOracleData"},"type":"array"},"oracleSpecs":{"items":{"$ref":"#/components/schemas/vegaOracleSpec"},"type":"array"},"orders":{"items":{"$ref":"#/components/schemas/vegaOrder"},"type":"array"},"parties":{"items":{"$ref":"#/components/schemas/vegaParty"},"type":"array"},"positions":{"items":{"$ref":"#/components/schemas/vegaPosition"},"type":"array"},"proposals":{"items":{"$ref":"#/components/schemas/vegaProposal"},"type":"array"},"protocolUpgradeProposals":{"items":{"$ref":"#/components/schemas/v1ProtocolUpgradeEvent"},"type":"array"},"rewards":{"items":{"$ref":"#/components/schemas/vegaReward"},"type":"array"},"trades":{"items":{"$ref":"#/components/schemas/vegaTrade"},"type":"array"},"transfers":{"items":{"$ref":"#/components/schemas/vegaeventsv1Transfer"},"type":"array"},"votes":{"items":{"$ref":"#/components/schemas/vegaVote"},"type":"array"},"withdrawals":{"items":{"$ref":"#/components/schemas/vegaWithdrawal"},"type":"array"}},"title":"Response from listing entities that were created for a given transaction hash","type":"object"},"v2ListEpochRewardSummariesResponse":{"properties":{"summaries":{"$ref":"#/components/schemas/v2EpochRewardSummaryConnection","description":"Page of rewards details for a single party and corresponding page information."}},"title":"Return message with reward details in for a single party","type":"object"},"v2ListEthereumKeyRotationsResponse":{"properties":{"keyRotations":{"$ref":"#/components/schemas/v2EthereumKeyRotationsConnection","description":"Page of Ethereum key rotations data and corresponding page information."}},"title":"Response message containing Ethereum key rotations","type":"object"},"v2ListGovernanceDataRequestType":{"default":"TYPE_UNSPECIFIED","description":"- TYPE_ALL: List all proposals\n - TYPE_NEW_MARKET: List new market proposals\n - TYPE_UPDATE_MARKET: List update market proposals\n - TYPE_NETWORK_PARAMETERS: List change Vega network parameter proposals\n - TYPE_NEW_ASSET: New asset proposals\n - TYPE_NEW_FREE_FORM: Proposals for creating a new free form proposal\n - TYPE_UPDATE_ASSET: Update asset proposals","enum":["TYPE_UNSPECIFIED","TYPE_ALL","TYPE_NEW_MARKET","TYPE_UPDATE_MARKET","TYPE_NETWORK_PARAMETERS","TYPE_NEW_ASSET","TYPE_NEW_FREE_FORM","TYPE_UPDATE_ASSET"],"title":"Filter for the types of governance proposals to view","type":"string"},"v2ListGovernanceDataResponse":{"properties":{"connection":{"$ref":"#/components/schemas/v2GovernanceDataConnection","description":"Page of governance data and corresponding page information."}},"title":"Response from listing governance data","type":"object"},"v2ListKeyRotationsResponse":{"properties":{"rotations":{"$ref":"#/components/schemas/v2KeyRotationConnection","description":"Page of key rotations data and corresponding page information."}},"title":"Response message containing Vega key rotations","type":"object"},"v2ListLatestMarketDataResponse":{"properties":{"marketsData":{"items":{"$ref":"#/components/schemas/vegaMarketData"},"type":"array"}},"title":"Response that is received when listing the latest market data for every market","type":"object"},"v2ListLedgerEntriesResponse":{"properties":{"ledgerEntries":{"$ref":"#/components/schemas/v2AggregatedLedgerEntriesConnection","description":"Page of aggregated ledger entries data and corresponding page information."}},"title":"Response that is received when listing ledger entries","type":"object"},"v2ListLiquidityProvisionsResponse":{"properties":{"liquidityProvisions":{"$ref":"#/components/schemas/v2LiquidityProvisionsConnection","description":"Page of liquidity provisions data and corresponding page information."}},"title":"Response from listing liquidity provisions","type":"object"},"v2ListMarginLevelsResponse":{"properties":{"marginLevels":{"$ref":"#/components/schemas/v2MarginConnection","description":"Page of margin levels data and corresponding page information."}},"title":"Response from listing margin levels","type":"object"},"v2ListMarketsResponse":{"properties":{"markets":{"$ref":"#/components/schemas/v2MarketConnection","description":"Page of markets and corresponding page information."}},"title":"Response from listing markets","type":"object"},"v2ListNetworkParametersResponse":{"properties":{"networkParameters":{"$ref":"#/components/schemas/v2NetworkParameterConnection","description":"Page of network parameters and corresponding page information."}},"title":"Response containing all of the Vega network parameters","type":"object"},"v2ListNodeSignaturesResponse":{"properties":{"signatures":{"$ref":"#/components/schemas/v2NodeSignaturesConnection","description":"Page of nodes signatures and corresponding page information."}},"title":"Response to specify the ID of the resource to retrieve aggregated signatures for","type":"object"},"v2ListNodesResponse":{"properties":{"nodes":{"$ref":"#/components/schemas/v2NodesConnection","description":"Page of node data and corresponding page information."}},"title":"Response from listing nodes","type":"object"},"v2ListOracleDataResponse":{"properties":{"oracleData":{"$ref":"#/components/schemas/v2OracleDataConnection","description":"Page of seen oracle data and corresponding page information."}},"title":"Response to get all seen oracle data","type":"object"},"v2ListOracleSpecsResponse":{"properties":{"oracleSpecs":{"$ref":"#/components/schemas/v2OracleSpecsConnection","description":"Page of active oracle specs and corresponding page information."}},"title":"Response to get all active oracle specs","type":"object"},"v2ListOrderVersionsResponse":{"properties":{"orders":{"$ref":"#/components/schemas/v2OrderConnection","description":"Page of order versions and corresponding page information."}},"title":"Response that is received when listing possible order versions","type":"object"},"v2ListOrdersResponse":{"properties":{"orders":{"$ref":"#/components/schemas/v2OrderConnection","description":"Page of orders data and corresponding page information."}},"title":"Response that is received from the query to list orders","type":"object"},"v2ListPartiesResponse":{"properties":{"parties":{"$ref":"#/components/schemas/v2PartyConnection","description":"Page of parties data and corresponding page information."}},"title":"Response from listing parties","type":"object"},"v2ListPositionsResponse":{"properties":{"positions":{"$ref":"#/components/schemas/v2PositionConnection","description":"Page of positions data and corresponding page information."}},"title":"Response for a list of positions for a party","type":"object"},"v2ListProtocolUpgradeProposalsResponse":{"properties":{"protocolUpgradeProposals":{"$ref":"#/components/schemas/v2ProtocolUpgradeProposalConnection","description":"Page of protocol upgrade proposals and corresponding page information."}},"title":"Response type from a ListProtocolUpgradeProposals RPC call; a paginated list of protocol upgrade proposals","type":"object"},"v2ListRewardSummariesResponse":{"properties":{"summaries":{"description":"Page of rewards details data and corresponding page information.","items":{"$ref":"#/components/schemas/vegaRewardSummary"},"type":"array"}},"title":"Response from listing reward details in for a single party","type":"object"},"v2ListRewardsResponse":{"properties":{"rewards":{"$ref":"#/components/schemas/v2RewardsConnection","description":"Page of rewards data and corresponding page information."}},"title":"Response for listing reward details for a single party","type":"object"},"v2ListTradesResponse":{"properties":{"trades":{"$ref":"#/components/schemas/v2TradeConnection","description":"Page of trades data and corresponding page information."}},"title":"Response from listing trades","type":"object"},"v2ListTransfersResponse":{"properties":{"transfers":{"$ref":"#/components/schemas/v2TransferConnection","description":"Page of transfers data and corresponding page information."}},"title":"Response that is received when listing  transfers","type":"object"},"v2ListVotesResponse":{"properties":{"votes":{"$ref":"#/components/schemas/v2VoteConnection","description":"Page of votes data received and corresponding page information."}},"title":"Response that is received when listing Votes","type":"object"},"v2ListWithdrawalsResponse":{"properties":{"withdrawals":{"$ref":"#/components/schemas/v2WithdrawalsConnection","description":"Page of withdrawals data and corresponding page information."}},"title":"Response from listing withdrawals data","type":"object"},"v2MarginConnection":{"description":"Page of margins data and corresponding page information.","properties":{"edges":{"description":"Page of margins data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2MarginEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2MarginEdge":{"description":"Margin data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaMarginLevels","description":"Margin levels data that satisfy a list margin levels request."}},"type":"object"},"v2MarginEstimate":{"description":"Margin level estimate for both worst and best case possible.","properties":{"bestCase":{"$ref":"#/components/schemas/vegaMarginLevels","description":"Margin level estimate assuming no slippage."},"worstCase":{"$ref":"#/components/schemas/vegaMarginLevels","description":"Margin level estimate assuming slippage cap is applied."}},"type":"object"},"v2MarketConnection":{"description":"Page of markets and corresponding page information.","properties":{"edges":{"description":"Page of markets and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2MarketEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2MarketDataConnection":{"properties":{"edges":{"description":"Page of market data items and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2MarketDataEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of market data items and corresponding page information","type":"object"},"v2MarketDataEdge":{"description":"Market data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaMarketData","description":"Data generated by a market when open."}},"type":"object"},"v2MarketEdge":{"description":"Market information with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaMarket","description":"Information about the market."}},"type":"object"},"v2NetworkParameterConnection":{"properties":{"edges":{"description":"Page of network parameters data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2NetworkParameterEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of network parameters and corresponding page information","type":"object"},"v2NetworkParameterEdge":{"description":"Network parameter with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaNetworkParameter","description":"Name and associated value of a network parameter."}},"type":"object"},"v2NodeBasic":{"description":"Represents a basic node without any epoch specific details like delegations, staking, rewards etc.","properties":{"avatarUrl":{"description":"Avatar URL.","type":"string"},"ethereumAddress":{"description":"Ethereum public key of the node.","type":"string"},"id":{"description":"Unique ID identifying the node.","type":"string"},"infoUrl":{"description":"URL that provides more information about the node.","type":"string"},"location":{"description":"Country code for the location of the node.","type":"string"},"name":{"description":"Node name.","type":"string"},"pubKey":{"description":"Node operator's public key.","type":"string"},"status":{"$ref":"#/components/schemas/vegaNodeStatus","description":"Node status."},"tmPubKey":{"description":"Tendermint public key of the node.","type":"string"}},"type":"object"},"v2NodeEdge":{"description":"Node data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaNode","description":"Data specific to a single node on the Vega network."}},"type":"object"},"v2NodeSignatureEdge":{"description":"Nodes signature edge with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v1NodeSignature","description":"Node signature data."}},"type":"object"},"v2NodeSignaturesConnection":{"description":"Page of node signatures and corresponding page information.","properties":{"edges":{"description":"Page of node signatures and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2NodeSignatureEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2NodesConnection":{"properties":{"edges":{"description":"Page of node data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2NodeEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of node data and corresponding page information","type":"object"},"v2ObserveAccountsResponse":{"properties":{"snapshot":{"$ref":"#/components/schemas/v2AccountSnapshotPage","description":"'Initial image' snapshot containing current account balances."},"updates":{"$ref":"#/components/schemas/v2AccountUpdates","description":"List of account updates in the last block."}},"title":"Response that is received when subscribing to a stream of accounts","type":"object"},"v2ObserveCandleDataResponse":{"properties":{"candle":{"$ref":"#/components/schemas/apiv2Candle","description":"Candle data."}},"title":"Response that is received when subscribing to a stream of candles","type":"object"},"v2ObserveEventBusResponse":{"properties":{"events":{"description":"List of events that occurred on the Vega event bus.","items":{"$ref":"#/components/schemas/v1BusEvent"},"type":"array"}},"title":"Response to a subscribed stream of events from the Vega event bus","type":"object"},"v2ObserveGovernanceResponse":{"properties":{"data":{"$ref":"#/components/schemas/vegaGovernanceData","description":"Governance data, i.e. proposal and votes for and against."}},"title":"Response from governance subscription","type":"object"},"v2ObserveLedgerMovementsResponse":{"properties":{"ledgerMovement":{"$ref":"#/components/schemas/vegaLedgerMovement","description":"Ledger movements data with list of ledger entries and and post-transfer balances."}},"title":"Response from ledger movements subscription","type":"object"},"v2ObserveLiquidityProvisionsResponse":{"properties":{"liquidityProvisions":{"items":{"$ref":"#/components/schemas/vegaLiquidityProvision"},"type":"array"}},"title":"Response from liquidity provisions subscription","type":"object"},"v2ObserveMarginLevelsResponse":{"properties":{"marginLevels":{"$ref":"#/components/schemas/vegaMarginLevels","description":"Margin levels data that match the subscription request filters."}},"title":"Response from subscribing to margin levels data","type":"object"},"v2ObserveMarketsDataResponse":{"properties":{"marketData":{"description":"List of market data.","items":{"$ref":"#/components/schemas/vegaMarketData"},"type":"array"}},"title":"Response that is received for market data subscription","type":"object"},"v2ObserveMarketsDepthResponse":{"description":"Response that is received for MarketDepth subscription.","properties":{"marketDepth":{"description":"List of market depth data.","items":{"$ref":"#/components/schemas/vegaMarketDepth"},"type":"array"}},"type":"object"},"v2ObserveMarketsDepthUpdatesResponse":{"properties":{"update":{"description":"List of market depth update data.","items":{"$ref":"#/components/schemas/vegaMarketDepthUpdate"},"type":"array"}},"title":"Response that is received for market depth update subscription","type":"object"},"v2ObserveOrdersResponse":{"properties":{"snapshot":{"$ref":"#/components/schemas/v2OrderSnapshotPage","description":"An 'initial image' snapshot containing current live orders."},"updates":{"$ref":"#/components/schemas/v2OrderUpdates","description":"List of order updates in the last block."}},"title":"Response that is received from an orders subscription","type":"object"},"v2ObservePositionsResponse":{"properties":{"snapshot":{"$ref":"#/components/schemas/v2PositionSnapshotPage","description":"An 'initial image' snapshot containing current positions."},"updates":{"$ref":"#/components/schemas/v2PositionUpdates","description":"List of position updates in the last block."}},"title":"Response received from a positions subscription request","type":"object"},"v2ObserveTradesResponse":{"properties":{"trades":{"description":"List of 0 or more trades.","items":{"$ref":"#/components/schemas/vegaTrade"},"type":"array"}},"title":"Stream of trades","type":"object"},"v2ObserveVotesResponse":{"properties":{"vote":{"$ref":"#/components/schemas/vegaVote","description":"Data associated with governance votes that are published to the stream."}},"title":"Response that is received from votes subscription","type":"object"},"v2OracleDataConnection":{"description":"Page of oracle data and corresponding page information.","properties":{"edges":{"description":"Page of oracle data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2OracleDataEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2OracleDataEdge":{"description":"Oracle data item with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaOracleData","description":"Data that was received from an external oracle."}},"type":"object"},"v2OracleSpecEdge":{"description":"Oracle specs data item with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaOracleSpec","description":"External spec data that satisfies the list request."}},"type":"object"},"v2OracleSpecsConnection":{"properties":{"edges":{"description":"Page of oracle specs data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2OracleSpecEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of oracle specs and corresponding page information","type":"object"},"v2OrderConnection":{"description":"Page of orders data and corresponding page information.","properties":{"edges":{"description":"Page of orders and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2OrderEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2OrderEdge":{"description":"Order data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaOrder","description":"Data associated with an order submitted to a Vega node."}},"type":"object"},"v2OrderFilter":{"properties":{"dateRange":{"$ref":"#/components/schemas/v2DateRange","description":"Date range of the orders being listed."},"excludeLiquidity":{"description":"Indicator if liquidity provision orders should be included or not in the list.","type":"boolean"},"liveOnly":{"description":"Indicator for listing only live orders, if set to true.","type":"boolean"},"marketIds":{"description":"List of market IDs to filter on.","items":{"type":"string"},"type":"array"},"partyIds":{"description":"List of party IDs to filter on.","items":{"type":"string"},"type":"array"},"reference":{"description":"Reference.","type":"string"},"statuses":{"description":"List of order statuses the orders can be filtered by.","items":{"$ref":"#/components/schemas/vegaOrderStatus"},"type":"array"},"timeInForces":{"description":"List of timings the orders can be filtered by.","items":{"$ref":"#/components/schemas/OrderTimeInForce"},"type":"array"},"types":{"description":"List of order types the orders can be filtered by.","items":{"$ref":"#/components/schemas/vegaOrderType"},"type":"array"}},"title":"Order filter that contains all filtering conditions and values that are applied to the orders listing","type":"object"},"v2OrderInfo":{"description":"Basic description of an order.","properties":{"isMarketOrder":{"description":"Boolean that indicates if it is a market order.","type":"boolean"},"price":{"description":"Price for the order. The price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.\nThis field is an unsigned integer passed as a string and needs to be scaled using the market's decimal places.","type":"string"},"remaining":{"description":"Size remaining.\nThis field is an unsigned integer passed as a string and needs to be scaled using the market's position decimal places.","format":"uint64","type":"string"},"side":{"$ref":"#/components/schemas/vegaSide","description":"Side for the order, e.g. buy or sell."}},"type":"object"},"v2OrderSnapshotPage":{"properties":{"lastPage":{"description":"Indicator if the last page is reached or not.","type":"boolean"},"orders":{"description":"List of order data parts.","items":{"$ref":"#/components/schemas/vegaOrder"},"type":"array"}},"title":"'Initial image' of live orders, may be sent over multiple response messages","type":"object"},"v2OrderUpdates":{"properties":{"orders":{"description":"List of orders data.","items":{"$ref":"#/components/schemas/vegaOrder"},"type":"array"}},"title":"List of order updates in the last block","type":"object"},"v2PageInfo":{"properties":{"endCursor":{"description":"End cursor.","type":"string"},"hasNextPage":{"description":"Indicator if there is a next page.","type":"boolean"},"hasPreviousPage":{"description":"Indicator if there is a previous page.","type":"boolean"},"startCursor":{"description":"Start cursor.","type":"string"}},"title":"Page information for cursor based pagination","type":"object"},"v2Pagination":{"description":"All data returned from the API is ordered in a well-defined manner.\nThe specific columns and the order in which the sorting is performed\ndepend on the API endpoint being called. However, the primary sorting\ncolumn is usually the timestamp of the block in which the data was last updated.\n\nTo prevent excessively large response messages and to avoid overloading\ndatabase resources, the API employs a cursor-based pagination mechanism.\n\nThis Pagination message can be optionally provided as part of the request to specify:\n- The starting point within the total result set for beginning the page\n- The size of the returned page\n- The ordering of the data within that page\n\nIf no Pagination message is provided, the API will return the first page of\ndata using the default page size. The default page size is 1000.\n\nTo retrieve subsequent pages, the caller must examine the PageInfo structure\nreturned in the response to find a cursor string that uniquely identifies the\nlast row of that page. This cursor should then be passed in the 'after' field\nof the Pagination message in a subsequent request.\n\nFor paging backward, take the cursor for the first row of the page from PageInfo\nand pass it in the 'before' field of the Pagination message.\n\nPagination message that uses both first/after and last/before is considered invalid.","properties":{"after":{"description":"If paging forwards, the cursor string for the last row of the previous page.","type":"string"},"before":{"description":"If paging forwards, the cursor string for the first row of the previous page.","type":"string"},"first":{"description":"Number of records to be returned that sort greater than row identified by cursor supplied in 'after'.","format":"int32","type":"integer"},"last":{"description":"Number of records to be returned that sort less than row identified by cursor supplied in 'before'.","format":"int32","type":"integer"},"newestFirst":{"description":"Newest records first, older records last, default is true.","type":"boolean"}},"type":"object"},"v2PartyConnection":{"description":"Page of parties data and corresponding page information.","properties":{"edges":{"description":"Page of parties and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2PartyEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2PartyEdge":{"description":"Party data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaParty","description":"Data associated with a party."}},"type":"object"},"v2PingResponse":{"title":"Ping response from the data node","type":"object"},"v2PositionConnection":{"properties":{"edges":{"description":"Page of positions data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2PositionEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of positions and corresponding page information","type":"object"},"v2PositionEdge":{"description":"Position data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaPosition","description":"Represents position data for a party on the specified market on Vega."}},"type":"object"},"v2PositionSnapshotPage":{"properties":{"lastPage":{"description":"Indicator if last page is reached or not.","type":"boolean"},"positions":{"description":"List of positions data.","items":{"$ref":"#/components/schemas/vegaPosition"},"type":"array"}},"title":"'Initial image' of current positions, may be sent over multiple response messages","type":"object"},"v2PositionUpdates":{"properties":{"positions":{"description":"List of positions data.","items":{"$ref":"#/components/schemas/vegaPosition"},"type":"array"}},"title":"List of position updates in the last block","type":"object"},"v2PositionsFilter":{"properties":{"marketIds":{"description":"List of market IDs to filter on.","items":{"type":"string"},"type":"array"},"partyIds":{"description":"List of party IDs to filter on.","items":{"type":"string"},"type":"array"}},"title":"Filter to apply to the ListAllPositionsRequest","type":"object"},"v2ProtocolUpgradeProposalConnection":{"properties":{"edges":{"description":"Page of protocol upgrade proposals data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2ProtocolUpgradeProposalEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of protocol upgrade proposals and corresponding page information","type":"object"},"v2ProtocolUpgradeProposalEdge":{"description":"Protocol upgrade proposal data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v1ProtocolUpgradeEvent","description":"Protocol upgrade proposal data."}},"type":"object"},"v2RewardEdge":{"description":"Rewards data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaReward","description":"Details for a single reward payment."}},"type":"object"},"v2RewardSummaryFilter":{"properties":{"assetIds":{"description":"Restrict the results to those connected to the assets in this list. Pass an empty list for no filter.","items":{"type":"string"},"type":"array"},"fromEpoch":{"description":"Optional range of epochs to filter on.","format":"uint64","type":"string"},"marketIds":{"description":"Restrict the results to those connected to the markets in this list. Pass an empty list for no filter.","items":{"type":"string"},"type":"array"},"toEpoch":{"description":"Epoch to which to filter rewards summaries.","format":"uint64","type":"string"}},"title":"Filter to restrict the results returned by the ListEpochRewardSummaries","type":"object"},"v2RewardsConnection":{"description":"Page of rewards data and corresponding page information.","properties":{"edges":{"description":"Page of rewards data items and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2RewardEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2StakeLinkingEdge":{"description":"Stake linking data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/v1StakeLinking","description":"Stake linking represent the intent from a party to deposit."}},"type":"object"},"v2StakesConnection":{"description":"Page of stake data and corresponding page information.","properties":{"edges":{"description":"Page of stake data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2StakeLinkingEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"type":"object"},"v2Table":{"default":"TABLE_UNSPECIFIED","enum":["TABLE_UNSPECIFIED","TABLE_BALANCES","TABLE_CHECKPOINTS","TABLE_DELEGATIONS","TABLE_LEDGER","TABLE_ORDERS","TABLE_TRADES","TABLE_MARKET_DATA","TABLE_MARGIN_LEVELS","TABLE_POSITIONS","TABLE_LIQUIDITY_PROVISIONS","TABLE_MARKETS","TABLE_DEPOSITS","TABLE_WITHDRAWALS","TABLE_BLOCKS","TABLE_REWARDS"],"type":"string"},"v2TradeConnection":{"properties":{"edges":{"description":"Page of trades and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2TradeEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of trades and corresponding page information","type":"object"},"v2TradeEdge":{"description":"Trade data item with the corresponding cursor..","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaTrade","description":"Data associated with a trade that has been executed."}},"type":"object"},"v2TransferConnection":{"properties":{"edges":{"description":"Page of transfers data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2TransferEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of transfers data items and corresponding page information","type":"object"},"v2TransferDirection":{"default":"TRANSFER_DIRECTION_UNSPECIFIED","enum":["TRANSFER_DIRECTION_UNSPECIFIED","TRANSFER_DIRECTION_TRANSFER_FROM","TRANSFER_DIRECTION_TRANSFER_TO","TRANSFER_DIRECTION_TRANSFER_TO_OR_FROM"],"title":"Direction of a transfer","type":"string"},"v2TransferEdge":{"description":"Transfers data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaeventsv1Transfer","description":"Data relating to a transfer that has been made."}},"type":"object"},"v2VoteConnection":{"properties":{"edges":{"description":"Page of vote data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2VoteEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of vote data items and corresponding page information","type":"object"},"v2VoteEdge":{"description":"Votes data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaVote","description":"Data associated with a governance vote."}},"type":"object"},"v2WithdrawalEdge":{"description":"Withdrawals data with the corresponding cursor.","properties":{"cursor":{"description":"Cursor that can be used to fetch further pages.","type":"string"},"node":{"$ref":"#/components/schemas/vegaWithdrawal","description":"Data associated with a single withdrawal made from the Vega network."}},"type":"object"},"v2WithdrawalsConnection":{"properties":{"edges":{"description":"Page of withdrawals data and their corresponding cursors.","items":{"$ref":"#/components/schemas/v2WithdrawalEdge"},"type":"array"},"pageInfo":{"$ref":"#/components/schemas/v2PageInfo","description":"Page information that is used for fetching further pages."}},"title":"Page of withdrawals data and corresponding page information","type":"object"},"vegaAccount":{"properties":{"asset":{"description":"Asset ID for the account.","type":"string"},"balance":{"description":"Balance of the asset, the balance is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places\nand importantly balances cannot be negative.","type":"string"},"id":{"description":"Unique account ID, used internally by Vega.","type":"string"},"marketId":{"description":"Market ID for the account, if `AccountType.ACCOUNT_TYPE_GENERAL` this will be empty.","type":"string"},"owner":{"description":"Party that the account belongs to, special values include `network`, which represents the Vega network and is\nmost commonly seen during liquidation of distressed trading positions.","type":"string"},"type":{"$ref":"#/components/schemas/vegaAccountType","description":"Account type related to this account."}},"title":"Represents an account for an asset on Vega for a particular owner or party","type":"object"},"vegaAccountDetails":{"properties":{"assetId":{"description":"Asset ID of the asset for this account.","type":"string"},"marketId":{"description":"Not specified if account is not related to a market.","type":"string"},"owner":{"description":"Not specified if network account.","type":"string"},"type":{"$ref":"#/components/schemas/vegaAccountType","description":"Type of the account."}},"type":"object"},"vegaAccountType":{"default":"ACCOUNT_TYPE_UNSPECIFIED","description":"- ACCOUNT_TYPE_UNSPECIFIED: Default value\n - ACCOUNT_TYPE_INSURANCE: Insurance pool accounts contain insurance pool funds for a market\n - ACCOUNT_TYPE_SETTLEMENT: Settlement accounts exist only during settlement or mark-to-market\n - ACCOUNT_TYPE_MARGIN: Margin accounts contain funds set aside for the margin needed to support a party's open positions.\nEach party will have a margin account for each market they have traded in.\nRequired initial margin is allocated to each market from user's general account.\nCollateral in the margin account can't be withdrawn or used as margin on another market until\nit is released back to the general account.\nVega protocol uses an internal accounting system to segregate funds held as\nmargin from other funds to ensure they are never lost or 'double spent'\n\nMargin account funds will vary as margin requirements on positions change\n - ACCOUNT_TYPE_GENERAL: General accounts contain the collateral for a party that is not otherwise allocated. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements\n - ACCOUNT_TYPE_FEES_INFRASTRUCTURE: Infrastructure accounts contain fees earned by providing infrastructure on Vega\n - ACCOUNT_TYPE_FEES_LIQUIDITY: Liquidity accounts contain fees earned by providing liquidity on Vega markets\n - ACCOUNT_TYPE_FEES_MAKER: This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place\n - ACCOUNT_TYPE_BOND: This account is created to maintain liquidity providers funds commitments\n - ACCOUNT_TYPE_EXTERNAL: External account represents an external source (deposit/withdrawal)\n - ACCOUNT_TYPE_GLOBAL_INSURANCE: Global insurance account for the asset\n - ACCOUNT_TYPE_GLOBAL_REWARD: Global reward account for the asset\n - ACCOUNT_TYPE_PENDING_TRANSFERS: Per asset account used to store pending transfers (if any)\n - ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES: Per asset reward account for fees paid to makers\n - ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES: Per asset reward account for fees received by makers\n - ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES: Per asset reward account for fees received by liquidity providers\n - ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS: Per asset reward account for market proposers when the market goes above some trading threshold","enum":["ACCOUNT_TYPE_UNSPECIFIED","ACCOUNT_TYPE_INSURANCE","ACCOUNT_TYPE_SETTLEMENT","ACCOUNT_TYPE_MARGIN","ACCOUNT_TYPE_GENERAL","ACCOUNT_TYPE_FEES_INFRASTRUCTURE","ACCOUNT_TYPE_FEES_LIQUIDITY","ACCOUNT_TYPE_FEES_MAKER","ACCOUNT_TYPE_BOND","ACCOUNT_TYPE_EXTERNAL","ACCOUNT_TYPE_GLOBAL_INSURANCE","ACCOUNT_TYPE_GLOBAL_REWARD","ACCOUNT_TYPE_PENDING_TRANSFERS","ACCOUNT_TYPE_REWARD_MAKER_PAID_FEES","ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES","ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS"],"title":"Various collateral/account types as used by Vega","type":"string"},"vegaAsset":{"properties":{"details":{"$ref":"#/components/schemas/vegaAssetDetails","description":"Definition of the external source for this asset."},"id":{"description":"Internal identifier of the asset.","type":"string"},"status":{"$ref":"#/components/schemas/vegaAssetStatus","description":"Status of the asset."}},"title":"Vega representation of an external asset","type":"object"},"vegaAssetDetails":{"properties":{"builtinAsset":{"$ref":"#/components/schemas/vegaBuiltinAsset","description":"Vega built-in asset."},"decimals":{"description":"Number of decimal / precision handled by this asset.","format":"uint64","type":"string"},"erc20":{"$ref":"#/components/schemas/vegaERC20","description":"Ethereum ERC20 asset."},"name":{"description":"Name of the asset (e.g: Great British Pound).","type":"string"},"quantum":{"description":"Minimum economically meaningful amount in the asset.","type":"string"},"symbol":{"description":"Symbol of the asset (e.g: GBP).","type":"string"}},"title":"Vega representation of an external asset","type":"object"},"vegaAssetDetailsUpdate":{"description":"Changes to apply on an existing asset.","properties":{"erc20":{"$ref":"#/components/schemas/vegaERC20Update","description":"Ethereum ERC20 asset update."},"quantum":{"description":"Minimum economically meaningful amount in the asset.","type":"string"}},"type":"object"},"vegaAssetStatus":{"default":"STATUS_UNSPECIFIED","enum":["STATUS_UNSPECIFIED","STATUS_PROPOSED","STATUS_REJECTED","STATUS_PENDING_LISTING","STATUS_ENABLED"],"title":"- STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_PROPOSED: Asset is proposed and under vote\n - STATUS_REJECTED: Asset has been rejected from governance\n - STATUS_PENDING_LISTING: Asset is pending listing from the bridge\n - STATUS_ENABLED: Asset is fully usable in the network","type":"string"},"vegaAuctionDuration":{"properties":{"duration":{"description":"Duration of the auction in seconds.","format":"int64","type":"string"},"volume":{"description":"Target uncrossing trading volume.","format":"uint64","type":"string"}},"title":"Auction duration is used to configure 3 auction periods:\n1. `duration > 0`, `volume == 0`:\n  The auction will last for at least N seconds\n2. `duration == 0`, `volume > 0`:\n  The auction will end once the given volume will match at uncrossing\n3. `duration > 0`, `volume > 0`:\n  The auction will take at least N seconds, but can end sooner if the market can trade a certain volume","type":"object"},"vegaAuctionTrigger":{"default":"AUCTION_TRIGGER_UNSPECIFIED","description":"- AUCTION_TRIGGER_UNSPECIFIED: Default value for AuctionTrigger, no auction triggered\n - AUCTION_TRIGGER_BATCH: Batch auction\n - AUCTION_TRIGGER_OPENING: Opening auction\n - AUCTION_TRIGGER_PRICE: Price monitoring trigger\n - AUCTION_TRIGGER_LIQUIDITY: Deprecated\n - AUCTION_TRIGGER_LIQUIDITY_TARGET_NOT_MET: Liquidity auction due to not enough committed liquidity\n - AUCTION_TRIGGER_UNABLE_TO_DEPLOY_LP_ORDERS: Liquidity auction due to not being able to deploy LP orders because there's nothing to peg on one or both sides of the book","enum":["AUCTION_TRIGGER_UNSPECIFIED","AUCTION_TRIGGER_BATCH","AUCTION_TRIGGER_OPENING","AUCTION_TRIGGER_PRICE","AUCTION_TRIGGER_LIQUIDITY","AUCTION_TRIGGER_LIQUIDITY_TARGET_NOT_MET","AUCTION_TRIGGER_UNABLE_TO_DEPLOY_LP_ORDERS"],"title":"Auction triggers indicate what condition triggered an auction (if market is in auction mode)","type":"string"},"vegaBuiltinAsset":{"properties":{"maxFaucetAmountMint":{"description":"Maximum amount that can be requested by a party through the built-in asset faucet at a time.","type":"string"}},"title":"Vega internal asset","type":"object"},"vegaDataSourceDefinition":{"description":"DataSourceDefinition represents the top level object that deals with data sources.\nDataSourceDefinition can be external or internal, with whatever number of data sources are defined\nfor each type in the child objects below.","properties":{"external":{"$ref":"#/components/schemas/vegaDataSourceDefinitionExternal"},"internal":{"$ref":"#/components/schemas/vegaDataSourceDefinitionInternal"}},"type":"object"},"vegaDataSourceDefinitionExternal":{"description":"DataSourceDefinitionExternal is the top level object used for all external data sources.\nIt contains one of any of the defined `SourceType` variants.","properties":{"oracle":{"$ref":"#/components/schemas/vegaDataSourceSpecConfiguration"}},"type":"object"},"vegaDataSourceDefinitionInternal":{"description":"DataSourceDefinitionInternal is the top level object used for all internal data sources.\nIt contains one of any of the defined `SourceType` variants.","properties":{"time":{"$ref":"#/components/schemas/vegaDataSourceSpecConfigurationTime"}},"type":"object"},"vegaDataSourceSpec":{"description":"Data source spec describes the data source base that a product or a risk model\nwants to get from the data source engine.\nThis message contains additional information used by the API.","properties":{"createdAt":{"format":"int64","title":"Creation date and time","type":"string"},"data":{"$ref":"#/components/schemas/vegaDataSourceDefinition"},"id":{"description":"Hash generated from the DataSpec data.","type":"string"},"status":{"$ref":"#/components/schemas/vegaDataSourceSpecStatus","title":"Status describes the status of the data source spec"},"updatedAt":{"format":"int64","title":"Last Updated timestamp","type":"string"}},"type":"object"},"vegaDataSourceSpecConfiguration":{"description":"All types of external data sources use the same configuration set for meeting requirements\nin order for the data to be useful for Vega - valid signatures and matching filters.","properties":{"filters":{"description":"Filters describes which source data are considered of interest or not for\nthe product (or the risk model).","items":{"$ref":"#/components/schemas/v1Filter"},"type":"array"},"signers":{"description":"Signers is the list of authorized signatures that signed the data for this\nsource. All the signatures in the data source data should be contained in this\nexternal source. All the signatures in the data should be contained in this list.","items":{"$ref":"#/components/schemas/v1Signer"},"type":"array"}},"type":"object"},"vegaDataSourceSpecConfigurationTime":{"description":"DataSourceSpecConfigurationTime is the internal data source used for emitting timestamps.","properties":{"conditions":{"description":"Conditions that the timestamps should meet in order to be considered.","items":{"$ref":"#/components/schemas/v1Condition"},"type":"array"}},"type":"object"},"vegaDataSourceSpecStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: Default value.\n - STATUS_ACTIVE: STATUS_ACTIVE describes an active data source spec.\n - STATUS_DEACTIVATED: STATUS_DEACTIVATED describes an data source spec that is not listening to data\nanymore.","enum":["STATUS_UNSPECIFIED","STATUS_ACTIVE","STATUS_DEACTIVATED"],"title":"Status describe the status of the data source spec","type":"string"},"vegaDataSourceSpecToFutureBinding":{"properties":{"settlementDataProperty":{"description":"Name of the property in the source data that should be used as settlement data.\nIf it is set to \"prices.BTC.value\", then the Future will use the value of\nthis property as settlement data.","type":"string"},"tradingTerminationProperty":{"description":"Name of the property in the data source data that signals termination of trading.","type":"string"}},"title":"DataSourceSpecToFutureBinding describes which property of the data source data is to be\nused as settlement data and which to use as the trading terminated trigger","type":"object"},"vegaDelegation":{"properties":{"amount":{"description":"Amount delegated. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"epochSeq":{"description":"Epoch of delegation.","type":"string"},"nodeId":{"description":"Node ID to delegate to.","type":"string"},"party":{"description":"Party which is delegating.","type":"string"}},"type":"object"},"vegaDeposit":{"properties":{"amount":{"description":"Amount to be deposited. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"asset":{"description":"Vega asset targeted by this deposit.","type":"string"},"createdTimestamp":{"description":"Timestamp for when the deposit was created on the Vega network.","format":"int64","type":"string"},"creditedTimestamp":{"description":"Timestamp for when the Vega account was updated with the deposit.","format":"int64","type":"string"},"id":{"description":"Unique ID for the deposit.","type":"string"},"partyId":{"description":"Party ID of the user initiating the deposit.","type":"string"},"status":{"$ref":"#/components/schemas/vegaDepositStatus","description":"Status of the deposit."},"txHash":{"description":"Hash of the transaction from the foreign chain.","type":"string"}},"title":"Deposit on to the Vega network","type":"object"},"vegaDepositStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_OPEN: Deposit is being processed by the network\n - STATUS_CANCELLED: Deposit has been cancelled by the network\n - STATUS_FINALIZED: Deposit has been finalised and accounts have been updated","enum":["STATUS_UNSPECIFIED","STATUS_OPEN","STATUS_CANCELLED","STATUS_FINALIZED"],"title":"Status of the deposit","type":"string"},"vegaDispatchMetric":{"default":"DISPATCH_METRIC_UNSPECIFIED","enum":["DISPATCH_METRIC_UNSPECIFIED","DISPATCH_METRIC_MAKER_FEES_PAID","DISPATCH_METRIC_MAKER_FEES_RECEIVED","DISPATCH_METRIC_LP_FEES_RECEIVED","DISPATCH_METRIC_MARKET_VALUE"],"title":"- DISPATCH_METRIC_MAKER_FEES_PAID: Dispatch metric that is using the total maker fees paid in the market\n - DISPATCH_METRIC_MAKER_FEES_RECEIVED: Dispatch metric that is using the total maker fees received in the market\n - DISPATCH_METRIC_LP_FEES_RECEIVED: Dispatch metric that is using the total LP fees received in the market\n - DISPATCH_METRIC_MARKET_VALUE: Dispatch metric that is using total value of the market if above the required threshold and not paid given proposer bonus yet","type":"string"},"vegaDispatchStrategy":{"properties":{"assetForMetric":{"description":"Asset to use for metric.","type":"string"},"markets":{"description":"Optional markets in scope.","items":{"type":"string"},"type":"array"},"metric":{"$ref":"#/components/schemas/vegaDispatchMetric","description":"Metric to apply."}},"type":"object"},"vegaERC20":{"properties":{"contractAddress":{"description":"Address of the contract for the token, on the ethereum network.","type":"string"},"lifetimeLimit":{"description":"Lifetime limits deposit per address\nnote: this is a temporary measure that can be changed by governance.","type":"string"},"withdrawThreshold":{"description":"Maximum you can withdraw instantly. All withdrawals over the threshold will be delayed by the withdrawal delay.\nThere’s no limit on the size of a withdrawal\nnote: this is a temporary measure that can be changed by governance.","type":"string"}},"title":"ERC20 token based asset, living on the ethereum network","type":"object"},"vegaERC20Update":{"properties":{"lifetimeLimit":{"description":"Lifetime limits deposit per address.\nThis will be interpreted against the asset decimals.\nnote: this is a temporary measure that can be changed by governance.","type":"string"},"withdrawThreshold":{"description":"Maximum you can withdraw instantly. All withdrawals over the threshold will be delayed by the withdrawal delay.\nThere’s no limit on the size of a withdrawal\nnote: this is a temporary measure that can be changed by governance.","type":"string"}},"type":"object"},"vegaEpoch":{"properties":{"delegations":{"description":"List of all delegations in epoch.","items":{"$ref":"#/components/schemas/vegaDelegation"},"type":"array"},"seq":{"description":"Sequence is used as epoch ID.","format":"uint64","type":"string"},"timestamps":{"$ref":"#/components/schemas/vegaEpochTimestamps","description":"Timestamps for start/end etc."},"validators":{"description":"Validators that participated in this epoch.","items":{"$ref":"#/components/schemas/vegaNode"},"type":"array"}},"type":"object"},"vegaEpochAction":{"default":"EPOCH_ACTION_UNSPECIFIED","description":"- EPOCH_ACTION_START: Epoch update is for a new epoch.\n - EPOCH_ACTION_END: Epoch update is for the end of an epoch.","enum":["EPOCH_ACTION_UNSPECIFIED","EPOCH_ACTION_START","EPOCH_ACTION_END"],"title":"What epoch action has occurred","type":"string"},"vegaEpochData":{"properties":{"offline":{"description":"Total number of offline epochs since node was created.","format":"int32","type":"integer"},"online":{"description":"Total number of online epochs since node was created.","format":"int32","type":"integer"},"total":{"description":"Total number of epochs since node was created.","format":"int32","type":"integer"}},"type":"object"},"vegaEpochRewardSummary":{"properties":{"amount":{"description":"Amount distributed. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"assetId":{"description":"Asset ID in which the reward is being paid.","type":"string"},"epoch":{"description":"Epoch in which the reward is being paid.","format":"uint64","type":"string"},"marketId":{"description":"Market ID in which the reward is being paid.","type":"string"},"rewardType":{"description":"Type of reward being paid.","type":"string"}},"title":"Details for rewards for a combination of asset, market, and reward type in a given epoch","type":"object"},"vegaEpochTimestamps":{"properties":{"endTime":{"description":"Timestamp of epoch end in nanoseconds, empty if not started.","format":"int64","type":"string"},"expiryTime":{"description":"Timestamp of epoch expiry in nanoseconds.","format":"int64","type":"string"},"firstBlock":{"description":"Height of first block in the epoch.","format":"uint64","type":"string"},"lastBlock":{"description":"Height of last block in the epoch, empty if not ended.","format":"uint64","type":"string"},"startTime":{"description":"Timestamp of epoch start in nanoseconds.","format":"int64","type":"string"}},"title":"Describes in both human readable and block time when an epoch spans","type":"object"},"vegaErc20WithdrawExt":{"properties":{"receiverAddress":{"description":"Address into which the bridge will release the funds.","type":"string"}},"title":"Extension of data required for the withdraw submissions","type":"object"},"vegaExternalDataSourceSpec":{"properties":{"spec":{"$ref":"#/components/schemas/vegaDataSourceSpec"}},"type":"object"},"vegaFee":{"properties":{"infrastructureFee":{"description":"Fee amount paid for maintaining the Vega infrastructure. This field is an unsigned integer scaled using the asset's decimal places.","type":"string"},"liquidityFee":{"description":"Fee amount paid to market makers. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"makerFee":{"description":"Fee amount paid to the non-aggressive party of the trade. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"}},"title":"Represents any fees paid by a party, resulting from a trade","type":"object"},"vegaFeeFactors":{"properties":{"infrastructureFee":{"description":"Infrastructure fee charged network wide for staking and governance.","type":"string"},"liquidityFee":{"description":"Liquidity fee applied per market for market making.","type":"string"},"makerFee":{"description":"Market maker fee charged network wide.","type":"string"}},"title":"Fee factors definition","type":"object"},"vegaFees":{"properties":{"factors":{"$ref":"#/components/schemas/vegaFeeFactors","description":"Fee factors."}},"title":"Fees definition","type":"object"},"vegaFuture":{"properties":{"dataSourceSpecBinding":{"$ref":"#/components/schemas/vegaDataSourceSpecToFutureBinding","description":"Binding between the data spec and the data source."},"dataSourceSpecForSettlementData":{"$ref":"#/components/schemas/vegaDataSourceSpec","description":"Data source specification that describes the settlement data source filter."},"dataSourceSpecForTradingTermination":{"$ref":"#/components/schemas/vegaDataSourceSpec","description":"Data source specification that describes the trading termination data source filter."},"quoteName":{"description":"Quote name of the instrument.","type":"string"},"settlementAsset":{"description":"Underlying asset for the future.","type":"string"}},"title":"Future product definition","type":"object"},"vegaFutureProduct":{"properties":{"dataSourceSpecBinding":{"$ref":"#/components/schemas/vegaDataSourceSpecToFutureBinding","description":"Binding between the data source spec and the settlement data."},"dataSourceSpecForSettlementData":{"$ref":"#/components/schemas/vegaDataSourceDefinition","description":"Data source spec describing the data source for settlement."},"dataSourceSpecForTradingTermination":{"$ref":"#/components/schemas/vegaDataSourceDefinition","description":"The external data source spec describing the data source of trading termination."},"quoteName":{"description":"Product quote name.","type":"string"},"settlementAsset":{"description":"Asset ID for the product's settlement asset.","type":"string"}},"title":"Future product configuration","type":"object"},"vegaGovernanceData":{"properties":{"no":{"description":"All NO votes against the proposal above.","items":{"$ref":"#/components/schemas/vegaVote"},"type":"array"},"noParty":{"additionalProperties":{"$ref":"#/components/schemas/vegaVote"},"description":"All latest NO votes by party which is guaranteed to be unique,\nwhere key (string) is the party ID i.e. public key and\nvalue (Vote) is the vote cast by the given party.","type":"object"},"proposal":{"$ref":"#/components/schemas/vegaProposal","description":"Governance proposal that is being voted on."},"yes":{"description":"All YES votes in favour of the proposal above.","items":{"$ref":"#/components/schemas/vegaVote"},"type":"array"},"yesParty":{"additionalProperties":{"$ref":"#/components/schemas/vegaVote"},"description":"All latest YES votes by party which is guaranteed to be unique,\nwhere key (string) is the party ID i.e. public key and\nvalue (Vote) is the vote cast by the given party.","type":"object"}},"title":"Governance data","type":"object"},"vegaInstrument":{"properties":{"code":{"description":"Code for the instrument.","type":"string"},"future":{"$ref":"#/components/schemas/vegaFuture","description":"Future."},"id":{"description":"Unique instrument ID.","type":"string"},"metadata":{"$ref":"#/components/schemas/vegaInstrumentMetadata","description":"Collection of instrument meta-data."},"name":{"description":"Name of the instrument.","type":"string"}},"title":"Instrument definition","type":"object"},"vegaInstrumentConfiguration":{"properties":{"code":{"description":"Instrument code, human-readable shortcode used to describe the instrument.","type":"string"},"future":{"$ref":"#/components/schemas/vegaFutureProduct","description":"Future."},"name":{"description":"Instrument name.","type":"string"}},"title":"Instrument configuration","type":"object"},"vegaInstrumentMetadata":{"properties":{"tags":{"description":"List of 0 or more tags.","items":{"type":"string"},"type":"array"}},"title":"Instrument metadata definition","type":"object"},"vegaLedgerEntry":{"properties":{"amount":{"description":"Amount to transfer. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"fromAccount":{"$ref":"#/components/schemas/vegaAccountDetails","description":"One or more accounts to transfer from."},"fromAccountBalance":{"description":"Sender account balance after the transfer. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"timestamp":{"description":"Unixnano timestamp at which the ledger entry was created.","format":"int64","type":"string"},"toAccount":{"$ref":"#/components/schemas/vegaAccountDetails","description":"One or more accounts to transfer to."},"toAccountBalance":{"description":"Receiver account balance after the transfer. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"type":{"$ref":"#/components/schemas/vegaTransferType","description":"Transfer type for this entry."}},"title":"Represents a ledger entry on Vega","type":"object"},"vegaLedgerMovement":{"properties":{"balances":{"description":"Resulting balances once the ledger movement are applied.","items":{"$ref":"#/components/schemas/vegaPostTransferBalance"},"type":"array"},"entries":{"description":"All the entries for these ledger movements.","items":{"$ref":"#/components/schemas/vegaLedgerEntry"},"type":"array"}},"type":"object"},"vegaLiquidityMonitoringParameters":{"properties":{"auctionExtension":{"description":"Specifies by how many seconds an auction should be extended if leaving the auction were to trigger a liquidity auction.","format":"int64","type":"string"},"targetStakeParameters":{"$ref":"#/components/schemas/vegaTargetStakeParameters","description":"Specifies parameters related to target stake calculation."},"triggeringRatio":{"description":"Specifies the triggering ratio for entering liquidity auction.","type":"string"}},"title":"LiquidityMonitoringParameters contains settings used for liquidity monitoring","type":"object"},"vegaLiquidityOrder":{"properties":{"offset":{"description":"Offset/amount of units away for the order. This field is an unsigned integer scaled using the market's decimal places.","type":"string"},"proportion":{"description":"Relative proportion of the commitment to be allocated at a price level.","format":"int64","type":"integer"},"reference":{"$ref":"#/components/schemas/vegaPeggedReference","description":"Pegged reference point for the order."}},"title":"Represents a liquidity order","type":"object"},"vegaLiquidityOrderReference":{"properties":{"liquidityOrder":{"$ref":"#/components/schemas/vegaLiquidityOrder","description":"Liquidity order from the original submission."},"orderId":{"description":"Unique ID of the pegged order generated by the core to fulfil this liquidity order.","type":"string"}},"title":"Pair of a liquidity order and the ID of the generated order by the core","type":"object"},"vegaLiquidityProviderFeeShare":{"properties":{"averageEntryValuation":{"description":"Average entry valuation of the liquidity provider for the market.","type":"string"},"averageScore":{"description":"Average liquidity score.","type":"string"},"equityLikeShare":{"description":"Share own by this liquidity provider (float).","type":"string"},"party":{"description":"Liquidity provider party ID.","type":"string"}},"title":"Equity like share of liquidity fee for each liquidity provider","type":"object"},"vegaLiquidityProvision":{"properties":{"buys":{"description":"Set of liquidity buy orders to meet the liquidity provision obligation.","items":{"$ref":"#/components/schemas/vegaLiquidityOrderReference"},"type":"array"},"commitmentAmount":{"description":"Specified as a unitless number that represents the amount of settlement asset of the market.\nThis field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"createdAt":{"description":"Timestamp for when the order was created at, in nanoseconds.","format":"int64","type":"string"},"fee":{"description":"Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per setting fees and rewarding liquidity providers.","type":"string"},"id":{"description":"Unique ID for the liquidity provision.","type":"string"},"marketId":{"description":"Market ID for the order, required field.","type":"string"},"partyId":{"description":"Unique party ID for the creator of the provision.","type":"string"},"reference":{"description":"Reference shared between this liquidity provision and all its orders.","type":"string"},"sells":{"description":"Set of liquidity sell orders to meet the liquidity provision obligation.","items":{"$ref":"#/components/schemas/vegaLiquidityOrderReference"},"type":"array"},"status":{"$ref":"#/components/schemas/vegaLiquidityProvisionStatus","description":"Status of this liquidity provision order."},"updatedAt":{"description":"Timestamp for when the order was updated at, in nanoseconds.","format":"int64","type":"string"},"version":{"description":"Version of this liquidity provision order.","format":"uint64","type":"string"}},"title":"Liquidity provider commitment","type":"object"},"vegaLiquidityProvisionStatus":{"default":"STATUS_UNSPECIFIED","description":"Status of a liquidity provision order.\n\n - STATUS_UNSPECIFIED: Default value\n - STATUS_ACTIVE: Liquidity provision is active\n - STATUS_STOPPED: Liquidity provision was stopped by the network\n - STATUS_CANCELLED: Liquidity provision was cancelled by the liquidity provider\n - STATUS_REJECTED: Liquidity provision was invalid and got rejected\n - STATUS_UNDEPLOYED: Liquidity provision is valid and accepted by network, but orders aren't deployed\n - STATUS_PENDING: Liquidity provision is valid and accepted by network\nbut has never been deployed. If when it's possible to deploy the orders for the first time\nmargin check fails, then they will be cancelled without any penalties.","enum":["STATUS_UNSPECIFIED","STATUS_ACTIVE","STATUS_STOPPED","STATUS_CANCELLED","STATUS_REJECTED","STATUS_UNDEPLOYED","STATUS_PENDING"],"type":"string"},"vegaLogNormalModelParams":{"properties":{"mu":{"description":"Mu parameter, annualised growth rate of the underlying asset.","format":"double","type":"number"},"r":{"description":"R parameter, annualised growth rate of the risk-free asset, used for discounting of future cash flows, can be any real number.","format":"double","type":"number"},"sigma":{"description":"Sigma parameter, annualised volatility of the underlying asset, must be a strictly non-negative real number.","format":"double","type":"number"}},"title":"Risk model parameters for log normal","type":"object"},"vegaLogNormalRiskModel":{"properties":{"params":{"$ref":"#/components/schemas/vegaLogNormalModelParams","description":"Risk model parameters for log normal."},"riskAversionParameter":{"description":"Risk Aversion Parameter.","format":"double","type":"number"},"tau":{"description":"Tau parameter of the risk model, projection horizon measured as a year fraction used in the expected shortfall\ncalculation to obtain the maintenance margin, must be a strictly non-negative real number.","format":"double","type":"number"}},"title":"Risk model for log normal","type":"object"},"vegaMarginCalculator":{"properties":{"scalingFactors":{"$ref":"#/components/schemas/vegaScalingFactors","description":"Scaling factors for margin calculation."}},"title":"Margin Calculator definition","type":"object"},"vegaMarginLevels":{"properties":{"asset":{"description":"Asset ID for which the margin levels apply.","type":"string"},"collateralReleaseLevel":{"description":"Collateral release level value. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"initialMargin":{"description":"Initial margin value. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"maintenanceMargin":{"description":"Maintenance margin value. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"marketId":{"description":"Market ID for which the margin levels apply.","type":"string"},"partyId":{"description":"Party ID for whom the margin levels apply.","type":"string"},"searchLevel":{"description":"Margin search level value. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"timestamp":{"description":"Timestamp for the time the ledger entry was created, in nanoseconds.","format":"int64","type":"string"}},"title":"Represents the margin levels for a party on a market at a given time","type":"object"},"vegaMarket":{"properties":{"decimalPlaces":{"description":"Number of decimal places that a price must be shifted by in order to get a\ncorrect price denominated in the currency of the market, for example:\n`realPrice = price / 10^decimalPlaces`.","format":"uint64","type":"string"},"fees":{"$ref":"#/components/schemas/vegaFees","description":"Fees configuration that apply to the market."},"id":{"description":"Unique ID for the market.","type":"string"},"linearSlippageFactor":{"description":"Linear slippage factor is used to cap the slippage component of maintenance margin - it is applied to the slippage volume.","type":"string"},"liquidityMonitoringParameters":{"$ref":"#/components/schemas/vegaLiquidityMonitoringParameters","description":"LiquidityMonitoringParameters for the market."},"lpPriceRange":{"description":"Percentage move up and down from the mid price which specifies the range of\nprice levels over which automated liquidity provision orders will be deployed.","type":"string"},"marketTimestamps":{"$ref":"#/components/schemas/vegaMarketTimestamps","description":"Timestamps for when the market state changes."},"openingAuction":{"$ref":"#/components/schemas/vegaAuctionDuration","description":"Auction duration specifies how long the opening auction will run (minimum\nduration and optionally a minimum traded volume)."},"positionDecimalPlaces":{"description":"The number of decimal places for a position.","format":"int64","type":"string"},"priceMonitoringSettings":{"$ref":"#/components/schemas/vegaPriceMonitoringSettings","description":"PriceMonitoringSettings for the market."},"quadraticSlippageFactor":{"description":"Quadratic slippage factor is used to cap the slippage component of maintenance margin - it is applied to the square of the slippage volume.","type":"string"},"state":{"$ref":"#/components/schemas/vegaMarketState","description":"Current state of the market."},"tradableInstrument":{"$ref":"#/components/schemas/vegaTradableInstrument","description":"Tradable instrument configuration."},"tradingMode":{"$ref":"#/components/schemas/MarketTradingMode","description":"Current mode of execution of the market."}},"title":"Market definition","type":"object"},"vegaMarketData":{"properties":{"auctionEnd":{"description":"Time in seconds until the end of the auction (zero if currently not in auction period).","format":"int64","type":"string"},"auctionStart":{"description":"Time until next auction, or start time of the current auction if market is in auction period.","format":"int64","type":"string"},"bestBidPrice":{"description":"Highest price level on an order book for buy orders, as an unsigned integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.","type":"string"},"bestBidVolume":{"description":"Aggregated volume being bid at the best bid price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market is configured to 5 decimal places.","format":"uint64","type":"string"},"bestOfferPrice":{"description":"Lowest price level on an order book for offer orders. This field is an unsigned integer scaled to the market's decimal places.","type":"string"},"bestOfferVolume":{"description":"Aggregated volume being offered at the best offer price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market is configured to 5 decimal places.","format":"uint64","type":"string"},"bestStaticBidPrice":{"description":"Highest price on the order book for buy orders not including pegged orders.\nThis field is an unsigned integer scaled to the market's decimal places.","type":"string"},"bestStaticBidVolume":{"description":"Total volume at the best static bid price excluding pegged orders.","format":"uint64","type":"string"},"bestStaticOfferPrice":{"description":"Lowest price on the order book for sell orders not including pegged orders.\nThis field is an unsigned integer scaled to the market's decimal places.","type":"string"},"bestStaticOfferVolume":{"description":"Total volume at the best static offer price, excluding pegged orders.","format":"uint64","type":"string"},"extensionTrigger":{"$ref":"#/components/schemas/vegaAuctionTrigger","description":"When a market auction is extended, this field indicates what caused the extension."},"indicativePrice":{"description":"Indicative price (zero if not in auction). This field is an unsigned scaled to the market's decimal places.","type":"string"},"indicativeVolume":{"description":"Indicative volume (zero if not in auction).","format":"uint64","type":"string"},"lastTradedPrice":{"description":"Last traded price of the market. This field is an unsigned integer scaled to the market's decimal places.","type":"string"},"liquidityProviderFeeShare":{"description":"Equity like share of liquidity fee for each liquidity provider.","items":{"$ref":"#/components/schemas/vegaLiquidityProviderFeeShare"},"type":"array"},"markPrice":{"description":"Mark price, as an unsigned integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.","type":"string"},"market":{"title":"Market ID for the data","type":"string"},"marketState":{"$ref":"#/components/schemas/vegaMarketState","description":"Current state of the market."},"marketTradingMode":{"$ref":"#/components/schemas/MarketTradingMode","description":"Current trading mode for the market."},"marketValueProxy":{"description":"Market value proxy.","type":"string"},"midPrice":{"description":"Arithmetic average of the best bid price and best offer price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.","type":"string"},"nextMarkToMarket":{"description":"Next MTM timestamp.","format":"int64","type":"string"},"openInterest":{"description":"Sum of the size of all positions greater than zero on the market.","format":"uint64","type":"string"},"priceMonitoringBounds":{"description":"One or more price monitoring bounds for the current timestamp.","items":{"$ref":"#/components/schemas/vegaPriceMonitoringBounds"},"type":"array"},"staticMidPrice":{"description":"Arithmetic average of the best static bid price and best static offer price.\nThis field is an unsigned integer scaled to the market's decimal places.","type":"string"},"suppliedStake":{"description":"Available stake for the given market. This field is an unsigned integer scaled to the settlement asset's decimal places.","type":"string"},"targetStake":{"description":"Targeted stake for the given market. This field is an unsigned integer scaled to the settlement asset's decimal places.","type":"string"},"timestamp":{"description":"Timestamp at which this mark price was relevant, in nanoseconds.","format":"int64","type":"string"},"trigger":{"$ref":"#/components/schemas/vegaAuctionTrigger","description":"When a market is in an auction trading mode, this field indicates what triggered the auction."}},"title":"Represents data generated by a market when open","type":"object"},"vegaMarketDepth":{"properties":{"buy":{"description":"Collection of price levels for the buy side of the book.","items":{"$ref":"#/components/schemas/vegaPriceLevel"},"type":"array"},"marketId":{"description":"Market ID for which the depth levels apply.","type":"string"},"sell":{"description":"Collection of price levels for the sell side of the book.","items":{"$ref":"#/components/schemas/vegaPriceLevel"},"type":"array"},"sequenceNumber":{"description":"Sequence number for the market depth data returned.","format":"uint64","type":"string"}},"title":"Represents market depth or order book data for the specified market on Vega","type":"object"},"vegaMarketDepthUpdate":{"properties":{"buy":{"description":"Collection of updated price levels for the buy side of the book.","items":{"$ref":"#/components/schemas/vegaPriceLevel"},"type":"array"},"marketId":{"description":"Market ID for which the market depth updates are for.","type":"string"},"previousSequenceNumber":{"description":"Sequence number of the previous market depth update, for checking there are no gaps.","format":"uint64","type":"string"},"sell":{"description":"Collection of updated price levels for the sell side of the book.","items":{"$ref":"#/components/schemas/vegaPriceLevel"},"type":"array"},"sequenceNumber":{"description":"Sequence number for the market depth update data returned. It is increasing but not monotonic.","format":"uint64","type":"string"}},"title":"Represents the changed market depth since the last update","type":"object"},"vegaMarketState":{"default":"STATE_UNSPECIFIED","description":"- STATE_UNSPECIFIED: Default value, invalid\n - STATE_PROPOSED: Governance proposal valid and accepted\n - STATE_REJECTED: Outcome of governance votes is to reject the market\n - STATE_PENDING: Governance vote passes/wins\n - STATE_CANCELLED: Market triggers cancellation condition or governance\nvotes to close before market becomes Active\n - STATE_ACTIVE: Enactment date reached and usual auction exit checks pass\n - STATE_SUSPENDED: Price monitoring or liquidity monitoring trigger\n - STATE_CLOSED: Governance vote to close (Not currently implemented)\n - STATE_TRADING_TERMINATED: Defined by the product (i.e. from a product parameter,\nspecified in market definition, giving close date/time)\n - STATE_SETTLED: Settlement triggered and completed as defined by product","enum":["STATE_UNSPECIFIED","STATE_PROPOSED","STATE_REJECTED","STATE_PENDING","STATE_CANCELLED","STATE_ACTIVE","STATE_SUSPENDED","STATE_CLOSED","STATE_TRADING_TERMINATED","STATE_SETTLED"],"title":"Current state of the market","type":"string"},"vegaMarketTimestamps":{"properties":{"close":{"description":"Time when the market closed.","format":"int64","type":"string"},"open":{"description":"Time when the market has left the opening auction and is ready to accept trades.","format":"int64","type":"string"},"pending":{"description":"Time when the market has been voted in and began its opening auction.","format":"int64","type":"string"},"proposed":{"description":"Time when the market is first proposed.","format":"int64","type":"string"}},"title":"Time stamps for important times about creating, enacting etc the market","type":"object"},"vegaNetworkLimits":{"properties":{"canProposeAsset":{"description":"Are asset proposals allowed at this point in time.","type":"boolean"},"canProposeMarket":{"description":"Are market proposals allowed at this point in time.","type":"boolean"},"genesisLoaded":{"description":"True once the genesis file is loaded.","type":"boolean"},"proposeAssetEnabled":{"description":"Are asset proposals enabled on this chain.","type":"boolean"},"proposeAssetEnabledFrom":{"description":"Date/timestamp in unix nanoseconds at which asset proposals will be enabled (0 indicates not set).","format":"int64","type":"string"},"proposeMarketEnabled":{"description":"Are market proposals enabled on this chain.","type":"boolean"},"proposeMarketEnabledFrom":{"description":"Date/timestamp in unix nanoseconds at which market proposals will be enabled (0 indicates not set).","format":"int64","type":"string"}},"title":"Network limits, defined in the genesis file","type":"object"},"vegaNetworkParameter":{"properties":{"key":{"description":"Unique key of the network parameter.","type":"string"},"value":{"description":"Value for the network parameter.","type":"string"}},"title":"Represents a network parameter on Vega","type":"object"},"vegaNewAsset":{"properties":{"changes":{"$ref":"#/components/schemas/vegaAssetDetails","description":"Configuration of the new asset."}},"title":"New asset on Vega","type":"object"},"vegaNewFreeform":{"description":"Freeform proposal\nThis message is just used as a placeholder to sort out the nature of the\nproposal once parsed.","type":"object"},"vegaNewMarket":{"properties":{"changes":{"$ref":"#/components/schemas/vegaNewMarketConfiguration","description":"Configuration of the new market."}},"title":"New market on Vega","type":"object"},"vegaNewMarketConfiguration":{"properties":{"decimalPlaces":{"description":"Decimal places used for the new market, sets the smallest price increment on the book.","format":"uint64","type":"string"},"instrument":{"$ref":"#/components/schemas/vegaInstrumentConfiguration","description":"New market instrument configuration."},"linearSlippageFactor":{"description":"Linear slippage factor is used to cap the slippage component of maintenance margin - it is applied to the slippage volume.","type":"string"},"liquidityMonitoringParameters":{"$ref":"#/components/schemas/vegaLiquidityMonitoringParameters","description":"Liquidity monitoring parameters."},"logNormal":{"$ref":"#/components/schemas/vegaLogNormalRiskModel","description":"Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected."},"lpPriceRange":{"description":"Percentage move up and down from the mid price which specifies the range of\nprice levels over which automated liquidity provision orders will be deployed.","type":"string"},"metadata":{"description":"Optional new market metadata, tags.","items":{"type":"string"},"type":"array"},"positionDecimalPlaces":{"description":"Decimal places for order sizes, sets what size the smallest order / position on the market can be.","format":"int64","type":"string"},"priceMonitoringParameters":{"$ref":"#/components/schemas/vegaPriceMonitoringParameters","description":"Price monitoring parameters."},"quadraticSlippageFactor":{"description":"Quadratic slippage factor is used to cap the slippage component of maintenance margin - it is applied to the square of the slippage volume.","type":"string"},"simple":{"$ref":"#/components/schemas/vegaSimpleModelParams","description":"Simple risk model parameters, valid only if MODEL_SIMPLE is selected."}},"title":"Configuration for a new market on Vega","type":"object"},"vegaNode":{"properties":{"avatarUrl":{"description":"Avatar url.","type":"string"},"delegations":{"description":"Node's delegations.","items":{"$ref":"#/components/schemas/vegaDelegation"},"type":"array"},"epochData":{"$ref":"#/components/schemas/vegaEpochData","description":"Information about epoch."},"ethereumAddress":{"description":"Ethereum public key of the node.","type":"string"},"id":{"description":"Node ID i.e. the node's wallet ID.","type":"string"},"infoUrl":{"description":"URL where users can find out more information on the node.","type":"string"},"location":{"description":"Country code for the location of the node.","type":"string"},"maxIntendedStake":{"description":"Max amount of (wanted) stake. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"name":{"description":"Node name.","type":"string"},"pendingStake":{"description":"Amount of stake on the next epoch. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"pubKey":{"description":"Public key of the node operator.","type":"string"},"rankingScore":{"$ref":"#/components/schemas/vegaRankingScore","description":"Node ranking information."},"rewardScore":{"$ref":"#/components/schemas/vegaRewardScore","description":"Node reward score."},"stakedByDelegates":{"description":"Amount of stake that has been delegated by token holders. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"stakedByOperator":{"description":"Amount the node operator has put up themselves. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"stakedTotal":{"description":"Total amount staked on node. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"status":{"$ref":"#/components/schemas/vegaNodeStatus","description":"Node status."},"tmPubKey":{"description":"Public key of Tendermint.","type":"string"}},"type":"object"},"vegaNodeData":{"properties":{"ersatzNodes":{"$ref":"#/components/schemas/vegaNodeSet","description":"Details on the set of ersatz (standby) nodes in the network."},"inactiveNodes":{"description":"Total number of nodes that had a performance score of 0 at the end of the last epoch.","format":"int64","type":"integer"},"pendingNodes":{"$ref":"#/components/schemas/vegaNodeSet","description":"Details on the set of pending nodes in the network."},"stakedTotal":{"description":"Total staked amount across all nodes. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"tendermintNodes":{"$ref":"#/components/schemas/vegaNodeSet","description":"Details on the set of consensus nodes in the network."},"totalNodes":{"description":"Total number of nodes across all node sets.","format":"int64","type":"integer"},"uptime":{"description":"Total uptime for all epochs across all nodes.","format":"float","type":"number"}},"type":"object"},"vegaNodeSet":{"properties":{"demoted":{"description":"IDs of nodes that were demoted into this node set at the start of the epoch.","items":{"type":"string"},"type":"array"},"inactive":{"description":"Number of nodes in the node set that had a performance score of 0 at the end of the last epoch.","format":"int64","type":"integer"},"maximum":{"description":"Total number of nodes allowed in the node set.","format":"int64","type":"integer"},"promoted":{"description":"IDs of nodes that were promoted into this node set at the start of the epoch.","items":{"type":"string"},"type":"array"},"total":{"description":"Total number of nodes in the node set.","format":"int64","type":"integer"}},"title":"Details on the collection of nodes for a particular validator status","type":"object"},"vegaNodeStatus":{"default":"NODE_STATUS_UNSPECIFIED","description":"- NODE_STATUS_VALIDATOR: Node is a validating node\n - NODE_STATUS_NON_VALIDATOR: Node is a non-validating node","enum":["NODE_STATUS_UNSPECIFIED","NODE_STATUS_VALIDATOR","NODE_STATUS_NON_VALIDATOR"],"title":"Node status type","type":"string"},"vegaOracleData":{"properties":{"externalData":{"$ref":"#/components/schemas/v1ExternalData"}},"type":"object"},"vegaOracleSpec":{"properties":{"externalDataSourceSpec":{"$ref":"#/components/schemas/vegaExternalDataSourceSpec"}},"title":"Oracle spec contains an embedded external data source spec.\nIt will be generated by the compiler as: OracleSpec_ExternalDataSourceSpec_*","type":"object"},"vegaOrder":{"properties":{"batchId":{"format":"uint64","title":"Batch ID for the order, used internally for orders submitted during auctions\nto keep track of the auction batch this order falls under (required for fees calculation)","type":"string"},"createdAt":{"description":"Timestamp for when the order was created at, in nanoseconds.","format":"int64","type":"string"},"expiresAt":{"description":"Timestamp for when the order will expire, in nanoseconds.","format":"int64","type":"string"},"id":{"description":"Unique ID generated for the order. This is set by the system after consensus.","type":"string"},"liquidityProvisionId":{"description":"Set if order was created as part of a liquidity provision, will be empty if not.","type":"string"},"marketId":{"description":"Market ID for the order.","type":"string"},"partyId":{"description":"Party ID for the order.","type":"string"},"peggedOrder":{"$ref":"#/components/schemas/vegaPeggedOrder","description":"Pegged order details, used only if the order represents a pegged order."},"postOnly":{"description":"Only valid for Limit orders. Cannot be True at the same time as Reduce-Only.","type":"boolean"},"price":{"description":"Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.","type":"string"},"reason":{"$ref":"#/components/schemas/vegaOrderError","description":"If the Order `status` is `STATUS_REJECTED` then an OrderError reason will be specified\n- The default for this field is `ORDER_ERROR_NONE` which signifies that there were no errors."},"reduceOnly":{"description":"Only valid for Non-Persistent orders. Cannot be True at the same time as Post-Only.\nIf set, order will only be executed if the outcome of the trade moves the trader's position closer to 0.","type":"boolean"},"reference":{"description":"Reference given for the order, this is typically used to retrieve an order submitted through consensus\n- Currently set internally by the node to return a unique reference ID for the order submission.","type":"string"},"remaining":{"description":"Size remaining, when this reaches 0 then the order is fully filled and status becomes STATUS_FILLED.","format":"uint64","type":"string"},"side":{"$ref":"#/components/schemas/vegaSide","description":"Side for the order, e.g. SIDE_BUY or SIDE_SELL."},"size":{"description":"Size for the order, for example, in a futures market the size equals the number of contracts.","format":"uint64","type":"string"},"status":{"$ref":"#/components/schemas/vegaOrderStatus","description":"Current status for the order.\n- For detail on `STATUS_REJECTED` please check the OrderError value given in the `reason` field."},"timeInForce":{"$ref":"#/components/schemas/OrderTimeInForce","title":"Time in force indicates how long an order will remain active before it is executed or expires.\n- See OrderTimeInForce"},"type":{"$ref":"#/components/schemas/vegaOrderType","description":"Type for the order."},"updatedAt":{"description":"Timestamp for when the order was last updated, in nanoseconds.","format":"int64","type":"string"},"version":{"format":"uint64","title":"Version for the order, initial value is version 1 and is incremented after each successful amend","type":"string"}},"title":"Orders can be submitted, amended and cancelled on Vega in an attempt to make trades with other parties","type":"object"},"vegaOrderError":{"default":"ORDER_ERROR_UNSPECIFIED","description":"- ORDER_ERROR_UNSPECIFIED: Default value, no error reported\n - ORDER_ERROR_INVALID_MARKET_ID: Order was submitted for a market that does not exist\n - ORDER_ERROR_INVALID_ORDER_ID: Order was submitted with an invalid ID\n - ORDER_ERROR_OUT_OF_SEQUENCE: Order was amended with a sequence number that was not previous version + 1\n - ORDER_ERROR_INVALID_REMAINING_SIZE: Order was amended with an invalid remaining size (e.g. remaining greater than total size)\n - ORDER_ERROR_TIME_FAILURE: Node was unable to get Vega (blockchain) time\n - ORDER_ERROR_REMOVAL_FAILURE: Failed to remove an order from the book\n - ORDER_ERROR_INVALID_EXPIRATION_DATETIME: Order with `TimeInForce.TIME_IN_FORCE_GTT` was submitted or amended\nwith an expiration that was badly formatted or otherwise invalid\n - ORDER_ERROR_INVALID_ORDER_REFERENCE: Order was submitted or amended with an invalid reference field\n - ORDER_ERROR_EDIT_NOT_ALLOWED: Order amend was submitted for an order field that cannot not be amended (e.g. order ID)\n - ORDER_ERROR_AMEND_FAILURE: Amend failure because amend details do not match original order\n - ORDER_ERROR_NOT_FOUND: Order not found in an order book or store\n - ORDER_ERROR_INVALID_PARTY_ID: Order was submitted with an invalid or missing party ID\n - ORDER_ERROR_MARKET_CLOSED: Order was submitted for a market that has closed\n - ORDER_ERROR_MARGIN_CHECK_FAILED: Order was submitted, but the party did not have enough collateral to cover the order\n - ORDER_ERROR_MISSING_GENERAL_ACCOUNT: Order was submitted, but the party did not have an account for this asset\n - ORDER_ERROR_INTERNAL_ERROR: Unspecified internal error\n - ORDER_ERROR_INVALID_SIZE: Order was submitted with an invalid or missing size (e.g. 0)\n - ORDER_ERROR_INVALID_PERSISTENCE: Order was submitted with an invalid persistence for its type\n - ORDER_ERROR_INVALID_TYPE: Order was submitted with an invalid type field\n - ORDER_ERROR_SELF_TRADING: Order was stopped as it would have traded with another order submitted from the same party\n - ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES: Order was submitted, but the party did not have enough collateral to cover the fees for the order\n - ORDER_ERROR_INCORRECT_MARKET_TYPE: Order was submitted with an incorrect or invalid market type\n - ORDER_ERROR_INVALID_TIME_IN_FORCE: Order was submitted with invalid time in force\n - ORDER_ERROR_CANNOT_SEND_GFN_ORDER_DURING_AN_AUCTION: Good For Normal order has reached the market when it is in auction mode\n - ORDER_ERROR_CANNOT_SEND_GFA_ORDER_DURING_CONTINUOUS_TRADING: Good For Auction order has reached the market when it is in continuous trading mode\n - ORDER_ERROR_CANNOT_AMEND_TO_GTT_WITHOUT_EXPIRYAT: Attempt to amend order to GTT without ExpiryAt\n - ORDER_ERROR_EXPIRYAT_BEFORE_CREATEDAT: Attempt to amend ExpiryAt to a value before CreatedAt\n - ORDER_ERROR_CANNOT_HAVE_GTC_AND_EXPIRYAT: Attempt to amend to GTC without an ExpiryAt value\n - ORDER_ERROR_CANNOT_AMEND_TO_FOK_OR_IOC: Amending to FOK or IOC is invalid\n - ORDER_ERROR_CANNOT_AMEND_TO_GFA_OR_GFN: Amending to GFA or GFN is invalid\n - ORDER_ERROR_CANNOT_AMEND_FROM_GFA_OR_GFN: Amending from GFA or GFN is invalid\n - ORDER_ERROR_CANNOT_SEND_IOC_ORDER_DURING_AUCTION: IOC orders are not allowed during auction\n - ORDER_ERROR_CANNOT_SEND_FOK_ORDER_DURING_AUCTION: FOK orders are not allowed during auction\n - ORDER_ERROR_MUST_BE_LIMIT_ORDER: Pegged orders must be LIMIT orders\n - ORDER_ERROR_MUST_BE_GTT_OR_GTC: Pegged orders can only have TIF GTC or GTT\n - ORDER_ERROR_WITHOUT_REFERENCE_PRICE: Pegged order must have a reference price\n - ORDER_ERROR_BUY_CANNOT_REFERENCE_BEST_ASK_PRICE: Buy pegged order cannot reference best ask price\n - ORDER_ERROR_OFFSET_MUST_BE_GREATER_OR_EQUAL_TO_ZERO: Pegged order offset must be >= 0\n - ORDER_ERROR_SELL_CANNOT_REFERENCE_BEST_BID_PRICE: Sell pegged order cannot reference best bid price\n - ORDER_ERROR_OFFSET_MUST_BE_GREATER_THAN_ZERO: Pegged order offset must be > zero\n - ORDER_ERROR_INSUFFICIENT_ASSET_BALANCE: Party has an insufficient balance, or does not have\na general account to submit the order (no deposits made\nfor the required asset)\n - ORDER_ERROR_CANNOT_AMEND_PEGGED_ORDER_DETAILS_ON_NON_PEGGED_ORDER: Cannot amend details of a non pegged details\n - ORDER_ERROR_UNABLE_TO_REPRICE_PEGGED_ORDER: Could not re-price a pegged order because a market price is unavailable\n - ORDER_ERROR_UNABLE_TO_AMEND_PRICE_ON_PEGGED_ORDER: It is not possible to amend the price of an existing pegged order\n - ORDER_ERROR_NON_PERSISTENT_ORDER_OUT_OF_PRICE_BOUNDS: FOK, IOC, or GFN order was rejected because it resulted in trades outside the price bounds\n - ORDER_ERROR_TOO_MANY_PEGGED_ORDERS: Unable to submit pegged order, temporarily too many pegged orders across all markets\n - ORDER_ERROR_POST_ONLY_ORDER_WOULD_TRADE: Post order would trade\n - ORDER_ERROR_REDUCE_ONLY_ORDER_WOULD_NOT_REDUCE_POSITION: Post order would trade","enum":["ORDER_ERROR_UNSPECIFIED","ORDER_ERROR_INVALID_MARKET_ID","ORDER_ERROR_INVALID_ORDER_ID","ORDER_ERROR_OUT_OF_SEQUENCE","ORDER_ERROR_INVALID_REMAINING_SIZE","ORDER_ERROR_TIME_FAILURE","ORDER_ERROR_REMOVAL_FAILURE","ORDER_ERROR_INVALID_EXPIRATION_DATETIME","ORDER_ERROR_INVALID_ORDER_REFERENCE","ORDER_ERROR_EDIT_NOT_ALLOWED","ORDER_ERROR_AMEND_FAILURE","ORDER_ERROR_NOT_FOUND","ORDER_ERROR_INVALID_PARTY_ID","ORDER_ERROR_MARKET_CLOSED","ORDER_ERROR_MARGIN_CHECK_FAILED","ORDER_ERROR_MISSING_GENERAL_ACCOUNT","ORDER_ERROR_INTERNAL_ERROR","ORDER_ERROR_INVALID_SIZE","ORDER_ERROR_INVALID_PERSISTENCE","ORDER_ERROR_INVALID_TYPE","ORDER_ERROR_SELF_TRADING","ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES","ORDER_ERROR_INCORRECT_MARKET_TYPE","ORDER_ERROR_INVALID_TIME_IN_FORCE","ORDER_ERROR_CANNOT_SEND_GFN_ORDER_DURING_AN_AUCTION","ORDER_ERROR_CANNOT_SEND_GFA_ORDER_DURING_CONTINUOUS_TRADING","ORDER_ERROR_CANNOT_AMEND_TO_GTT_WITHOUT_EXPIRYAT","ORDER_ERROR_EXPIRYAT_BEFORE_CREATEDAT","ORDER_ERROR_CANNOT_HAVE_GTC_AND_EXPIRYAT","ORDER_ERROR_CANNOT_AMEND_TO_FOK_OR_IOC","ORDER_ERROR_CANNOT_AMEND_TO_GFA_OR_GFN","ORDER_ERROR_CANNOT_AMEND_FROM_GFA_OR_GFN","ORDER_ERROR_CANNOT_SEND_IOC_ORDER_DURING_AUCTION","ORDER_ERROR_CANNOT_SEND_FOK_ORDER_DURING_AUCTION","ORDER_ERROR_MUST_BE_LIMIT_ORDER","ORDER_ERROR_MUST_BE_GTT_OR_GTC","ORDER_ERROR_WITHOUT_REFERENCE_PRICE","ORDER_ERROR_BUY_CANNOT_REFERENCE_BEST_ASK_PRICE","ORDER_ERROR_OFFSET_MUST_BE_GREATER_OR_EQUAL_TO_ZERO","ORDER_ERROR_SELL_CANNOT_REFERENCE_BEST_BID_PRICE","ORDER_ERROR_OFFSET_MUST_BE_GREATER_THAN_ZERO","ORDER_ERROR_INSUFFICIENT_ASSET_BALANCE","ORDER_ERROR_CANNOT_AMEND_PEGGED_ORDER_DETAILS_ON_NON_PEGGED_ORDER","ORDER_ERROR_UNABLE_TO_REPRICE_PEGGED_ORDER","ORDER_ERROR_UNABLE_TO_AMEND_PRICE_ON_PEGGED_ORDER","ORDER_ERROR_NON_PERSISTENT_ORDER_OUT_OF_PRICE_BOUNDS","ORDER_ERROR_TOO_MANY_PEGGED_ORDERS","ORDER_ERROR_POST_ONLY_ORDER_WOULD_TRADE","ORDER_ERROR_REDUCE_ONLY_ORDER_WOULD_NOT_REDUCE_POSITION"],"title":"OrderError codes are returned in the Order.reason field - If there is an issue\nwith an order during its life-cycle, it will be marked with `status.ORDER_STATUS_REJECTED`","type":"string"},"vegaOrderStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_ACTIVE: Used for active unfilled or partially filled orders\n - STATUS_EXPIRED: Used for expired GTT orders\n - STATUS_CANCELLED: Used for orders cancelled by the party that created the order\n - STATUS_STOPPED: Used for unfilled FOK or IOC orders, and for orders that were stopped by the network\n - STATUS_FILLED: Used for closed fully filled orders\n - STATUS_REJECTED: Used for orders when not enough collateral was available to fill the margin requirements\n - STATUS_PARTIALLY_FILLED: Used for closed partially filled IOC orders\n - STATUS_PARKED: Order has been removed from the order book and has been parked,\nthis applies to pegged orders and liquidity orders (orders created from a liquidity provision shape)","enum":["STATUS_UNSPECIFIED","STATUS_ACTIVE","STATUS_EXPIRED","STATUS_CANCELLED","STATUS_STOPPED","STATUS_FILLED","STATUS_REJECTED","STATUS_PARTIALLY_FILLED","STATUS_PARKED"],"title":"Status values for an order","type":"string"},"vegaOrderType":{"default":"TYPE_UNSPECIFIED","description":"- TYPE_UNSPECIFIED: Default value, always invalid\n - TYPE_LIMIT: Used for Limit orders\n - TYPE_MARKET: Used for Market orders\n - TYPE_NETWORK: Used for orders where the initiating party is the network (with distressed parties)","enum":["TYPE_UNSPECIFIED","TYPE_LIMIT","TYPE_MARKET","TYPE_NETWORK"],"title":"Type values for an order","type":"string"},"vegaParty":{"properties":{"id":{"description":"Unique ID for the party, typically represented by a public key.","type":"string"}},"title":"Party represents an entity who wishes to trade on or query a Vega network","type":"object"},"vegaPeggedOrder":{"properties":{"offset":{"description":"Offset from the price reference.","type":"string"},"reference":{"$ref":"#/components/schemas/vegaPeggedReference","description":"Price point the order is linked to."}},"title":"Pegged orders are limit orders where the price is specified in the form REFERENCE +/- OFFSET\nThey can be used for any limit order that is valid during continuous trading","type":"object"},"vegaPeggedReference":{"default":"PEGGED_REFERENCE_UNSPECIFIED","description":"- PEGGED_REFERENCE_UNSPECIFIED: Default value for PeggedReference, no reference given\n - PEGGED_REFERENCE_MID: Mid price reference\n - PEGGED_REFERENCE_BEST_BID: Best bid price reference\n - PEGGED_REFERENCE_BEST_ASK: Best ask price reference","enum":["PEGGED_REFERENCE_UNSPECIFIED","PEGGED_REFERENCE_MID","PEGGED_REFERENCE_BEST_BID","PEGGED_REFERENCE_BEST_ASK"],"title":"Pegged reference defines which price point a pegged order is linked to - meaning\nthe price for a pegged order is calculated from the value of the reference price point","type":"string"},"vegaPosition":{"properties":{"averageEntryPrice":{"description":"Average entry price for the position, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.","type":"string"},"lossSocialisationAmount":{"description":"Sum of profit that could not be paid due to loss socialisation.","type":"string"},"marketId":{"description":"Market ID in which the position is held.","type":"string"},"openVolume":{"description":"Open volume for the position, value is signed +ve for long and -ve for short.","format":"int64","type":"string"},"partyId":{"description":"Party ID holding the position.","type":"string"},"positionStatus":{"$ref":"#/components/schemas/vegaPositionStatus","description":"Position status, indicating whether the party was distressed and had orders cancelled or was closed out."},"realisedPnl":{"description":"Realised profit and loss for the position, value is signed +ve for long and -ve for short.\nThis field is a signed integer scaled to the market's decimal places.","type":"string"},"unrealisedPnl":{"description":"Unrealised profit and loss for the position, value is signed +ve for long and -ve for short.\nThis field is a signed integer scaled to the market's decimal places.","type":"string"},"updatedAt":{"description":"Timestamp for the latest time the position was updated.","format":"int64","type":"string"}},"title":"Represents position data for a party on the specified market on Vega","type":"object"},"vegaPositionStatus":{"default":"POSITION_STATUS_UNSPECIFIED","enum":["POSITION_STATUS_UNSPECIFIED","POSITION_STATUS_ORDERS_CLOSED","POSITION_STATUS_CLOSED_OUT","POSITION_STATUS_DISTRESSED"],"title":"Represents the status of a position","type":"string"},"vegaPostTransferBalance":{"properties":{"account":{"$ref":"#/components/schemas/vegaAccountDetails","description":"Account relating to the transfer."},"balance":{"description":"Balance relating to the transfer. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"}},"title":"Represents the balance for an account during a transfer","type":"object"},"vegaPriceLevel":{"properties":{"numberOfOrders":{"description":"Number of orders at the price level.","format":"uint64","type":"string"},"price":{"description":"Price for the price level, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places. This field\nis an unsigned integer passed as a string and needs to be scaled using the market's decimal places.","type":"string"},"volume":{"description":"Volume at the price level.","format":"uint64","type":"string"}},"title":"Represents a price level from market depth or order book data","type":"object"},"vegaPriceMonitoringBounds":{"properties":{"maxValidPrice":{"description":"Maximum price that isn't currently breaching the specified price monitoring trigger.\nThis field is an unsigned integer scaled to the market's decimal places.","type":"string"},"minValidPrice":{"description":"Minimum price that isn't currently breaching the specified price monitoring trigger.\nThis field is an unsigned integer scaled to the market's decimal places.","type":"string"},"referencePrice":{"description":"Reference price used to calculate the valid price range. This field is an unsigned integer scaled to the market's decimal places.","type":"string"},"trigger":{"$ref":"#/components/schemas/vegaPriceMonitoringTrigger","description":"Price monitoring trigger associated with the bounds."}},"title":"Represents a list of valid (at the current timestamp) price ranges per associated trigger","type":"object"},"vegaPriceMonitoringParameters":{"properties":{"triggers":{"items":{"$ref":"#/components/schemas/vegaPriceMonitoringTrigger"},"type":"array"}},"title":"PriceMonitoringParameters contains a collection of triggers to be used for a given market","type":"object"},"vegaPriceMonitoringSettings":{"properties":{"parameters":{"$ref":"#/components/schemas/vegaPriceMonitoringParameters","description":"Specifies price monitoring parameters to be used for price monitoring purposes."}},"title":"PriceMonitoringSettings contains the settings for price monitoring","type":"object"},"vegaPriceMonitoringTrigger":{"properties":{"auctionExtension":{"description":"Price monitoring auction extension duration in seconds should the price\nbreach its theoretical level over the specified horizon at the specified\nprobability level.","format":"int64","type":"string"},"horizon":{"description":"Price monitoring projection horizon τ in seconds.","format":"int64","type":"string"},"probability":{"description":"Price monitoring probability level p.","type":"string"}},"title":"PriceMonitoringTrigger holds together price projection horizon τ, probability level p, and auction extension duration","type":"object"},"vegaProposal":{"properties":{"errorDetails":{"description":"Detailed error associated to the reason.","type":"string"},"id":{"description":"Unique proposal ID.","type":"string"},"partyId":{"description":"Party ID i.e. public key of the party submitting the proposal.","type":"string"},"rationale":{"$ref":"#/components/schemas/vegaProposalRationale","description":"Rationale behind a proposal."},"reason":{"$ref":"#/components/schemas/vegaProposalError","description":"Reason for the current state of the proposal, this may be set in case of REJECTED and FAILED statuses."},"reference":{"description":"Proposal reference.","type":"string"},"requiredLiquidityProviderMajority":{"description":"Required majority from liquidity providers, optional but is required for market update proposal.","type":"string"},"requiredLiquidityProviderParticipation":{"description":"Required participation from liquidity providers, optional but is required for market update proposal.","type":"string"},"requiredMajority":{"description":"Required majority for this proposal.","type":"string"},"requiredParticipation":{"description":"Required vote participation for this proposal.","type":"string"},"state":{"$ref":"#/components/schemas/vegaProposalState","description":"Current state of the proposal, i.e. open, passed, failed etc."},"terms":{"$ref":"#/components/schemas/vegaProposalTerms","description":"Proposal configuration and the actual change that is meant to be executed when proposal is enacted."},"timestamp":{"description":"Proposal timestamp for date and time as Unix time in nanoseconds when proposal was submitted to the network.","format":"int64","type":"string"}},"title":"Governance proposal","type":"object"},"vegaProposalError":{"default":"PROPOSAL_ERROR_UNSPECIFIED","description":"- PROPOSAL_ERROR_UNSPECIFIED: Default value\n - PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON: Specified close time is too early based on network parameters\n - PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE: Specified close time is too late based on network parameters\n - PROPOSAL_ERROR_ENACT_TIME_TOO_SOON: Specified enactment time is too early based on network parameters\n - PROPOSAL_ERROR_ENACT_TIME_TOO_LATE: Specified enactment time is too late based on network parameters\n - PROPOSAL_ERROR_INSUFFICIENT_TOKENS: Proposer for this proposal has insufficient tokens\n - PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY: Instrument quote name and base name were the same\n - PROPOSAL_ERROR_NO_PRODUCT: Proposal has no product\n - PROPOSAL_ERROR_UNSUPPORTED_PRODUCT: Specified product is not supported\n - PROPOSAL_ERROR_NO_TRADING_MODE: Proposal has no trading mode\n - PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE: Proposal has an unsupported trading mode\n - PROPOSAL_ERROR_NODE_VALIDATION_FAILED: Proposal failed node validation\n - PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD: Field is missing in a builtin asset source\n - PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS: Contract address is missing in the ERC20 asset source\n - PROPOSAL_ERROR_INVALID_ASSET: Asset ID is invalid or does not exist on the Vega network\n - PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS: Proposal terms timestamps are not compatible (Validation < Closing < Enactment)\n - PROPOSAL_ERROR_NO_RISK_PARAMETERS: No risk parameters were specified\n - PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY: Invalid key in update network parameter proposal\n - PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE: Invalid value in update network parameter proposal\n - PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED: Validation failed for network parameter proposal\n - PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL: Opening auction duration is less than the network minimum opening auction time\n - PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE: Opening auction duration is more than the network minimum opening auction time\n - PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET: Market proposal market could not be instantiated in execution\n - PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT: Market proposal market contained invalid product definition\n - PROPOSAL_ERROR_INVALID_RISK_PARAMETER: Market proposal has invalid risk parameter\n - PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED: Proposal was declined because vote didn't reach the majority threshold required\n - PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED: Proposal declined because the participation threshold was not reached\n - PROPOSAL_ERROR_INVALID_ASSET_DETAILS: Asset proposal has invalid asset details\n - PROPOSAL_ERROR_UNKNOWN_TYPE: Proposal is an unknown type\n - PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE: Proposal has an unknown risk parameter type\n - PROPOSAL_ERROR_INVALID_FREEFORM: Validation failed for freeform proposal\n - PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE: Party doesn't have enough equity-like share to propose an update on the market\ntargeted by the proposal\n - PROPOSAL_ERROR_INVALID_MARKET: Market targeted by the proposal does not exist or is not eligible for modification\n - PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES: Market proposal decimal place is higher than the market settlement asset decimal places\n - PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS: Market proposal contains too many price monitoring triggers\n - PROPOSAL_ERROR_ERC20_ADDRESS_ALREADY_IN_USE: Market proposal contains too many price monitoring triggers\n - PROPOSAL_ERROR_LP_PRICE_RANGE_NONPOSITIVE: LP price range must be larger than 0\n - PROPOSAL_ERROR_LP_PRICE_RANGE_TOO_LARGE: LP price range must not be larger than 100\n - PROPOSAL_ERROR_LINEAR_SLIPPAGE_FACTOR_OUT_OF_RANGE: Linear slippage factor is out of range, either negative or too large\n - PROPOSAL_ERROR_QUADRATIC_SLIPPAGE_FACTOR_OUT_OF_RANGE: Quadratic slippage factor is out of range, either negative or too large","enum":["PROPOSAL_ERROR_UNSPECIFIED","PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON","PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE","PROPOSAL_ERROR_ENACT_TIME_TOO_SOON","PROPOSAL_ERROR_ENACT_TIME_TOO_LATE","PROPOSAL_ERROR_INSUFFICIENT_TOKENS","PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY","PROPOSAL_ERROR_NO_PRODUCT","PROPOSAL_ERROR_UNSUPPORTED_PRODUCT","PROPOSAL_ERROR_NO_TRADING_MODE","PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE","PROPOSAL_ERROR_NODE_VALIDATION_FAILED","PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD","PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS","PROPOSAL_ERROR_INVALID_ASSET","PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS","PROPOSAL_ERROR_NO_RISK_PARAMETERS","PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY","PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE","PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED","PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL","PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE","PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET","PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT","PROPOSAL_ERROR_INVALID_RISK_PARAMETER","PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED","PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED","PROPOSAL_ERROR_INVALID_ASSET_DETAILS","PROPOSAL_ERROR_UNKNOWN_TYPE","PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE","PROPOSAL_ERROR_INVALID_FREEFORM","PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE","PROPOSAL_ERROR_INVALID_MARKET","PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES","PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS","PROPOSAL_ERROR_ERC20_ADDRESS_ALREADY_IN_USE","PROPOSAL_ERROR_LP_PRICE_RANGE_NONPOSITIVE","PROPOSAL_ERROR_LP_PRICE_RANGE_TOO_LARGE","PROPOSAL_ERROR_LINEAR_SLIPPAGE_FACTOR_OUT_OF_RANGE","PROPOSAL_ERROR_QUADRATIC_SLIPPAGE_FACTOR_OUT_OF_RANGE"],"title":"List of possible errors that can cause a proposal to be in state rejected or failed","type":"string"},"vegaProposalRationale":{"description":"Rationale behind a proposal.","properties":{"description":{"description":"Description to show a short title / something in case the link goes offline.\nThis is to be between 0 and 20k unicode characters.\nThis is mandatory for all proposals.","type":"string"},"title":{"description":"Title to be used to give a short description of the proposal in lists.\nThis is to be between 0 and 100 unicode characters.\nThis is mandatory for all proposals.","type":"string"}},"type":"object"},"vegaProposalState":{"default":"STATE_UNSPECIFIED","description":"- STATE_UNSPECIFIED: Default value, always invalid\n - STATE_FAILED: Proposal enactment has failed - even though proposal has passed, its execution could not be performed\n - STATE_OPEN: Proposal is open for voting\n - STATE_PASSED: Proposal has gained enough support to be executed\n - STATE_REJECTED: Proposal wasn't accepted i.e. proposal terms failed validation due to wrong configuration or failed to meet network requirements.\n - STATE_DECLINED: Proposal didn't get enough votes, e.g. either failed to gain required participation or majority level.\n - STATE_ENACTED: Proposal enacted\n - STATE_WAITING_FOR_NODE_VOTE: Waiting for node validation of the proposal","enum":["STATE_UNSPECIFIED","STATE_FAILED","STATE_OPEN","STATE_PASSED","STATE_REJECTED","STATE_DECLINED","STATE_ENACTED","STATE_WAITING_FOR_NODE_VOTE"],"title":"Proposal state transition:\nOpen ->\n  - Passed -> Enacted.\n  - Passed -> Failed.\n  - Declined\nRejected\nProposal can enter Failed state from any other state","type":"string"},"vegaProposalTerms":{"properties":{"closingTimestamp":{"description":"Timestamp as Unix time in seconds when voting closes for this proposal,\nconstrained by `minClose` and `maxClose` network parameters.","format":"int64","type":"string"},"enactmentTimestamp":{"description":"Timestamp as Unix time in seconds when proposal gets enacted if passed,\nconstrained by `minEnact` and `maxEnact` network parameters.","format":"int64","type":"string"},"newAsset":{"$ref":"#/components/schemas/vegaNewAsset","description":"Proposal change for creating new assets on Vega."},"newFreeform":{"$ref":"#/components/schemas/vegaNewFreeform","description":"Proposal change for a freeform request, which can be voted on but does not change the behaviour of the system,\nand can be used to gauge community sentiment."},"newMarket":{"$ref":"#/components/schemas/vegaNewMarket","description":"Proposal change for creating new market on Vega."},"updateAsset":{"$ref":"#/components/schemas/vegaUpdateAsset","description":"Proposal change for updating an asset."},"updateMarket":{"$ref":"#/components/schemas/vegaUpdateMarket","description":"Proposal change for modifying an existing market on Vega."},"updateNetworkParameter":{"$ref":"#/components/schemas/vegaUpdateNetworkParameter","description":"Proposal change for updating Vega network parameters."},"validationTimestamp":{"description":"Validation timestamp as Unix time in seconds.","format":"int64","type":"string"}},"title":"Terms for a governance proposal on Vega","type":"object"},"vegaRankingScore":{"properties":{"performanceScore":{"description":"Performance based score.","type":"string"},"previousStatus":{"$ref":"#/components/schemas/vegaValidatorNodeStatus","description":"Status of the validator in the previous epoch."},"rankingScore":{"description":"Final score.","type":"string"},"stakeScore":{"description":"Stake based score - no anti-whaling.","type":"string"},"status":{"$ref":"#/components/schemas/vegaValidatorNodeStatus","description":"Status of the validator in the current epoch."},"votingPower":{"description":"Tendermint voting power of the validator.","format":"int64","type":"integer"}},"type":"object"},"vegaReward":{"properties":{"amount":{"description":"Amount paid as a reward. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"assetId":{"description":"Asset ID in which the reward is being paid.","type":"string"},"epoch":{"description":"Epoch in which the reward is being paid.","format":"uint64","type":"string"},"marketId":{"description":"Market ID in which the reward is being paid.","type":"string"},"partyId":{"description":"Party ID to whom the reward is being paid.","type":"string"},"percentageOfTotal":{"description":"Percentage of total rewards paid in the epoch.","type":"string"},"receivedAt":{"description":"Timestamp at which the reward was paid as Unix nano time.","format":"int64","type":"string"},"rewardType":{"description":"Type of reward being paid.","type":"string"}},"title":"Details for a single reward payment","type":"object"},"vegaRewardScore":{"properties":{"multisigScore":{"description":"Multisig score.","type":"string"},"normalisedScore":{"description":"Normalised validator score for rewards.","type":"string"},"performanceScore":{"description":"Performance based score.","type":"string"},"rawValidatorScore":{"description":"Stake based score - with anti-whaling.","type":"string"},"validatorScore":{"description":"Un-normalised score.","type":"string"},"validatorStatus":{"$ref":"#/components/schemas/vegaValidatorNodeStatus","description":"Status of the validator for reward."}},"type":"object"},"vegaRewardSummary":{"properties":{"amount":{"description":"Total amount of rewards paid in the asset. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"assetId":{"description":"Asset ID in which the reward is being paid.","type":"string"},"partyId":{"description":"Party ID to whom the reward is being paid.","type":"string"}},"title":"Details for rewards for a single asset","type":"object"},"vegaRiskFactor":{"properties":{"long":{"description":"Long Risk factor value.","type":"string"},"market":{"description":"Market ID that relates to this risk factor.","type":"string"},"short":{"description":"Short Risk factor value.","type":"string"}},"title":"Risk factors are used to calculate the current risk associated with orders trading on a given market","type":"object"},"vegaScalingFactors":{"properties":{"collateralRelease":{"description":"Collateral release level. If a trader has collateral above this level,\nthe system will release collateral to a trader's general collateral account\nfor the asset.","format":"double","type":"number"},"initialMargin":{"description":"Initial margin level. This is the minimum amount of collateral\nrequired to open a position in a market that requires margin.","format":"double","type":"number"},"searchLevel":{"description":"Collateral search level. If collateral dips below this value,\nthe system will search for collateral to release.","format":"double","type":"number"}},"title":"Scaling Factors (for use in margin calculation)","type":"object"},"vegaSide":{"default":"SIDE_UNSPECIFIED","description":"- SIDE_UNSPECIFIED: Default value, always invalid\n - SIDE_BUY: Buy order\n - SIDE_SELL: Sell order","enum":["SIDE_UNSPECIFIED","SIDE_BUY","SIDE_SELL"],"title":"Side relates to the direction of an order, to Buy, or Sell","type":"string"},"vegaSimpleModelParams":{"properties":{"factorLong":{"description":"Pre-defined risk factor value for long.","format":"double","type":"number"},"factorShort":{"description":"Pre-defined risk factor value for short.","format":"double","type":"number"},"maxMoveUp":{"description":"Pre-defined maximum price move up that the model considers as valid.","format":"double","type":"number"},"minMoveDown":{"description":"Pre-defined minimum price move down that the model considers as valid.","format":"double","type":"number"},"probabilityOfTrading":{"description":"Pre-defined constant probability of trading.","format":"double","type":"number"}},"title":"Risk model parameters for simple modelling","type":"object"},"vegaSimpleRiskModel":{"properties":{"params":{"$ref":"#/components/schemas/vegaSimpleModelParams","description":"Risk model params for simple modelling."}},"title":"Risk model for simple modelling","type":"object"},"vegaTargetStakeParameters":{"properties":{"scalingFactor":{"description":"Specifies scaling factors used in target stake calculation.","format":"double","type":"number"},"timeWindow":{"description":"Specifies length of time window expressed in seconds for target stake calculation.","format":"int64","type":"string"}},"title":"TargetStakeParameters contains parameters used in target stake calculation","type":"object"},"vegaTradableInstrument":{"properties":{"instrument":{"$ref":"#/components/schemas/vegaInstrument","description":"Details for the underlying instrument."},"logNormalRiskModel":{"$ref":"#/components/schemas/vegaLogNormalRiskModel","description":"Log normal."},"marginCalculator":{"$ref":"#/components/schemas/vegaMarginCalculator","description":"Margin calculator for the instrument."},"simpleRiskModel":{"$ref":"#/components/schemas/vegaSimpleRiskModel","description":"Simple."}},"title":"Tradable Instrument definition","type":"object"},"vegaTrade":{"properties":{"aggressor":{"$ref":"#/components/schemas/vegaSide","description":"Direction of the aggressive party e.g. SIDE_BUY or SIDE_SELL."},"buyOrder":{"description":"Identifier of the order from the buy side.","type":"string"},"buyer":{"description":"Unique party ID for the buyer.","type":"string"},"buyerAuctionBatch":{"description":"Auction batch number that the buy side order was placed in.","format":"uint64","type":"string"},"buyerFee":{"$ref":"#/components/schemas/vegaFee","description":"Fee amount charged to the buyer party for the trade."},"id":{"description":"Unique ID for the trade (generated by Vega).","type":"string"},"marketId":{"description":"Market ID (the market that the trade occurred on).","type":"string"},"price":{"description":"Price for the trade, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places.","type":"string"},"sellOrder":{"description":"Identifier of the order from the sell side.","type":"string"},"seller":{"description":"Unique party ID for the seller.","type":"string"},"sellerAuctionBatch":{"description":"Auction batch number that the sell side order was placed in.","format":"uint64","type":"string"},"sellerFee":{"$ref":"#/components/schemas/vegaFee","description":"Fee amount charged to the seller party for the trade."},"size":{"description":"Size filled for the trade.","format":"uint64","type":"string"},"timestamp":{"description":"Timestamp for when the trade occurred, in nanoseconds.","format":"int64","type":"string"},"type":{"$ref":"#/components/schemas/vegaTradeType","description":"Type for the trade."}},"title":"A trade occurs when an aggressive order crosses one or more passive orders on the order book for a market on Vega","type":"object"},"vegaTradeType":{"default":"TYPE_UNSPECIFIED","description":"- TYPE_UNSPECIFIED: Default value, always invalid\n - TYPE_DEFAULT: Normal trading between two parties\n - TYPE_NETWORK_CLOSE_OUT_GOOD: Trading initiated by the network with another party on the book,\nwhich helps to zero-out the positions of one or more distressed parties\n - TYPE_NETWORK_CLOSE_OUT_BAD: Trading initiated by the network with another party off the book,\nwith a distressed party in order to zero-out the position of the party","enum":["TYPE_UNSPECIFIED","TYPE_DEFAULT","TYPE_NETWORK_CLOSE_OUT_GOOD","TYPE_NETWORK_CLOSE_OUT_BAD"],"title":"Type values for a trade","type":"string"},"vegaTransferType":{"default":"TRANSFER_TYPE_UNSPECIFIED","description":"- TRANSFER_TYPE_UNSPECIFIED: Default value, always invalid\n - TRANSFER_TYPE_LOSS: Funds deducted after final settlement loss\n - TRANSFER_TYPE_WIN: Funds added to general account after final settlement gain\n - TRANSFER_TYPE_MTM_LOSS: Funds deducted from margin account after mark to market loss\n - TRANSFER_TYPE_MTM_WIN: Funds added to margin account after mark to market gain\n - TRANSFER_TYPE_MARGIN_LOW: Funds transferred from general account to meet margin requirement\n - TRANSFER_TYPE_MARGIN_HIGH: Excess margin amount returned to general account\n - TRANSFER_TYPE_MARGIN_CONFISCATED: Margin confiscated from margin account to fulfil closeout\n - TRANSFER_TYPE_MAKER_FEE_PAY: Maker fee paid from general account\n - TRANSFER_TYPE_MAKER_FEE_RECEIVE: Maker fee received into general account\n - TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY: Infrastructure fee paid from general account\n - TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE: Infrastructure fee received into general account\n - TRANSFER_TYPE_LIQUIDITY_FEE_PAY: Liquidity fee paid from general account\n - TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE: Liquidity fee received into general account\n - TRANSFER_TYPE_BOND_LOW: Bond account funded from general account to meet required bond amount\n - TRANSFER_TYPE_BOND_HIGH: Bond returned to general account after liquidity commitment was reduced\n - TRANSFER_TYPE_WITHDRAW: Funds withdrawn from general account\n - TRANSFER_TYPE_DEPOSIT: Funds deposited to general account\n - TRANSFER_TYPE_BOND_SLASHING: Bond account penalised when liquidity commitment not met\n - TRANSFER_TYPE_REWARD_PAYOUT: Reward payout received\n - TRANSFER_TYPE_TRANSFER_FUNDS_SEND: Internal Vega network instruction for the collateral engine to move funds from a user's general account into the pending transfers pool\n - TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE: Internal Vega network instruction for the collateral engine to move funds from the pending transfers pool account into the destination account\n - TRANSFER_TYPE_CLEAR_ACCOUNT: Market-related accounts emptied because market has closed\n - TRANSFER_TYPE_CHECKPOINT_BALANCE_RESTORE: Balances restored after network restart","enum":["TRANSFER_TYPE_UNSPECIFIED","TRANSFER_TYPE_LOSS","TRANSFER_TYPE_WIN","TRANSFER_TYPE_MTM_LOSS","TRANSFER_TYPE_MTM_WIN","TRANSFER_TYPE_MARGIN_LOW","TRANSFER_TYPE_MARGIN_HIGH","TRANSFER_TYPE_MARGIN_CONFISCATED","TRANSFER_TYPE_MAKER_FEE_PAY","TRANSFER_TYPE_MAKER_FEE_RECEIVE","TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY","TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE","TRANSFER_TYPE_LIQUIDITY_FEE_PAY","TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE","TRANSFER_TYPE_BOND_LOW","TRANSFER_TYPE_BOND_HIGH","TRANSFER_TYPE_WITHDRAW","TRANSFER_TYPE_DEPOSIT","TRANSFER_TYPE_BOND_SLASHING","TRANSFER_TYPE_REWARD_PAYOUT","TRANSFER_TYPE_TRANSFER_FUNDS_SEND","TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE","TRANSFER_TYPE_CLEAR_ACCOUNT","TRANSFER_TYPE_CHECKPOINT_BALANCE_RESTORE"],"title":"Transfers can occur between parties on Vega, these are the types that indicate why a transfer took place","type":"string"},"vegaUpdateAsset":{"properties":{"assetId":{"description":"Asset ID the update is for.","type":"string"},"changes":{"$ref":"#/components/schemas/vegaAssetDetailsUpdate","description":"Changes to apply on an existing asset."}},"title":"Update an existing asset on Vega","type":"object"},"vegaUpdateFutureProduct":{"properties":{"dataSourceSpecBinding":{"$ref":"#/components/schemas/vegaDataSourceSpecToFutureBinding","description":"The binding between the data source spec and the settlement data."},"dataSourceSpecForSettlementData":{"$ref":"#/components/schemas/vegaDataSourceDefinition","description":"The data source spec describing the data of settlement data."},"dataSourceSpecForTradingTermination":{"$ref":"#/components/schemas/vegaDataSourceDefinition","description":"The data source spec describing the data source for trading termination."},"quoteName":{"description":"Human-readable name/abbreviation of the quote name.","type":"string"}},"title":"Future product configuration","type":"object"},"vegaUpdateInstrumentConfiguration":{"properties":{"code":{"description":"Instrument code, human-readable shortcode used to describe the instrument.","type":"string"},"future":{"$ref":"#/components/schemas/vegaUpdateFutureProduct","description":"Future."}},"title":"Instrument configuration","type":"object"},"vegaUpdateMarket":{"properties":{"changes":{"$ref":"#/components/schemas/vegaUpdateMarketConfiguration","description":"Updated configuration of the market."},"marketId":{"description":"Market ID the update is for.","type":"string"}},"title":"Update an existing market on Vega","type":"object"},"vegaUpdateMarketConfiguration":{"properties":{"instrument":{"$ref":"#/components/schemas/vegaUpdateInstrumentConfiguration","description":"Updated market instrument configuration."},"linearSlippageFactor":{"description":"Linear slippage factor is used to cap the slippage component of maintenance margin - it is applied to the slippage volume.","type":"string"},"liquidityMonitoringParameters":{"$ref":"#/components/schemas/vegaLiquidityMonitoringParameters","description":"Liquidity monitoring parameters."},"logNormal":{"$ref":"#/components/schemas/vegaLogNormalRiskModel","description":"Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected."},"lpPriceRange":{"description":"Percentage move up and down from the mid price which specifies the range of\nprice levels over which automated liquidity provision orders will be deployed.","type":"string"},"metadata":{"description":"Optional market metadata, tags.","items":{"type":"string"},"type":"array"},"priceMonitoringParameters":{"$ref":"#/components/schemas/vegaPriceMonitoringParameters","description":"Price monitoring parameters."},"quadraticSlippageFactor":{"description":"Quadratic slippage factor is used to cap the slippage component of maintenance margin - it is applied to the square of the slippage volume.","type":"string"},"simple":{"$ref":"#/components/schemas/vegaSimpleModelParams","description":"Simple risk model parameters, valid only if MODEL_SIMPLE is selected."}},"title":"Configuration to update a market on Vega","type":"object"},"vegaUpdateNetworkParameter":{"properties":{"changes":{"$ref":"#/components/schemas/vegaNetworkParameter","description":"The network parameter to update."}},"title":"Update network configuration on Vega","type":"object"},"vegaValidatorNodeStatus":{"default":"VALIDATOR_NODE_STATUS_UNSPECIFIED","description":"- VALIDATOR_NODE_STATUS_TENDERMINT: Node is a tendermint validator\n - VALIDATOR_NODE_STATUS_ERSATZ: Node is an ersatz validator\n - VALIDATOR_NODE_STATUS_PENDING: Node is a pending validator","enum":["VALIDATOR_NODE_STATUS_UNSPECIFIED","VALIDATOR_NODE_STATUS_TENDERMINT","VALIDATOR_NODE_STATUS_ERSATZ","VALIDATOR_NODE_STATUS_PENDING"],"title":"Validation status of the node","type":"string"},"vegaVote":{"properties":{"partyId":{"description":"Voter's party ID.","type":"string"},"proposalId":{"description":"Proposal ID being voted on.","type":"string"},"timestamp":{"description":"Vote timestamp for date and time as Unix time in nanoseconds when vote was submitted to the network.","format":"int64","type":"string"},"totalEquityLikeShareWeight":{"description":"The weight of the vote compared to the total amount of equity-like share on the market.","type":"string"},"totalGovernanceTokenBalance":{"description":"Total number of governance token for the party that cast the vote.","type":"string"},"totalGovernanceTokenWeight":{"description":"The weight of this vote based on the total number of governance tokens.","type":"string"},"value":{"$ref":"#/components/schemas/vegaVoteValue","description":"Actual vote."}},"title":"Governance vote","type":"object"},"vegaVoteValue":{"default":"VALUE_UNSPECIFIED","description":"- VALUE_UNSPECIFIED: Default value, always invalid\n - VALUE_NO: Vote against the proposal\n - VALUE_YES: Vote in favour of the proposal","enum":["VALUE_UNSPECIFIED","VALUE_NO","VALUE_YES"],"title":"Vote value","type":"string"},"vegaWithdrawExt":{"properties":{"erc20":{"$ref":"#/components/schemas/vegaErc20WithdrawExt","description":"ERC20 withdrawal details."}},"title":"Withdrawal external details","type":"object"},"vegaWithdrawal":{"properties":{"amount":{"description":"Amount to be withdrawn. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"asset":{"description":"Asset to withdraw funds from.","type":"string"},"createdTimestamp":{"description":"Timestamp for when the network started to process this withdrawal.","format":"int64","type":"string"},"ext":{"$ref":"#/components/schemas/vegaWithdrawExt","description":"Foreign chain specifics."},"id":{"description":"Unique ID for the withdrawal.","type":"string"},"partyId":{"description":"Unique party ID of the user initiating the withdrawal.","type":"string"},"ref":{"description":"Reference which is used by the foreign chain\nto refer to this withdrawal.","type":"string"},"status":{"$ref":"#/components/schemas/vegaWithdrawalStatus","description":"Status of the withdrawal."},"txHash":{"description":"Hash of the foreign chain for this transaction.","type":"string"},"withdrawnTimestamp":{"description":"Timestamp for when the withdrawal was finalised by the network.","format":"int64","type":"string"}},"title":"Withdrawal from the Vega network","type":"object"},"vegaWithdrawalStatus":{"default":"STATUS_UNSPECIFIED","description":"- STATUS_UNSPECIFIED: Default value, always invalid\n - STATUS_OPEN: Withdrawal is open and being processed by the network\n - STATUS_REJECTED: Withdrawal have been cancelled\n - STATUS_FINALIZED: Withdrawal went through and is fully finalised, the funds are removed from the\nVega network and are unlocked on the foreign chain bridge, for example, on the Ethereum network","enum":["STATUS_UNSPECIFIED","STATUS_OPEN","STATUS_REJECTED","STATUS_FINALIZED"],"title":"Status of the withdrawal","type":"string"},"vegacommandsv1OneOffTransfer":{"properties":{"deliverOn":{"description":"Unix timestamp in nanoseconds. Time at which the\ntransfer should be delivered into the To account.","format":"int64","type":"string"}},"title":"Specific details for a one off transfer","type":"object"},"vegacommandsv1RecurringTransfer":{"properties":{"dispatchStrategy":{"$ref":"#/components/schemas/vegaDispatchStrategy","description":"Optional parameter defining how a transfer is dispatched."},"endEpoch":{"description":"Last epoch at which this transfer shall be paid.","format":"uint64","type":"string"},"factor":{"description":"Factor needs to be > 0.","type":"string"},"startEpoch":{"description":"First epoch from which this transfer shall be paid.","format":"uint64","type":"string"}},"title":"Specific details for a recurring transfer","type":"object"},"vegacommandsv1Transfer":{"properties":{"amount":{"description":"Amount to be taken from the source account. This field is an unsigned integer scaled to the asset's decimal places.","type":"string"},"asset":{"description":"Asset ID of the asset to be transferred.","type":"string"},"fromAccountType":{"$ref":"#/components/schemas/vegaAccountType","description":"Account type from which the funds of the party\nshould be taken."},"oneOff":{"$ref":"#/components/schemas/vegacommandsv1OneOffTransfer"},"recurring":{"$ref":"#/components/schemas/vegacommandsv1RecurringTransfer"},"reference":{"description":"Reference to be attached to the transfer.","type":"string"},"to":{"description":"Public key of the destination account.","type":"string"},"toAccountType":{"$ref":"#/components/schemas/vegaAccountType","description":"Type of the destination account."}},"title":"Transfer initiated by a party","type":"object"},"vegaeventsv1OneOffTransfer":{"properties":{"deliverOn":{"format":"int64","type":"string"}},"type":"object"},"vegaeventsv1RecurringTransfer":{"properties":{"dispatchStrategy":{"$ref":"#/components/schemas/vegaDispatchStrategy"},"endEpoch":{"format":"uint64","type":"string"},"factor":{"type":"string"},"startEpoch":{"format":"uint64","type":"string"}},"type":"object"},"vegaeventsv1Transfer":{"properties":{"amount":{"type":"string"},"asset":{"type":"string"},"from":{"type":"string"},"fromAccountType":{"$ref":"#/components/schemas/vegaAccountType"},"id":{"type":"string"},"oneOff":{"$ref":"#/components/schemas/vegaeventsv1OneOffTransfer"},"reason":{"type":"string"},"recurring":{"$ref":"#/components/schemas/vegaeventsv1RecurringTransfer"},"reference":{"type":"string"},"status":{"$ref":"#/components/schemas/v1TransferStatus"},"timestamp":{"format":"int64","type":"string"},"to":{"type":"string"},"toAccountType":{"$ref":"#/components/schemas/vegaAccountType"}},"type":"object"}}},"tags":[{"name":"Trading Data Service (v2)"}]}